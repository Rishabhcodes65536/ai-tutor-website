%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 27_0303_Metaverse_01sim_3.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Alexandra Bataeva
%%CreationDate: 4/7/2022
%%BoundingBox: 0 0 635 500
%%HiResBoundingBox: 0 0 634.2032 500
%%CropBox: 0 0 634.2032 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.3 x585 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">27_0303_Metaverse_01sim_3</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-04-07T16:41:03+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-04-07T16:41:04+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-04-07T16:41:04+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqptc26/akX5Vrh4S1nNAcypNqNqOhLfIf1pkuAtR1cAptqsf7KE/&#xA;Og/rh8NrOtHQLDqrdowPma/ww+GwOtPctOqTdkX8cfDDE62XcFp1O48FH0H+uHwwj85Pya/SVz4j&#xA;7seAI/NzQOr+aItJsXvb6YRQJQbAEsx6Ko7k4fDDk6OOo1OUY8e8iwK5/P62tTJNcWJj0+KrPcvK&#xA;qsEHcpx419uWHwg9fP2UywxmUs0QQP5u3zv/AHqr5G/Pm08668+naFaGW1iRpJbqVvTb01IUuqEb&#xA;jmwXrj4Qq3QZ8eHHiJ8YSyj+EQlR/wA79j0gapP3VT9/9ch4YdQNZLuC9dVP7Uf3H+zHw2Y1veFR&#xA;dUgP2lYfccj4ZbBrI9bVVvrVv26fMEYOAtg1MD1VVljb7LBvkQcFNomDyK7AydirsVdirsVdirsV&#xA;dirsVdirsVdirsVU5LiCP7bgHw6n7hhAJa55Yx5lDSapGP7tC3udhkxjcaWsHQIaTUbluhCD2H9c&#xA;kIBx5aqZ8lB5JH+2xb5muSpolMnmVuFi7FWF335weQ7We8t47yW9uNPDNex2lvPN6So4jZmdU9Pi&#xA;HYCvKmWDFJmIEpPN+eOmusbWOiX0scsbSJc3DW9tb7CUhXlMjhHb6u4VXozEbDJeD3lthp5yNAJO&#xA;fzk/Ma/1Cew0jyNKLi1fhcJO8jlDU/aISJV6eOS8KHWTLJpJ44iUwRGXIkbH3d71+OSU26SSx8JS&#xA;gZ4VIajUqVDbV32rmO4zGvIWuajqtteveyCUpKHUEBWiMtWaEBdpIk2MUo+2p8VOEhnkiAgPzm0f&#xA;VNS8i3TaYZTd2DreCGAKZJVjVldF5kAfC5b6O+GEqLndl6yWDLYkY8Qqxz6Hr31X6+T5+tfy7/MH&#xA;z7psd8+p2+j6FdqfTsxzklIVuPx0WPlUrX7VM1et7RGKZgRZD2GbWanXRvi4MR/h/X3/AI2en/kR&#xA;+S8nk++n1ebWzezIJLT6rDCYoxz4O3N2Zi46ECg3zK0mpOXHdULeR7UxDFk4eZp7DfX6WfoAxSTP&#xA;cSiGNIgCeRVnJNSoACoScyHWAWhbzU7g6RLd2iLBcCQwxrej01DCb0SWoRVT1Wh+IU8cUgboiwur&#xA;mWa6hnEXK2dEDRMTXlGrnkpHwGrbCp2xUhETzwwQyTzOI4YlLySMaBVUVJJ8AMUJfLqeoxxSXT2c&#xA;cdlCZWkkkuAshgjWqyqvAx/Ga/C8i0WhJrUBTQRWm69BdqhheeB3BKw3MU1tIaAFqRzLGzceQrQY&#xA;DFmJyjyKZpqN0vVg3zH9KZEwDZHVTCMs7xp2KlAKCtQchKNOXgzmZqkVkHKdirsVdirsVdirsVWS&#xA;TxRD42A9u/3YQCWE8kY8yhJdUUbRJX3b+mTGNxJ6wfwhCS3dxJ9pyB4DYZMRAcWeecuZUck0uxV2&#xA;KpdoWrHVLFrhoTbyxz3FvLC25VreZ4uvvw5D2OEikkMW8++edX0G+jsrO3ipLEJVuJOTHdipAUFR&#xA;UU98ID2Ps57PYNZjOTJKXplXCNvt3YTqfmTzbdaZDqE2qsIZ5ZIfQgdYypQKfiWKhoeW3Lwwirey&#xA;0vY+hxZDCOIWADchxc/636GLrHEqRosaARSvPGwVeSySFWdg1OVSY1PXqMnZc6PZOlEjIY4WfIJ9&#xA;caL/ALjJr1mnLvFHey3RANvLJK4Upy6mReZqdzUMKd8he7HFmjHIIREQLMaH1Chz9xr5V7k7/KS8&#xA;9LzFNbE/Dc27UH+UjBh/wvLGTofbTBxaWM/5k/sII++nrsi8kZaVqCKVI/EbjIPlzBHv9L/LfRTd&#xA;axcCY3KwRW9rCvOdp1DF4IC5U+grPWNW2Tk3YgZOMTI7NwickgIjcn8fFiup/nB5jvb8x6XFFp9n&#xA;blfWLgTSuxAb06n4QOJFSF77Hvjwh73Q+x+ImspJMfqrv58I9wqz16BiN35u1UTRTWtwlla2VI/h&#xA;Yw2tEP2BCtFan2TSnhXbbC/kvFIkkEku7y6TBCPpPDCO3FKVDbu76+Hd3vR/y0/N7y7rPDRr27gg&#xA;1cvxg4pJDFcFjsE9QtR+1C3xdvDMuGkGKNRFRfOu2o4jl4seTxb57EV7vJ6BqHq/W9M4etx+st6n&#xA;pGicfq03994pypT/AC+OB046pePSi0ZluAsSPqTLSQi5B9XUiE6BgOZYUH7FaH7OFPX4foR+nSFr&#xA;zVFLlxHdKoX0wnAfVYG48h/eda8j48f2cCD0VtRtZLvT7q1jkEMlxDJEkpQSBC6lQxRvhala0PXF&#xA;AO6WanfXF1YNAthMLzmJPqkkKyrLHbyqzoJCWt1MqKQnNwd67EYWQG6hpVrNItiotJLZ4p5tRuJL&#xA;iONvTa7eZ5II368w8tOSr9jvviklkeBrTHSkpG7+Jp93+3lWQux0UdiUdlbmuxV2KuxV2KuxVBaj&#xA;LPGF4NxRtjTrX55ZAAuHq5yjVcktJJNTufHLXXW7FDsVSebzJbvI0Gkwvqt0rFGFuR6EbDYiW4P7&#xA;teP7Sgl/8k5Lh72VNR6Tqt4wl1e+ZRUMljYO8ESEbjlMpWeU/Sqn+TGx0W3aY8tlrNzpMkrywSRi&#xA;809pnaSTiWKTxh3Jdljco3xHbnToAAnlalDaNxs/NWuadsFuhBqkIAP+7lNvKKn/AC7YN/svuTyC&#xA;nkx/84NP56dY36jeCVoXP+TIKivyKfjjF7f2I1NZcmI/xRv5f2/Y8/0LSbnVXltUn9KFAJXBqRyH&#xA;wj4a9dzmLrdYMEQSLt77VaiOECRFnku0v6ra3F3DcSQQ3SfBBPcxGeEFXo4KBJdyOhKH6OuZMZcU&#xA;QRyKM/FMRMRIx6gGj5b2PvQWpS2z3tx9TBSzMrNBHuAFJ22JNNsmG7BGQgOL6q3TLyRefVPNemS1&#xA;oGmERPtKDH/xtieTre38Hi6LLH+jf+l9X6Htmu65pmhaTc6rqcwgsrVOcjnqewVR3ZjsB45CMSTQ&#xA;fFgLfJPmnz9qPm/zrb6refu7WKZEsbStVhhDj72P2mbufYADPGPhiQ7bsoiGpxE9Jx+9kstlzkd0&#xA;nlh9SnqLGVoxApX4gxBpt8JGYj7FPTWSRKUb51W/zBr4UwbzjI66oLRfhtraNFhjHQArUn55l4Rs&#xA;+a+1OSX5nwv4IRHCPgkkckkUiSxsUkQhkdTQhgaggjwy15p9geS/Ndt5t8veXNXcRm8Mri5QsFMd&#xA;zFbyxylFB35cqgb/AAtXNdkhwkhoIq03Rpm0OF4mdne9jZms1YEq1+C9Q9G48a+qf5eRyC9Vcajp&#xA;+mWmoajqd2LGyW4YyXN9KkcSAcYhR34qiEj4QT3wFaJ2DyPUvzA8wJqd5c2uqMtm0ztBujRCMseH&#xA;GoK0pTJ0H1vS9gaI6eHHjjfBGzy3rvRVr+anmyKnqSQXP/GSICv/ACLMePCGrL7H6GfISj7pf8Vb&#xA;0nyhrWtast2uo2kUElqyLWCRZAS3LkrBWfiV47gnIGnh+3OycWlMPClKYlfMe6ugu7T/ABeeTixT&#xA;jap4nf78omd3b6aNQCvkW92KuxV2KuxV2KqVzD6sLJ36r8xhiaLVmhxRISXMh06Sy+ZY55Gt9FgO&#xA;q3Ckq8kbBLWNhsRJckMux2Kxh3Hdclw96aYx5s80+WNGQnznraTS0qNBsqhG7gPGpMslen71hGf5&#xA;Rk4QJ5BIB6MST8xfzK84KLH8v9CGkaOv7tNUuFUBUG3wkj0UoP2UDnwyzw4x+o7suEDm9I8geXfM&#xA;OhaG1tr+sya1qMsrTPO5ZljDAD0kZzyZQQTvTr0GU5JAnYUwkbT6axgmu7a6aomtefpsppVZFoyN&#xA;4qaK3zAyFoSbXmNn5h0HUq0jkkl02epoON0oeM07n1bdFHz+kSHIpHJU876f9f8AK2oQgVdYjMnj&#xA;yiPqbfPjTAHb9ganwdbjl0Mq/wBNt+l5Z5KFwE1KS2UNcrCPQVvslzyKhum1Rmm7cPpgPMvqPa59&#xA;Mfit17y7Rrm4s+Ti1AN7JIQOcjAOxQADorAt23274Ozu0rrHP3D9qNDr7qEvcGNZvncq4+s2V2jM&#xA;jRTwsrhXBUgijCoOLVIRyQI5xkKeteeLLR/NejjSrtPUs34zCRTR0k4niyHxUMc0Gs7UljyAYz9P&#xA;Pz8nyzs/sUcMjlG52Hl5vmfzl5E1nynfK0o9ewZq218gorU3CuN+De33Zv8AQdo49THbaXUOv1Wj&#xA;yaaYPMXsWVQ6zpskAla4jjooZ0d1DLUVoQcnLGQafU9L2zps2LxOOMe8EgEe9gV86arqOoXKt8W7&#xA;24JALKm1KHc/AK7Zm44bU+W9qaoajUzyDkTt7hsPsStVZ2CqCzMaKo3JJ7DEmnXAPef+cftG83aX&#xA;fsL+1+raRdEzRLcKPWEyxstY0I5R8lPxMaVoBmqy67DOfBGVy/HVyM2hyxx+IRUfx0evqzHy7YtI&#xA;GdjPaE/WuNs9TdR7sK0Dd1WvxGg74XA6vlr/AJyS/Mo6pqP+DNMZFsdNu7mfVDbsxSa6M8nAMTWv&#xA;pR0Lb05kj9kZVMuw02KhxF5u2oy61HaRapeymyULDYaNp6iWYhBwWq1CginVqsey0NckBfP5B3Go&#xA;1+XNERkfTEACI5bPqXyj+UbDS9GbTr+3udNRIAwJq/BQvNSY+aFxvXelcnxUHdaf2twQxDFwTiRG&#xA;hyPz5fc9C8g6FqWlw30upKq3l3cvcNxbmKcag1H+VXBJ5/2g7SxarLDwr4IQrlW+/wCxkYBJAHU4&#xA;vNgJ8qhVCjoAAPozGd5EUKbxS7FXYq7FXYq7FXYqkGv6RZXlYLyET2rsJDC9eDEdnXo6/wCS1Rl+&#xA;OWzqtTDhnY6vJvM2lfnT5h1y70jT5YPLfliBzHb3cTqJJYRsrAxlpQSP2RwA6ZlRMAL5lqBATHyt&#xA;+RnkjQf9M1FTrV+Pjkur6hiDVqSId06/z8j75DLqTVk8ITHimaiN2ReY/wAwvJ3lbT0udTvFt4Cy&#xA;w28SIxZ26BI0Ub0H0AZg4dXjyz4YGy5WXs3NjjxSFD3hOdH1jTdZ0u21TTJ1ubG7TnBMvQitCCDu&#xA;CCCCDuDscyiK2cEikYSAKk0HiciTSgE8kpP1fWUls7tCogmimTgxDcoZRIhB6ijIK0zC0etOWUok&#xA;UYuz1+gGCMJRNiQTG7mt4bWWW5YLbopMpPTjTfM+IJNB12MSMhw83j/kbUNNLXkEMUsUnrFA8/EF&#xA;uAqF4gtQry+nttTNX27ocvCMg3jHn5eb6MO2fzUqkOGuX6UV5r1aSzW4tn+OO8gVIFFPhYM4lZu+&#xA;6slPlms7K0hyTE+kS7bs7TGc+LpFgmdW9GyNL221/wAy27XEPBWkk5Gv24wWeFGH+SKJ1+yAO2YW&#xA;tnLHhkY83WHFLT4DwnoPnyJ+PP32zS8uprdU9GzluyxoVhMQ4jxPqvEPuzjHni1o8Kaubmz8y6bH&#xA;Fp8o4xxSSLMJAf8AfgUUQr7Md++bDs6WOGUGRquXvdZ2rHLLCRAX399eT5o8/wBlb2PnfXrS2RY7&#xA;eG/uFhjQAKieoSqqB0CjYZ32M3EF40ckjileKVJUNHQhlPgQajJgpe1fkj/hy6sLl47GGPW7WQ+r&#xA;NQs5ikJKFCxPEDdSF8BXrnJe0ByiY3Phy6dL/He9P2J4Zidhxh6JqeuS6Y9v9UhN3qMrj6taKwQs&#xA;ARyckg8UWvxE5z+KRjISHR3ObGJxMTyKI1BodS0P/Dd24WFrRIpIFk5TcFAQSCQhXqrLVX4j4t+u&#xA;bDN2nmn6h6Y3+N3WafsjBj5+qZ/GwfO+gt5Q/Lp9V0PXpB+lkkcvK0LM80DCiKgWNh6bJRhWTclq&#xA;qtKt1PZusxmFnr+KdbOHhyMT0S38uvyc86+crieTRYW0PyndTSFdZukAme2JoscdCJJBx6hCEJ+0&#xA;2V3z4dg4WXURh7313+X3knSfJXlq18vaWzvbWokYzTlfUkklJZnYgKvVtvbGqDreMylZZCEZEdiK&#xA;AigPapOG0CJAJbtE53MY96/dvgkdk4I3MJ1lDuHYq7FXYq7FXYq7FUFrWsWOjaReatfuY7Kxhe4u&#xA;HUFiEjUsaKNydthkoQMiAOZUvJJ/zxudUvU06PRpdId1aW3kvGSRpIwafD6TMisKjkpJO+beHZwi&#xA;LJtp1GLij5jdNLPzlqSaPqVxLGLm4s4vWiNOINTxPLjTYVr8spz4RGiGjs7Rx1GohikeESNWkfl3&#xA;zTqurRX0up3gaONlcRUREjUBjXYDb5ntnNdtykOGI5F9D1HZGm0hicUaNHeyXzz+YOrXH5nfmDb2&#xA;Ok3FtY6dZrJb6bf3svoRTMjVeRG+ItzagRVBNKV9jpY/lsdmzLy6PNamX5jJQoDzfR35Jx+U9F8v&#xA;t5Z0/X7fVtYhmkn1GJZYxL6tFR2WBTyWMBVFdxXvXNpg1EsseKQovP8AaGnGPJQ3j3pxrUmpfXXj&#xA;ilAj9es6OTQxb7LsdxtTOY1mSYyTiSav+x63s/DjOHHIAWBz+9Z5fu300tJqM4Kcpy8p6CNpGeId&#xA;BuE4r88t7KkfHAH8Qpr7Y05yac94N/o+4qet6tqGooY7cKlvPZy3EkbDkyQgHixUbVkqvxV+H6CT&#xA;22LHGPPnbotPpxjHmwbX9PjsodN1LTDzlkhP1xFBUzFWJJFafHHXirdDSnyyo3IyB/AcjcGwn/8A&#xA;gHX/ADFHa39zcR2sbQqI0dX9Xid6ulBQmvSuaaOnx4TIY+RN/sd5pPazFp8fCYynO/Kvx8E0svyU&#xA;tdvrN7PMO/pRrF+LepkjkCMntnqJf3eID3kn/iU/sPyj8u2zrJ9Xd5ENUeWZ6gjof3ZUZXKYIo8n&#xA;XZvaDtHIK4oxHkB+m0Vq3lG5gQz2n7xBu0IqWA/ya9c57WdnV6sfLucnQ9oEjhy1xd/62AeePNtj&#xA;5T8tXmtXlG9BeNvBWhlnbaOMfM9fAVPbNdp8JyTEQ7PPmGOBkXzzY6ePMUNnqk+rImpa1cMsouIZ&#xA;ET6yxjZwGhE3w1nFPhHyGeg6f0YwANgA8Pm9UySdyW/8Ju0KzRanZSI8P1kEtNEPS9c2/Ks0Ua/3&#xA;op1y7j8mrhZB5FsvMXlnzNBeusBgLyWt9Cl5aO5RBymARZSxaKgcj5eOYPaOCOfCY9eY9/7eTmaH&#xA;OcOUS6cj7nvkNvaCZ7uJF9W4Vecw3LKo+EV8BXbOBNjYvbCjuoWX5fxXvmX/ABHBDI16E9L1CFEQ&#xA;HHhWvHlXjt9rNjglny4vCiPRfN12oOHFk8WX19wTHUPyc8n6prtnr2u6auoajYxmKETKfRI5cl5x&#xA;naTga8eW2526U3Wi0ngxom3mu0O0J5pWI8I+1mKoqKEQBVUUVQKAAdABme6hdih2KozS0rMzfyr+&#xA;JyvIdnM0cfUSmeVOydirsVdirsVdirsVQGv6JZa7ol9o17y+qahA9vMUPFwsileSnejL1Hvk8czC&#xA;QkOikPL9G/IjUBrEd5r+uJd21mrx2kdpb+hI/qcQZJmd5VDUWnFVpmzn2ntUY7p4j1ZvH5f03TFl&#xA;tIIR6UopJz+IupFKMT1zEOUz3LqMt452Nq3DwLz35ZtrTUdR0J5GexmADLHIyMYZKOI3KkN0oD4/&#xA;TjKIkN31/s/NHtHRRlkH1bHpuOo/HkhPOuk+XvMXlvT9OudLYQ2PAWIsBSWOihSiM3wqhAoeW3Tv&#xA;TI6PsWOM8ZnKXE8b2nMRkcXD9Bod7HPIn5da15b/ADD0vzJog+qWFqGe4s7qT1JZIyrrLHGYkkB5&#xA;IDudlP7WZWTRVIcPJ0+TDxiuT3nU9XW4vL2aExcLeFWdg/JGnIoIlYfarxND36bZrc3YcMs+ORI4&#xA;un6XYaTVSw4hDnTHbrXLjTvO0Gm6simFooWsghCKLuUBSsrFvhClqq/jx23zM0fZ2LBEmHM9Tzpr&#xA;1GsnkNS+lWhl0hBEgneKGKzf16qV9ediwC8R9riW2LbUFNs2ZEu7r8g1sx8neT3v4dO1DVSHs7aL&#xA;la2lAELsepA6/Cqlq9W+W+FqdTwkxjzPVrmej0NI40+yoX5Cma22qMAOQYm/5r+Rk86Dya2oU1ws&#xA;I/T4P6XqleQi9WnHnTt47ddslwGrTbLsgl2Kvnr/AJyq0D8vtVsbK21LzRDoHmSIPcafYy83guOY&#xA;pyuEiV2jrwKpKduo37QhijGRkBuWyWWRiIk7BhHkfTdPk8n6DI9tEzxQRzxtwWqysicpAafaPBd/&#xA;YeGdHggDjG3RRjiRyTOTy1ob27W7Wi+k0P1biCwpF631jitDt+9+Lb9WW+HFBwQ7llx5X0qeaWZw&#xA;4kme6lcq1AXvo/TmNKbVHQdBkfBixOmg9S/JrTdL9G6sbiSW7ltkgFrFcOGRIYkEXwKFXqQC9a7n&#xA;amaTtDs7EJCfCN/vb45smOPCJGnq8kkNvA0jkRwxKWY9AqqKnpmPGPQNF2k3lrzNDrDXqB09S3uZ&#xA;Y4lQN8UCNRHNfHMjPgMK8x9qSKTtkRvtKD8xXMe2BiDzUmsrVusYHy2/VkuItR08D0UX0uE/ZYqf&#xA;fcZIZC0y0cehVLO1MAYEhix6jwGRlK23Bh4AURkW92KuxV2KuxV2KuxV2KuxVB6nDyiEg6p1+Ryc&#xA;C4esx3G+583+cNUt9T8x3t5BH6cbvxG9S3pgJzPhy41zKD612HpJafSQxyNkD5XvXwtkmhWdjFbW&#xA;sSsZrq6spG9OMhlSR1b4npWgWMbj7VenbM6MjwjuFfj5vDdqSkdTkv8Ann9iOHqkwT29mqrLp80U&#xA;SyVfhFGCPUIHV5OVKceJ5d6nJd4J/iDgIO2j0izaCMyq91c2pjMqMOEcs5ZeUjE0UIh4sB88nIyl&#xA;fcD9yV1xZQWk0mpafxlulnVNO5LzmWMpVpFVuR+I0HP29xkQeKhLu3RV82W6B5QXVZXnvbOS1sXh&#xA;hiiRyQ5iiblxaoHxPxWpXt3JJzEzang2Bs7sTKnofp+lb+nbIq8E4wx0ogoKKNugzWk3za2N+Qpf&#xA;Oklnc/4oV1mDRiEypbxvy9JfXCi2eRDEJa+mWPIjr2JMq6ICWyfkz5Kk8/Dzw8c51YSCf0PUH1b1&#xA;1UKJeHHlyFK/apXth8Q1S0y/VNW03SrNrzUbmO1tU2aWVuIqew8T7DBGBkaCUg0n80/IGrXjWdnr&#xA;EJuAaKsoeAOT2RpVQMfYZZLTziLIRYSr80vyS8lfmQkEmtpNBqNpG0VrqFq4SVUY8uLBg6OvLehH&#xA;jQiuUpeTr5cj8sj/AA/HObmPSv8ARUuGUIziL4QxUE0JpnRaf+7j7m+PJBz6rFBOsDwzepISsXFC&#xA;VcgFtmG3QHrlhlSkoxTVQaEVFaHqMklV8qeerLSPMNveRJcTQxSNDctFBK6lK8JQCFo3H27jMbOB&#xA;kgYsCQX0j6ien6nIenTlzrtTrWuaCmkkAWUvsbYQLMbC3EUVzK9xJJKzVeSQ1Zgm5ofmPllszf1H&#xA;k0DLOe8Rt3n9X66RPO+X7USSDxRiD/wLCn/DZCgniyjmAfcf0H9atE0pWsihGrsA3Lb7hgLZAyI3&#xA;FLsDN2KuxV2KuxV2KuxV2KuxV2KuxVplDKVbcEUIxQRYovnr8zfKLeX9faSBT+jb8tLbHsrV+OP/&#xA;AGJO3sRmVjlYfSuwu0BqMAB+uGx/Qfx1a8o30bpb2MTi2uDJJ9ZuTwB+rkI/wu32SPTIH9uZ2KVx&#xA;N708/wC0ejMM3ij6Z/f+N0feJLNYJb6ZdSPNLW2u5Y2IIWeiQQpI+5HBace1DmQOZ4h7v0l5ykq0&#xA;7ypYaPdXN/fXk97cWNwiWcVzKSG9OUeqywn4D8P86039sSTKgOoYDHvzJe8+WdTs9T0a3vrWEW6z&#xA;L8cSgLxdTxYbAVFRsc0ueBhIg7sSKKaZSh2KpZcaJJN5itNZGoXUaWsEtudNRwLWUylSJJEpu68d&#xA;jX+NTe1KmeBXkf8AzkFqjpYaVpa14zSPcymm37teCCv/AD0bNn2bDclrmXz75guPQiiKCkzuSHoD&#xA;UKN61+YzPzGuTEPrH8p9MudO/LzQ4Lp2e5ktluJS5JI+sEyhN+nBXC07UzRZpXMltDy7zf8A8pRq&#xA;v/MTL/xI5vdP/dx9zkR5Me1G3ee1YRU+sRkSwE7D1EPJanwNKH2y2QsJIVLW4S5top468JVDAHqK&#xA;jofcd8QbCgoL/D+ni59eP1oj+8rHHNKi1lZWYgKw47r0G2R8MWjhD3L8udTXUfLcVvczVTSgIZEd&#xA;mZmRRWN5HcsSKCn0ZqNXj4J7fxOHnx2bkfQN6/Wy1TdT/GG+rwn7AABkI8Ty2X5UP8MxNh5tYM57&#xA;3wx+37eXur9Sy4iu4reV47ksVRj+8VT0HbgI8YkE8mOWGSMCRPoeYH6OF8seYfz38zafr2oWFvbR&#xA;NFaXEturyPKzt6TlCxIZRuRXpm3GIPPYdAZwEjOdkXz70x8h/nJ5i8w+ZIdKu4Y4opkkYSRPKGBR&#xA;Sw+0zA9MBxhp1mkOLGZCctvN9M6ZI8mnWsjnk7wxszHqSVBJzUTFSL1WkkZYYE8zEfcici5DsVdi&#xA;rsVdirsVdirsVdirsVSTzj5Zt/MehT6dLRZj+8tZT+xMv2W+R6H2OSjKi5/ZuulpswmOXUd4fOUa&#xA;SaXqwjvoWDWs3C6t68WIRqOlf45nQmQbD6Nq8ENXgIB2kLifuLO/r6L9baWZbeC7je/t2HL1XeZD&#xA;6KclIrx67bBtvHMwCwCN+j5nkxmEjE8waLQFreRwW0kTJeT20cVrz+NiZJS8s7kj4Ohbv8JO/Skt&#xA;42el/gMEr1T835fIM9sXhXUJJVa3/RKOIAsEB4JO7gTUZn5Doa0O/TKc2GMxXXnfvcfPlEfesi/5&#xA;y7tCp9byvIjV2CXocU+ZgTMb8j5uP+Z8kUn/ADltoBQF/L90r9ws0bD7yB+rB+SPen8yO5Gxf85Y&#xA;+SGdRLpOpIh+0yrA1Po9Va5H8lLvCfzIeo+T/O/lrzfph1DQbsXMSELPGQUlicivGRG3X2PQ9icx&#xA;smMwNFujMS5Jte2Fjf27W17bx3Nu/wBqKVQ6n6GBwRkQbDJhNz+Tf5Zre/XbnSjO7GkFq0srRhju&#xA;QkfIA178qj5DLzqMkurVknGA36/azOP64sarFbxRRoAEjLkEACgHwqQPorlG3ew4sp/hA95/UP1v&#xA;CfNpY+ZtULgBvrMnIA1FeR6GgzoNP/dx9znQvhF80py5mhYoGsIri4nZItPeUtFKzBVVmAaRST0+&#xA;M8vp9sgCASx5K8E8c8QljJKN0JBWvvRgMmDaWb/lVL/zsb27VMU0LMUqeJeMhlJHem9K5ha8ei/N&#xA;qzYxIC+heszTSPL9XtyA43ll6iMH/jY9h9Pz0wHUuJkyEy4Ic+p7v293zPmHvotPit5RPKDKUYqZ&#xA;ZPirTsCdvoGTgZE7OPqIYowPEfVR5n8fY+WPMPlj8tLjVtbvrq51KK4tryNL+OEx8BNdsSDHzjY8&#xA;SwYnfb7s2wJedwajUCMIgRox29w+KeeRPJnkux8yX0+kXF7NfaO5tpxcmP0w8ikErxRCehGJJcfW&#xA;avNLGBMREZ77PpHSP+OVZf8AGCL/AIgM0+T6j73sND/cQ/qR+5F5BynYq7FXYq7FXYq7FXYqoX19&#xA;a2FpLeXcnpW8I5SSEE0HToASclCJkaHNQEFpfmbR9SC/VpqM/wDdrIChYditfHLMmCUebiR12I5D&#xA;j4vWOiaZS5byX86PJ9QvmSzj3HGLUVUfRHL/AMan6MvxS6PY+zPaX+QkfOP6R+n5sM8nPFfetpEi&#xA;u13demltKKEJGjepKKMd9lqAPlmfiykDyC+0uh4SM8eR2l7+hQ/nDza2jaIurzXQ/S7P9V0u1jYI&#xA;RCqsGICdIwXpWvt3zK2B4a2/S8hmyiAeC3t7dX11JdXUhlnlPJ3b9XyHQDA6qUiTZUcUOxVd6Uno&#xA;+tT93y4A+JpU0+WNKzn8lPOU3lbz/p85k42N+wsr5C3FCkx4ozdf7uTi1adK5RqMfFFnCZidn2l9&#xA;YujstqwbxdkCfepZv+FzU0O9yfFn0gfiRX3k/YptWBvWm/fXUnwQxJsB34rX72Y/2Yeew5MD6DxS&#xA;9UzsAPuH6T+wKgivH3kn9M/yxKNvmzhq/cMFjuZiGQ85V7v23+h4f5ltGfzJqhd6/wCkyCtNzRjv&#xA;m+wS/dx9zPJqeACPMpf9Rj/mP4ZbxNP56XcEXcaNY3flsxXMCTJFeo6PIqsyuYmHw1G2wyk0Z79z&#xA;A62ZlyFJZBoVlbvziMi7U4+o5TfwQkr+GWg0yGtl3Bk/kaJLfzHAwdviSRSAStRwJpVaHtlGqNwL&#xA;DLq5SjRH3h6aupMy+hbKscVf3kke1PHidwWPjmq4OpcQaskcMBQ6kfo800igtmtWSFQiSqQSOpqK&#xA;VJPU/PKSTe7soYoGFR2Eg84u/wAlNEu/0hIRFK2ozRzXRDSLzltiQm4b4aGtae+Zo1g7nRfyRqIg&#xA;cMx6Qa270psNC03Tbu+ubWH0rjUJfWvG5MeTgUrQkgd+mZVvM5MspARl/Ds9a0j/AI5Vl/xgi/4g&#xA;M1OT6j730HQ/3EP6kfuReQcp2KuxV2KuxV2KuxV2Ksf8+aDrGveWrnTdIvYbG9lKsk1zE00R4Hlx&#xA;ZUeJhUgb1NPA5ZiymEuIJBpi35beWfP9nOn+LrXTovqI4Q3Gn3EsgnIBVXEUkSmMU33evsMtnqTK&#xA;JB5ukx9kCOp8bivcmj3l6TmM7pSurW3u7aW1uEEkE6NHLG24ZWFCDiGePJKEhKJoh83ebfLt35W8&#xA;xS2gLekp9Szn6c4WrTfbcfZb3zNxz6vpmk1ENdpt+oqQ7j+Nw8j8y6d5kvdWmuLiF5+RIiaIckEY&#xA;PwqAOlPfM/xhLd8713YOshkI4DMdDHcV+hKv0DrX/LFN/wAAcfEj3uH/ACNrP9Sn8i79A61/yxTf&#xA;8AcfEj3r/I2s/wBSn8i2dA1dYzLJbNFGCAWlKxip6fbK5KJB5Fpzdm6jFHinCUY95GyN1DR7qKKO&#xA;1itnkkiUc5KFVVzu4A/aNduXgBTJyobOBLLAbWgBo2qg1Fs9cgx8WPe+0vyy8132v+R9LvrqaNL8&#xA;RCC9EisXE0PwMzAMB8dA/Xvmpy4xGRFOTDUEj6o/I/rSj8xtem020vzNrS6XE8BSDUmkEHpu60Uq&#xA;1VpR+wO9O+X4ow4bIdDqtRnGqAiTLly7uvw/Ba/IXzhq/nL8v4bzUrt57i1nltprugEk/Eh0bkAB&#xA;xCOEqu5I6160ZuES9L0YjOWxND7T+oe7dj3mJVXXtRVSSBcygEksftnuak5tsP0D3OLmAEqCtai/&#xA;+rx+mkJSnwlq1+mmCVW85qjg8Q8RnfkigLv6swKx+vyHFd+HGnf3yG1uNenvnOvgpU1L+SD/AIbJ&#xA;enzTem78n2K9mLj6yn1pUW3qfUMVedKdq7ZGVVtzUnTd+T7GZ6X6H1NPQLtHU0Mn2uuYOS73dxo+&#xA;Hwxw3XmmM3mHR9JhtY9QuPq5uFldGKOUCRMod5HVSsaKZFBZyBvmNIWXf6b+7CC/LrSdP0/yvDNY&#xA;x+lHqssuqsvJm3vXMy/aLUojKtPbxrgmd28IuTyfo7ytJ+8Xka8Q22/zFcuGpk6efYWnMifV805i&#xA;jSKJIoxxRFCovgAKAZQTbt4QEQIjkF2Bk7FXYq7FXYq7FXYq7FXYq7FXYqtkZwhMa827KTQffvhD&#xA;GZIGwsse82eWLbzDp5gv7FXnjVjaXEUnxxyFaA1PpfDXqO+TiQORcrs/tTUaWfEB6TzAIN/6bh+b&#xA;wi68j+cLad4ZNGvGZDQtFC8qH5PGGU/QcyOMd76Zj7V00ogjJDfvIB+RYv8ApnSP+W63/wCRqf1y&#xA;zgPcn+VdJ/quP/Tx/Wmmkaff6zHJLo9tLqUcRCyvaI06qxFQGMYahyMtuaR2npTyy4/9NH9aWatL&#xA;Fb3culXKNHqEQDS2zqVeMgqfjU7qfi2By7DHr0eR9su1sMtL4WOQlKUhyN7DdMNPsvLV1YpcajqM&#xA;lrcA+m6LEzjb7JqobqozINvkuWeQH0xse9X/AEV5G/6vcv8AyIk/5owbtfiZv5v2s1/Li/0mymm0&#xA;rRtRe9luj6yQurRUKL8ZXmFU1WlfllWWIO5THJnPKP2/gM+u/LWgawtvJ5j061v/AEWVgl7HFMiF&#xA;Wr+0tMw59wdnpiY1KZo9d/1UyqGBJ0VfT9KxjASC3A4BlUUqVFPh/lXKL4fe7cR8Xc/R0Hf5ny7h&#xA;83jvmIIuv6kqABVuZQFGwHxnbN3h+ge5ozx4ZV0UYm04Rr6iSF/2iKUr9+SPE6vJHU8R4THhTS3F&#xA;u2h3TIGFmsqeqp+2W6LT23yo3xjvauDV3zh+PglvPSv5Jfw/rlnqTwavvh9v6kZpL2X6Ttvqqutw&#xA;XAiZ6cQx23oTkMgPCb5KYavvh+Pgze7ttRuNPFszqJZXVZ5IyVpDyBk4nY8ilVFOla5riRezkYhP&#xA;h9dcXkj7DStP0f1Nau72cxRQMii6k9SO3iLB34Mw9T94UWvJ26CmUSNmnfaLDKYjGIuRebefvz3u&#xA;4pbXTvKcaRvdTem2qXaF1CqjSH04aru3GgLn6MyMGnBsy6Dk9OPZ2Y4BkkIyySrvrYn4nbl9rK/y&#xA;h8+6r5psNRttYSL9J6TLGklxApSOaKZC0b8CW4v8LBgDTuOtBDUYoxox5F1Gv0Z02Y4yeKuvvZ/m&#xA;M4bsVdirsVdirsVdirsVdirsVdirsVacOVPAgNTYkVFflUYoldbc1D078biaNj4GMj8Q22SsNPDl&#xA;H8Q+X7XMt8+xdIR3ZAXb6OVAPpBx2QRlPUR925+39RfLv/OQ/kXyp5c8waB+hrAWg1RpnvlR5CJG&#xA;EkY2VmKp9s7IAM2OlySkDbTlxiFAPojyp5I0HyzppstJtRp1o7mWS3hkkPxnu8zs0rkDbdqeAzBn&#xA;lMj3s4YDVyNeQNAfHmfnXk+Pp9XGseftd1RWLx3k1xLESxY+m0w9McjUmiUGbaAqIDrtVy+L0nyi&#xA;NeOlAWmm2txbFn4zS8Q5YfzfEKiu2Jp0Oo8Pj9UiCm1PN3/VksPvX/mrBs4/7r+dJUtpPNsU8bnR&#xA;rNVVhyaNlV+PfieXWmBf3P8AOk9Z0qG0KW7xDmKjjI4+Lr75g5Cd7d9oseOomO/mebJ8xHpHgfmy&#xA;WSPzTqvBqf6TL/xI50OnH7uPubDijIbhK/rdx/P+A/pl3CGv8rj7vvZXo3OXyBr0x+KaKWAo3gOa&#xA;V9ulcw8m2aI97E6XHY2+9in1u4/n/Af0zM4Qy/K4+770foF3L+ndN5nkn1qHktAKj1FqMrzR9B9x&#xA;U6XHXL73vS2NqDURj6ST+s5z3GWgaaA6IDzZoZ13y7e6Usghe5QCOQ1oGRg61p2qu+MTRt2fZ+q/&#xA;L545Kvh/seRad+Q2p6nI0HmB47awVgSIm9SVypqGjK04f6xNR4ZkDUcJuPN6rtH2g008fDGPGT37&#xA;V+m/d83q/lHyX5e8paa1holuYY5X9W4mkd5ZppOIXnJI5ZmNB8h2AynLmlM2XjMkzORkeZ+P37p5&#xA;lbB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVSmhjchnd1VeyuyD6eJGEFqyYwdyT8yPuWLbGn7q5lVO&#xA;wBV/xdXP44eLyYDD/NnKvgfvBL54/wCcoovS8w+USXeVj69Sx8JYegFFH0DM/SGwWnLDhI3JPn+K&#xA;ezefb0aT5H1zWLoh7i2sp3gB3RJWQrEqg7fbKjl1/VmJj3kAGZw3Hiyby+we79fN8O6bfvY3SzqO&#xA;QpxdelVPbNw4eSHEKet/kxNF5i89WVpAsnG2V7yZW2UCIfCTQn/djLlGeXDFx8ejlKXRZ+a0P+D/&#xA;ADjc6fN6q29wBd2ZT7BilJ2G/wCwwZfow4Z8cbRk0Uonow7/ABjafzz/AOf+yy2mv8qfJ9I/kH5h&#xA;TzD5TBb1OWlzG3DSKRzUgOhDdDTlx69s12q2l73ZaTTEUZdHqeYbsnhP5ieTPNVlqmoa890qaRLc&#xA;SOSBEzqJXAiAXjX9rNtg1URERvo5mj0888xjh9ReX2HmZrm+hsf0hKLlVYXa+glBIgFeJ49K1zKO&#xA;WgCSun088ufwI/3gu/hze1+V/KOuRflhqw1S6q+o2sN7E8RVaKkYmNDGAfipTNfk1AOSJ7mHgy8U&#xA;Yz9XFw/G6eF3fmG3tNWi0+SW+ZzPUssh4mOQEIu7V+EstflmdHICL3bdVpZYdSNOd5Ejfp6nqXkf&#xA;8s9Z1iGw1y21UpBFes8kUks3P04i3FNgRWvE9cxsmsjy3Tr9JLTZDjkbPk99zVOA7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq8q8zfnBq0eo3WnaF5E1XXJbOaSD628DpbF42KF43VJuSErsf&#xA;hrmVDDtZkA42QiWxjxUw+/1r/nJbXGrpXlqHQkPR4lgilpt9prqQ+PZRlw8IczbQcJJsREfds8y8&#xA;/eR/zbttQsJfM4uL69uuX1ZkkNz6XFlBqY+Sx1JB2zIx5YEbMThMenNP/PVn/wA5BaR5Wl03zRLL&#xA;f+X7ySOCQmSC6dnVvVQc0Juafuq77eOV4ziMrjzcgRydRxD8d27zi2sUUf6Xot0R+08fqD/hWU/r&#xA;y4k9C52nlpx/e4Z++Mj9xH6We/lt5ytfJGozanpWl3Mz3UfoTrPDIx4BuRCsn2TyX3yjLAzFEh2w&#xA;h2WY3EZon3Wzz84G0zz1+Xmi+b5tNvbGW2u3txF6dZWilU8iNqlOcS8SVHfKcFwkY7OBDT6aWSsk&#xA;p+GOsR6vdRunktnDoFpQx6XdM4/bkt5HNfH4gQPozIPEer0Gl1PZWD6ccie+UTI/b+hlPl78x9X8&#xA;vSvJpS3sAlp6sRtmZHC9KqykbV69cqlhvnTl6vtbs/UADJGZrl6Ts9M8n/n9e6pqlnpV7oNzNPdy&#xA;LCk1tDIlC23JkkqtB1Y8wAMpnpqF285qcWk54pT90o/p/YzX827e/n8jXqWFlPqFxzhItrVPUlIE&#xA;q1KpUFqe2U4vqY9layOnzjJIEgXy58vMh89LovmpZGlXydrQlfZnFgwY/M5mbfzh83p4+02kEjIY&#xA;58R5moX/ALpfd6d56nsprVfLGvqJY2iFbOXiOSlegPTBUe8MM/tJpskJREJgyBF1Dr/nKZ0bzQ8q&#xA;yN5N1tpU+w7ae9R8iemHb+cPmzl7S6QyEjjmZDkahf8AukQln54ReKeVtfVfBbOQD8DgqPeGR9qN&#xA;MecJ/KH/ABSa+WW8/wBr5h06ePy5r0XG4i5s9s8acC4DB2dgoUjry2pglGNcw4+p9oNJmxyh4c/U&#xA;O6G3n9XR9NZgvGuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:024ac79a-ece6-f74a-ae3f-0047c7909730</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:024ac79a-ece6-f74a-ae3f-0047c7909730</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a5209c54-8994-b441-8cfd-95384a8c6405</stRef:instanceID>
            <stRef:documentID>xmp.did:a5209c54-8994-b441-8cfd-95384a8c6405</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:313f361b-1eb9-5d43-af2e-873c26bda070</stEvt:instanceID>
                  <stEvt:when>2022-04-06T10:25:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:024ac79a-ece6-f74a-ae3f-0047c7909730</stEvt:instanceID>
                  <stEvt:when>2022-04-07T16:41:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>634.203135</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
634.203 500 li
634.203 0 li
cp
clp
634.203 500 mo
0 500 li
0 0 li
634.203 0 li
634.203 500 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
179.92 351.616 mo
176.497 351.616 173.702 350.866 170.96 350.13 cv
166.172 348.845 161.649 347.632 153.961 350.102 cv
153.68 350.194 153.379 350.037 153.29 349.757 cv
153.199 349.476 153.354 349.175 153.634 349.085 cv
161.622 346.519 166.51 347.831 171.237 349.099 cv
176.026 350.385 180.549 351.599 188.237 349.128 cv
195.925 346.657 198.895 343.036 202.039 339.202 cv
205.142 335.418 208.352 331.505 216.339 328.938 cv
224.326 326.371 229.213 327.684 233.94 328.953 cv
238.728 330.238 243.25 331.452 250.938 328.982 cv
258.625 326.513 261.594 322.891 264.738 319.058 cv
267.841 315.273 271.049 311.36 279.037 308.794 cv
287.023 306.228 291.911 307.539 296.637 308.809 cv
301.425 310.093 305.947 311.308 313.635 308.838 cv
321.322 306.368 324.291 302.747 327.434 298.913 cv
330.537 295.129 333.745 291.216 341.731 288.649 cv
349.719 286.084 354.607 287.396 359.333 288.664 cv
364.121 289.949 368.643 291.163 376.331 288.693 cv
384.018 286.224 386.987 282.603 390.13 278.77 cv
393.233 274.985 396.441 271.072 404.428 268.506 cv
412.417 265.939 417.303 267.252 422.029 268.521 cv
426.817 269.806 431.34 271.02 439.027 268.55 cv
446.714 266.08 449.684 262.459 452.827 258.625 cv
455.93 254.841 459.138 250.928 467.125 248.361 cv
475.111 245.795 479.999 247.107 484.725 248.376 cv
489.513 249.662 494.035 250.875 501.722 248.406 cv
502.004 248.315 502.303 248.471 502.393 248.751 cv
502.483 249.031 502.329 249.332 502.048 249.422 cv
494.063 251.989 489.175 250.677 484.449 249.407 cv
479.661 248.122 475.139 246.908 467.452 249.377 cv
459.765 251.848 456.795 255.469 453.652 259.302 cv
450.549 263.087 447.34 267 439.354 269.565 cv
431.368 272.132 426.48 270.82 421.753 269.551 cv
416.965 268.267 412.442 267.052 404.755 269.521 cv
397.068 271.992 394.099 275.612 390.956 279.446 cv
387.853 283.23 384.644 287.144 376.657 289.71 cv
368.671 292.276 363.783 290.964 359.056 289.695 cv
354.268 288.41 349.746 287.196 342.058 289.666 cv
334.371 292.136 331.402 295.757 328.259 299.591 cv
325.156 303.375 321.948 307.288 313.961 309.854 cv
305.975 312.421 301.087 311.108 296.36 309.84 cv
291.573 308.554 287.05 307.34 279.363 309.81 cv
271.676 312.28 268.707 315.9 265.563 319.734 cv
262.46 323.519 259.251 327.432 251.264 329.998 cv
243.276 332.564 238.39 331.253 233.663 329.983 cv
228.876 328.698 224.353 327.484 216.666 329.954 cv
208.978 332.425 206.008 336.046 202.864 339.88 cv
199.761 343.664 196.551 347.577 188.563 350.144 cv
185.208 351.223 182.399 351.616 179.92 351.616 cv
cp
.500725 0 .190341 0 cmyk
f
182.383 367.778 mo
178.959 367.779 176.165 367.028 173.423 366.293 cv
168.635 365.008 164.111 363.794 156.424 366.264 cv
156.143 366.356 155.842 366.199 155.752 365.919 cv
155.662 365.639 155.817 365.338 156.097 365.248 cv
164.086 362.681 168.973 363.993 173.7 365.262 cv
178.489 366.547 183.012 367.761 190.7 365.291 cv
198.388 362.82 201.358 359.199 204.502 355.365 cv
207.605 351.581 210.814 347.667 218.802 345.102 cv
226.789 342.535 231.676 343.847 236.403 345.116 cv
241.191 346.4 245.713 347.615 253.4 345.145 cv
261.088 342.675 264.058 339.054 267.201 335.221 cv
270.304 331.436 273.513 327.522 281.499 324.956 cv
289.486 322.391 294.374 323.702 299.101 324.971 cv
303.888 326.256 308.41 327.47 316.098 325.001 cv
323.785 322.53 326.753 318.91 329.896 315.076 cv
333 311.292 336.208 307.379 344.194 304.813 cv
352.182 302.247 357.069 303.559 361.796 304.827 cv
366.583 306.112 371.106 307.326 378.794 304.857 cv
386.481 302.387 389.45 298.766 392.593 294.933 cv
395.696 291.147 398.905 287.234 406.891 284.669 cv
414.878 282.102 419.766 283.414 424.492 284.684 cv
429.281 285.969 433.804 287.182 441.49 284.713 cv
449.177 282.242 452.147 278.621 455.29 274.788 cv
458.393 271.004 461.602 267.09 469.588 264.524 cv
477.574 261.958 482.461 263.27 487.188 264.539 cv
491.976 265.824 496.499 267.038 504.185 264.569 cv
504.467 264.478 504.766 264.634 504.856 264.914 cv
504.946 265.194 504.792 265.495 504.511 265.585 cv
496.526 268.151 491.639 266.839 486.912 265.57 cv
482.124 264.284 477.601 263.071 469.915 265.54 cv
462.228 268.011 459.259 271.632 456.115 275.465 cv
453.012 279.249 449.804 283.163 441.817 285.729 cv
433.831 288.295 428.942 286.983 424.216 285.714 cv
419.427 284.429 414.904 283.216 407.218 285.685 cv
399.53 288.154 396.562 291.775 393.419 295.609 cv
390.315 299.394 387.107 303.307 379.121 305.873 cv
371.133 308.439 366.246 307.127 361.519 305.858 cv
356.731 304.573 352.208 303.359 344.521 305.829 cv
336.834 308.299 333.865 311.92 330.722 315.753 cv
327.619 319.538 324.411 323.451 316.424 326.017 cv
308.438 328.583 303.551 327.271 298.823 326.002 cv
294.036 324.717 289.513 323.503 281.826 325.973 cv
274.139 328.442 271.17 332.063 268.026 335.898 cv
264.923 339.682 261.714 343.595 253.727 346.161 cv
245.74 348.728 240.853 347.416 236.126 346.146 cv
231.339 344.861 226.817 343.648 219.129 346.117 cv
211.44 348.588 208.471 352.209 205.327 356.042 cv
202.224 359.827 199.015 363.74 191.027 366.307 cv
187.671 367.385 184.862 367.778 182.383 367.778 cv
f
193.965 383.822 mo
190.543 383.822 187.748 383.072 185.006 382.337 cv
180.218 381.052 175.695 379.839 168.006 382.309 cv
167.726 382.4 167.425 382.244 167.335 381.963 cv
167.245 381.683 167.399 381.382 167.68 381.292 cv
175.666 378.725 180.555 380.036 185.283 381.306 cv
190.071 382.591 194.594 383.805 202.282 381.334 cv
209.971 378.864 212.94 375.243 216.084 371.409 cv
219.188 367.625 222.397 363.711 230.385 361.145 cv
238.372 358.579 243.259 359.891 247.985 361.159 cv
252.774 362.444 257.296 363.658 264.983 361.189 cv
272.671 358.719 275.64 355.098 278.783 351.265 cv
281.887 347.479 285.095 343.566 293.082 341 cv
301.069 338.435 305.956 339.746 310.683 341.015 cv
315.471 342.301 319.993 343.514 327.68 341.045 cv
335.367 338.575 338.336 334.954 341.479 331.12 cv
344.582 327.336 347.791 323.423 355.777 320.856 cv
363.765 318.291 368.651 319.603 373.378 320.871 cv
378.166 322.156 382.689 323.37 390.377 320.9 cv
398.064 318.431 401.032 314.81 404.175 310.977 cv
407.279 307.191 410.487 303.278 418.474 300.713 cv
426.46 298.146 431.349 299.458 436.075 300.727 cv
440.863 302.012 445.386 303.225 453.073 300.756 cv
460.76 298.286 463.729 294.665 466.872 290.832 cv
469.975 287.048 473.184 283.134 481.17 280.568 cv
489.156 278.002 494.044 279.314 498.77 280.583 cv
503.559 281.868 508.08 283.082 515.768 280.612 cv
516.049 280.521 516.349 280.678 516.439 280.957 cv
516.529 281.238 516.375 281.539 516.094 281.629 cv
508.107 284.195 503.22 282.883 498.494 281.614 cv
493.706 280.328 489.183 279.114 481.497 281.584 cv
473.81 284.055 470.841 287.675 467.698 291.509 cv
464.595 295.293 461.386 299.206 453.399 301.772 cv
445.412 304.339 440.525 303.026 435.798 301.758 cv
431.01 300.473 426.488 299.259 418.8 301.728 cv
411.113 304.198 408.144 307.819 405.001 311.653 cv
401.898 315.437 398.69 319.351 390.703 321.917 cv
382.715 324.483 377.828 323.171 373.102 321.902 cv
368.313 320.617 363.79 319.403 356.104 321.873 cv
348.417 324.343 345.448 327.964 342.305 331.797 cv
339.202 335.582 335.993 339.495 328.007 342.06 cv
320.02 344.628 315.133 343.315 310.406 342.046 cv
305.618 340.761 301.096 339.547 293.409 342.017 cv
285.721 344.486 282.752 348.107 279.609 351.941 cv
276.505 355.725 273.297 359.639 265.31 362.205 cv
257.324 364.772 252.436 363.46 247.709 362.19 cv
242.92 360.905 238.398 359.691 230.711 362.161 cv
223.023 364.632 220.053 368.253 216.91 372.086 cv
213.806 375.871 210.597 379.784 202.609 382.351 cv
199.253 383.429 196.444 383.822 193.965 383.822 cv
f
196.429 399.985 mo
193.006 399.985 190.211 399.235 187.469 398.5 cv
182.681 397.215 178.158 396.001 170.469 398.471 cv
170.187 398.563 169.888 398.406 169.798 398.126 cv
169.707 397.846 169.862 397.545 170.143 397.455 cv
178.131 394.888 183.02 396.199 187.746 397.469 cv
192.535 398.754 197.058 399.968 204.746 397.497 cv
212.434 395.027 215.403 391.406 218.547 387.572 cv
221.651 383.787 224.86 379.874 232.848 377.308 cv
240.834 374.742 245.722 376.054 250.449 377.322 cv
255.237 378.607 259.759 379.821 267.446 377.352 cv
275.134 374.882 278.103 371.261 281.246 367.428 cv
284.349 363.643 287.558 359.729 295.545 357.163 cv
303.531 354.598 308.419 355.909 313.146 357.178 cv
317.934 358.463 322.456 359.677 330.143 357.207 cv
337.83 354.737 340.799 351.116 343.942 347.283 cv
347.045 343.498 350.253 339.585 358.24 337.02 cv
366.228 334.453 371.114 335.765 375.841 337.034 cv
380.629 338.319 385.151 339.533 392.839 337.063 cv
400.527 334.593 403.496 330.973 406.639 327.139 cv
409.742 323.355 412.95 319.441 420.937 316.875 cv
428.923 314.31 433.811 315.621 438.538 316.89 cv
443.326 318.175 447.848 319.389 455.536 316.919 cv
463.223 314.449 466.192 310.828 469.335 306.995 cv
472.438 303.21 475.647 299.297 483.634 296.73 cv
491.619 294.165 496.507 295.478 501.233 296.746 cv
506.021 298.031 510.543 299.245 518.23 296.775 cv
518.513 296.685 518.811 296.841 518.901 297.12 cv
518.992 297.401 518.837 297.702 518.557 297.792 cv
510.571 300.358 505.684 299.046 500.957 297.776 cv
496.169 296.491 491.647 295.278 483.96 297.747 cv
476.273 300.217 473.304 303.838 470.161 307.672 cv
467.058 311.456 463.849 315.369 455.862 317.936 cv
447.875 320.502 442.987 319.189 438.261 317.921 cv
433.473 316.636 428.951 315.421 421.264 317.892 cv
413.576 320.361 410.607 323.982 407.464 327.815 cv
404.361 331.6 401.152 335.514 393.166 338.079 cv
385.178 340.646 380.291 339.334 375.564 338.065 cv
370.777 336.779 366.254 335.565 358.567 338.035 cv
350.879 340.506 347.911 344.126 344.768 347.96 cv
341.665 351.744 338.456 355.657 330.47 358.224 cv
322.483 360.79 317.596 359.479 312.869 358.209 cv
308.082 356.923 303.559 355.71 295.872 358.18 cv
288.184 360.649 285.215 364.27 282.072 368.104 cv
278.969 371.889 275.76 375.802 267.773 378.368 cv
259.786 380.935 254.898 379.622 250.172 378.353 cv
245.384 377.068 240.862 375.854 233.174 378.323 cv
225.486 380.794 222.516 384.415 219.373 388.249 cv
216.269 392.033 213.06 395.947 205.072 398.514 cv
201.717 399.592 198.908 399.985 196.429 399.985 cv
f
521.777 350.646 mo
521.822 350.768 521.857 350.894 521.896 351.018 cv
521.927 351.113 521.961 351.207 521.988 351.304 cv
522.027 351.446 522.057 351.591 522.088 351.735 cv
522.149 352.001 li
522.179 352.163 522.197 352.326 522.217 352.49 cv
522.249 352.716 li
522.271 352.956 522.283 353.199 522.284 353.443 cv
522.287 355.404 521.557 357.07 520.368 358.188 cv
520.024 358.512 519.644 358.788 519.232 359.012 cv
514.726 361.464 li
514.948 361.521 li
515.205 361.583 515.464 361.637 515.728 361.674 cv
515.964 361.707 516.199 361.727 516.431 361.739 cv
516.648 361.744 li
516.809 361.748 516.968 361.748 517.125 361.742 cv
517.364 361.729 li
517.518 361.718 517.669 361.702 517.82 361.682 cv
518.035 361.652 li
518.221 361.622 518.403 361.584 518.583 361.54 cv
518.677 361.52 li
518.89 361.465 519.098 361.398 519.302 361.324 cv
519.479 361.255 li
519.624 361.197 519.767 361.137 519.908 361.07 cv
520.028 361.014 520.148 360.958 520.265 360.895 cv
520.264 360.895 li
520.265 360.895 li
503.958 369.765 li
503.7 369.898 li
503.602 369.94 li
503.461 370.007 503.317 370.068 503.171 370.125 cv
502.996 370.195 li
502.792 370.269 502.583 370.335 502.371 370.391 cv
502.358 370.395 li
502.277 370.411 li
502.097 370.455 501.915 370.492 501.729 370.523 cv
501.512 370.553 li
501.362 370.572 501.211 370.589 501.059 370.599 cv
500.818 370.612 li
500.661 370.618 500.502 370.618 500.342 370.614 cv
500.124 370.609 li
499.892 370.598 499.658 370.577 499.421 370.544 cv
499.158 370.507 498.898 370.454 498.641 370.393 cv
498.418 370.334 li
498.226 370.282 498.035 370.224 497.846 370.159 cv
497.64 370.089 li
497.402 370 497.167 369.905 496.937 369.797 cv
496.916 369.786 li
496.731 369.69 li
496.542 369.595 496.354 369.498 496.171 369.391 cv
495.907 369.223 li
495.79 369.149 495.671 369.08 495.557 369.002 cv
495.489 368.947 li
495.176 368.728 494.875 368.49 494.588 368.234 cv
494.531 368.189 li
494.396 368.054 li
494.188 367.859 493.987 367.656 493.793 367.444 cv
493.666 367.315 li
493.574 367.199 li
493.365 366.956 493.166 366.705 492.978 366.443 cv
492.903 366.348 li
492.889 366.324 li
492.667 366.007 492.467 365.675 492.278 365.335 cv
492.212 365.228 li
492.154 365.12 492.104 365.008 492.05 364.898 cv
492.005 364.808 491.958 364.718 491.915 364.625 cv
491.822 364.423 491.736 364.217 491.655 364.009 cv
491.583 363.83 li
491.57 363.801 li
491.514 363.646 491.469 363.487 491.419 363.33 cv
491.38 363.204 491.334 363.081 491.299 362.953 cv
491.25 362.777 491.214 362.598 491.174 362.418 cv
491.147 362.296 491.114 362.176 491.091 362.053 cv
491.054 361.855 491.032 361.654 491.007 361.454 cv
490.993 361.347 490.972 361.24 490.962 361.133 cv
490.933 360.823 490.917 360.511 490.917 360.197 cv
490.911 356.938 492.482 354.299 494.854 353.009 cv
511.16 344.138 li
509.531 345.024 508.295 346.557 507.673 348.479 cv
512.188 346.024 li
512.385 345.922 li
512.567 345.832 512.756 345.755 512.949 345.686 cv
513.065 345.649 li
513.183 345.61 513.3 345.568 513.421 345.537 cv
513.528 345.51 513.64 345.491 513.75 345.47 cv
513.883 345.442 li
514.14 345.398 514.403 345.374 514.672 345.366 cv
514.845 345.365 li
515.125 345.365 515.408 345.378 515.697 345.419 cv
515.996 345.461 516.287 345.53 516.575 345.612 cv
516.796 345.681 li
517.06 345.766 517.319 345.863 517.571 345.979 cv
517.622 345.999 li
517.638 346.007 li
517.778 346.08 li
517.925 346.154 518.071 346.23 518.213 346.313 cv
518.416 346.442 li
518.684 346.612 li
518.738 346.655 li
518.981 346.827 519.215 347.012 519.439 347.211 cv
519.484 347.246 li
519.587 347.35 li
519.751 347.503 519.91 347.663 520.062 347.83 cv
520.161 347.93 li
520.349 348.15 li
520.485 348.316 520.615 348.488 520.739 348.665 cv
520.752 348.687 li
520.925 348.935 521.083 349.193 521.229 349.46 cv
521.28 349.542 li
521.327 349.646 li
521.493 349.966 521.646 350.293 521.771 350.632 cv
521.777 350.646 li
cp
0 .918029 .0663767 0 cmyk
f
522.283 353.446 mo
522.283 355.406 521.553 357.073 520.366 358.189 cv
519.171 359.306 517.54 359.87 515.723 359.613 cv
513.905 359.362 512.26 358.34 511.065 356.88 cv
509.878 355.428 509.141 353.554 509.134 351.594 cv
509.134 349.626 509.863 347.966 511.051 346.843 cv
512.239 345.734 513.877 345.162 515.694 345.42 cv
517.511 345.677 519.149 346.7 520.344 348.152 cv
521.539 349.611 522.276 351.479 522.283 353.446 cv
cp
524.193 353.711 mo
524.186 348.653 520.38 344.018 515.687 343.359 cv
511.001 342.701 507.209 346.271 507.216 351.329 cv
507.231 356.387 511.037 361.016 515.723 361.674 cv
520.409 362.331 524.2 358.776 524.193 353.711 cv
cp
1 .987304 .215732 .195529 cmyk
f
78.1871 220.166 mo
78.1617 220.038 78.1469 219.909 78.1279 219.78 cv
78.1133 219.681 78.0937 219.583 78.0825 219.483 cv
78.0664 219.337 78.0605 219.189 78.0523 219.041 cv
78.0469 218.95 78.0361 218.86 78.0342 218.769 cv
78.0302 218.604 78.0382 218.44 78.044 218.275 cv
78.0488 218.048 li
78.065 217.807 78.0913 217.565 78.1294 217.324 cv
78.436 215.387 79.4208 213.857 80.7724 212.941 cv
81.1627 212.677 81.582 212.464 82.024 212.308 cv
86.8613 210.601 li
86.6514 210.508 li
86.4072 210.406 86.1597 210.313 85.9053 210.234 cv
85.6767 210.164 85.4487 210.107 85.2217 210.059 cv
85.0073 210.019 li
84.8495 209.99 84.6924 209.965 84.5361 209.946 cv
84.2983 209.921 li
84.1451 209.907 83.9927 209.899 83.8409 209.895 cv
83.6235 209.891 li
83.4356 209.891 83.2495 209.899 83.0645 209.914 cv
82.9688 209.92 li
82.75 209.94 82.5342 209.973 82.3209 210.014 cv
82.1353 210.055 li
81.9829 210.088 81.832 210.125 81.6826 210.169 cv
81.5551 210.206 81.4267 210.242 81.3018 210.286 cv
81.3027 210.285 li
81.3018 210.286 li
98.8067 204.107 li
98.898 204.075 98.9902 204.045 99.0831 204.017 cv
99.1871 203.99 li
99.3365 203.947 99.4878 203.91 99.6407 203.876 cv
99.8251 203.835 li
100.039 203.795 100.254 203.762 100.474 203.741 cv
100.486 203.739 li
100.569 203.736 li
100.753 203.721 100.94 203.713 101.128 203.712 cv
101.347 203.717 li
101.498 203.722 101.649 203.729 101.802 203.743 cv
102.042 203.768 li
102.198 203.787 102.354 203.812 102.512 203.841 cv
102.726 203.881 li
102.954 203.93 103.181 203.985 103.41 204.056 cv
103.664 204.135 103.912 204.228 104.156 204.33 cv
104.367 204.423 li
104.549 204.504 104.728 204.592 104.904 204.686 cv
105.097 204.788 li
105.318 204.913 105.535 205.044 105.745 205.186 cv
105.764 205.201 li
105.931 205.325 li
106.103 205.449 106.273 205.575 106.437 205.71 cv
106.671 205.917 li
106.775 206.008 106.881 206.095 106.981 206.191 cv
107.04 206.255 li
107.314 206.522 107.573 206.804 107.817 207.102 cv
107.866 207.155 li
107.977 207.311 li
108.152 207.535 108.319 207.768 108.477 208.008 cv
108.582 208.155 li
108.654 208.284 li
108.822 208.558 108.978 208.837 109.123 209.125 cv
109.182 209.231 li
109.192 209.256 li
109.361 209.604 109.506 209.965 109.639 210.331 cv
109.687 210.446 li
109.727 210.562 109.759 210.681 109.795 210.797 cv
109.825 210.895 109.857 210.99 109.885 211.089 cv
109.945 211.303 109.997 211.52 110.044 211.737 cv
110.088 211.926 li
110.095 211.957 li
110.127 212.118 110.145 212.282 110.169 212.445 cv
110.189 212.576 110.214 212.705 110.229 212.837 cv
110.249 213.019 110.256 213.202 110.267 213.385 cv
110.274 213.51 110.289 213.634 110.291 213.759 cv
110.296 213.96 110.287 214.161 110.28 214.363 cv
110.276 214.472 110.28 214.579 110.273 214.688 cv
110.253 214.998 110.219 215.309 110.17 215.619 cv
109.66 218.837 107.691 221.195 105.146 222.094 cv
87.6406 228.273 li
89.3891 227.654 90.852 226.337 91.77 224.537 cv
86.9243 226.247 li
86.7128 226.317 li
86.5185 226.377 86.3203 226.423 86.1187 226.461 cv
85.9985 226.478 li
85.876 226.498 85.7539 226.521 85.6289 226.532 cv
85.5186 226.543 85.4063 226.544 85.2944 226.548 cv
85.1582 226.554 li
84.8975 226.556 84.6333 226.538 84.3667 226.504 cv
84.1957 226.477 li
83.92 226.433 83.6426 226.375 83.3628 226.289 cv
83.0747 226.201 82.7983 226.086 82.5268 225.959 cv
82.3188 225.857 li
82.0722 225.731 81.832 225.595 81.6021 225.439 cv
81.5547 225.412 li
81.5401 225.401 li
81.4135 225.307 li
81.2803 225.211 81.1479 225.112 81.0206 225.008 cv
80.8409 224.849 li
80.603 224.639 li
80.5562 224.587 li
80.3433 224.38 80.1412 224.16 79.9511 223.928 cv
79.9137 223.887 li
79.8281 223.767 li
79.69 223.59 79.5591 223.407 79.4351 223.218 cv
79.3531 223.104 li
79.2022 222.857 li
79.0943 222.67 78.9927 222.48 78.8985 222.286 cv
78.8887 222.263 li
78.7574 221.99 78.6431 221.71 78.54 221.424 cv
78.5035 221.335 li
78.4732 221.224 li
78.3593 220.883 78.2612 220.536 78.1909 220.182 cv
78.1871 220.166 li
.426215 .547295 0 0 cmyk
f
78.1309 217.321 mo
78.4409 215.386 79.4253 213.855 80.7744 212.941 cv
82.1309 212.028 83.8306 211.729 85.584 212.271 cv
87.3389 212.805 88.8018 214.075 89.7505 215.705 cv
90.6934 217.327 91.124 219.295 90.8208 221.231 cv
90.5098 223.174 89.5264 224.697 88.1763 225.618 cv
86.8281 226.525 85.1201 226.831 83.3662 226.289 cv
81.6128 225.747 80.1572 224.479 79.2075 222.854 cv
78.2588 221.225 77.8267 219.265 78.1309 217.321 cv
cp
76.2866 216.758 mo
75.4932 221.753 78.5176 226.933 83.0474 228.325 cv
87.5703 229.716 91.8789 226.791 92.6724 221.796 cv
93.4585 216.8 90.4331 211.627 85.9102 210.235 cv
81.3877 208.844 77.0811 211.755 76.2866 216.758 cv
cp
1 .987304 .215732 .195529 cmyk
f
460.469 243.177 mo
460.469 243.177 li
461.548 243.177 462.432 242.293 462.432 241.214 cv
462.432 227.332 li
462.432 226.253 461.548 225.369 460.469 225.369 cv
459.389 225.369 458.505 226.253 458.505 227.332 cv
458.505 241.214 li
458.505 242.293 459.389 243.177 460.469 243.177 cv
cp
.426215 .547295 0 0 cmyk
f
466.146 237.063 mo
454.517 237.063 li
453.75 237.063 453.123 236.435 453.123 235.668 cv
453.123 234.9 453.75 234.273 454.517 234.273 cv
466.146 234.273 li
466.914 234.273 467.541 234.9 467.541 235.668 cv
467.541 236.435 466.914 237.063 466.146 237.063 cv
cp
f
261.745 393.655 mo
267.702 402.51 li
281.474 407.825 li
282.791 408.117 283.812 409.155 284.083 410.477 cv
284.518 412.598 282.897 414.584 280.732 414.584 cv
230.996 414.584 li
232.675 400.922 li
261.745 393.655 li
cp
0 .918029 .0663767 0 cmyk
f
230.996 414.584 mo
280.732 414.584 li
282.857 414.584 284.452 412.671 284.101 410.596 cv
231.486 410.596 li
230.996 414.584 li
cp
1 .867247 .359258 .270176 cmyk
f
279.656 357.858 mo
268.064 402.044 li
232.646 402.044 li
249.067 323.784 li
277.724 332.121 li
279.656 357.858 li
f
118.341 263.27 mo
100.955 223.573 li
105.146 222.094 li
107.691 221.195 109.66 218.837 110.17 215.619 cv
110.219 215.309 110.253 214.998 110.273 214.688 cv
110.28 214.579 110.276 214.472 110.28 214.363 cv
110.287 214.161 110.296 213.96 110.291 213.759 cv
110.289 213.634 110.274 213.51 110.267 213.385 cv
110.256 213.202 110.249 213.019 110.229 212.837 cv
110.214 212.705 110.189 212.576 110.169 212.445 cv
110.145 212.282 110.127 212.118 110.095 211.957 cv
110.088 211.926 li
110.044 211.737 li
109.997 211.52 109.945 211.303 109.885 211.089 cv
109.857 210.99 109.825 210.895 109.795 210.797 cv
109.759 210.681 109.727 210.562 109.687 210.446 cv
109.639 210.331 li
109.506 209.965 109.361 209.604 109.192 209.256 cv
109.182 209.231 li
109.123 209.125 li
108.978 208.837 108.822 208.558 108.654 208.284 cv
108.582 208.155 li
108.477 208.008 li
108.319 207.768 108.152 207.535 107.977 207.311 cv
107.866 207.155 li
107.817 207.102 li
107.573 206.804 107.314 206.522 107.04 206.255 cv
106.981 206.191 li
106.881 206.095 106.775 206.008 106.671 205.917 cv
106.437 205.71 li
106.273 205.575 106.103 205.449 105.931 205.325 cv
105.764 205.201 li
105.745 205.186 li
105.535 205.044 105.318 204.913 105.097 204.788 cv
104.904 204.686 li
104.728 204.592 104.549 204.504 104.367 204.423 cv
104.156 204.33 li
103.912 204.228 103.664 204.135 103.41 204.056 cv
103.181 203.985 102.954 203.93 102.726 203.881 cv
102.512 203.841 li
102.354 203.812 102.198 203.787 102.042 203.768 cv
101.802 203.743 li
101.649 203.729 101.498 203.722 101.347 203.717 cv
101.128 203.712 li
100.94 203.713 100.753 203.721 100.569 203.736 cv
100.486 203.739 li
100.474 203.741 li
100.254 203.762 100.039 203.795 99.8251 203.835 cv
99.6407 203.876 li
99.4878 203.91 99.3365 203.947 99.1871 203.99 cv
99.0831 204.017 li
98.9902 204.045 98.898 204.075 98.8067 204.107 cv
93.2837 206.057 li
67.1015 146.275 li
67.1015 146.275 111.065 126.23 185.035 106.296 cv
237.266 92.2188 285.67 88.584 308.767 87.6533 cv
324.112 86.6032 347.183 85.4162 373.077 85.4162 cv
399.218 85.4162 428.236 86.6262 455.081 90.4083 cv
530.941 101.096 567.101 109.847 567.101 109.847 cv
542.3 229.641 li
542.3 229.641 497.582 216.629 422.746 212.267 cv
395.686 210.689 370.76 210.07 355.262 209.38 cv
348.434 209.075 342.509 208.921 337.395 208.869 cv
336.829 208.863 336.262 208.86 335.696 208.86 cv
326.043 208.86 316.413 209.693 306.899 211.34 cv
290.217 214.227 267.705 218.552 238.837 224.967 cv
165.658 241.227 118.341 263.27 118.341 263.27 cv
.205386 0 .0702525 0 cmyk
f
100.955 223.573 mo
93.2837 206.057 li
98.8067 204.107 li
98.898 204.075 98.9902 204.045 99.0831 204.017 cv
99.1871 203.99 li
99.3365 203.947 99.4878 203.91 99.6407 203.876 cv
99.8251 203.835 li
100.039 203.795 100.254 203.762 100.474 203.741 cv
100.486 203.739 li
100.569 203.736 li
100.753 203.721 100.94 203.713 101.128 203.712 cv
101.347 203.717 li
101.498 203.722 101.649 203.729 101.802 203.743 cv
102.042 203.768 li
102.198 203.787 102.354 203.812 102.512 203.841 cv
102.726 203.881 li
102.954 203.93 103.181 203.985 103.41 204.056 cv
103.664 204.135 103.912 204.228 104.156 204.33 cv
104.367 204.423 li
104.549 204.504 104.728 204.592 104.904 204.686 cv
105.097 204.788 li
105.318 204.913 105.535 205.044 105.745 205.186 cv
105.764 205.201 li
105.931 205.325 li
106.103 205.449 106.273 205.575 106.437 205.71 cv
106.671 205.917 li
106.775 206.008 106.881 206.095 106.981 206.191 cv
107.04 206.255 li
107.314 206.522 107.573 206.804 107.817 207.102 cv
107.866 207.155 li
107.977 207.311 li
108.152 207.535 108.319 207.768 108.477 208.008 cv
108.582 208.155 li
108.654 208.284 li
108.822 208.558 108.978 208.837 109.123 209.125 cv
109.182 209.231 li
109.192 209.256 li
109.361 209.604 109.506 209.965 109.639 210.331 cv
109.687 210.446 li
109.727 210.562 109.759 210.681 109.795 210.797 cv
109.825 210.895 109.857 210.99 109.885 211.089 cv
109.945 211.303 109.997 211.52 110.044 211.737 cv
110.088 211.926 li
110.095 211.957 li
110.127 212.118 110.145 212.282 110.169 212.445 cv
110.189 212.576 110.214 212.705 110.229 212.837 cv
110.249 213.019 110.256 213.202 110.267 213.385 cv
110.274 213.51 110.289 213.634 110.291 213.759 cv
110.296 213.96 110.287 214.161 110.28 214.363 cv
110.276 214.472 110.28 214.579 110.273 214.688 cv
110.253 214.998 110.219 215.309 110.17 215.619 cv
109.66 218.837 107.691 221.195 105.146 222.094 cv
100.955 223.573 li
.49134 .277226 .00534066 0 cmyk
f
224.596 128.984 mo
253.084 120.807 280.513 115.361 306.542 113.529 cv
322.801 200.923 li
322.784 199.549 245.267 212.514 245.666 213.223 cv
246.04 213.888 224.596 128.984 224.596 128.984 cv
cp
0 .918029 .0663767 0 cmyk
f
222.095 361.457 mo
202.788 361.457 li
200.438 361.457 198.516 359.534 198.516 357.185 cv
198.516 354.131 li
198.516 351.781 200.438 349.858 202.788 349.858 cv
222.095 349.858 li
224.444 349.858 226.367 351.781 226.367 354.131 cv
226.367 357.185 li
226.367 359.534 224.444 361.457 222.095 361.457 cv
cp
1 .867247 .359258 .270176 cmyk
f
140.538 234.553 mo
136.161 237.079 li
132.792 239.024 128.445 237.859 126.5 234.491 cv
115.762 215.892 li
113.817 212.523 114.982 208.176 118.351 206.23 cv
122.728 203.704 li
126.096 201.759 130.443 202.924 132.388 206.293 cv
143.126 224.892 li
145.071 228.261 143.907 232.607 140.538 234.553 cv
cp
0 .918029 .0663767 0 cmyk
f
152.528 258.276 mo
144.364 262.99 li
140.996 264.935 136.648 263.77 134.704 260.401 cv
124.684 243.047 li
122.739 239.678 123.904 235.331 127.272 233.386 cv
135.436 228.673 li
138.804 226.728 143.152 227.893 145.097 231.262 cv
155.116 248.616 li
157.061 251.984 155.896 256.332 152.528 258.276 cv
cp
f
192.482 336.441 mo
184.977 341.118 li
179.2 344.718 171.529 342.937 167.93 337.159 cv
121.763 263.064 li
118.164 257.288 119.945 249.617 125.721 246.018 cv
133.227 241.341 li
139.003 237.742 146.674 239.523 150.273 245.3 cv
196.44 319.396 li
200.04 325.172 198.258 332.843 192.482 336.441 cv
cp
f
241.232 353.891 mo
187.192 353.891 li
181.378 353.891 176.621 349.133 176.621 343.318 cv
176.621 335.764 li
176.621 329.949 181.378 325.192 187.192 325.192 cv
241.232 325.192 li
247.046 325.192 251.804 329.949 251.804 335.764 cv
251.804 343.318 li
251.804 349.133 247.046 353.891 241.232 353.891 cv
f
322.479 393.655 mo
328.436 400.578 li
352.354 407.825 li
353.67 408.117 354.691 409.155 354.962 410.477 cv
355.397 412.598 353.777 414.584 351.612 414.584 cv
291.73 414.584 li
289.381 403.247 li
322.479 393.655 li
cp
f
216.788 226.826 mo
216.915 226.159 212.329 209.275 210.664 203.179 cv
210.405 202.23 208.356 193.86 207.181 189.049 cv
206.719 187.159 204.73 185.883 202.655 186.14 cv
200.576 186.397 199.144 188.108 199.401 190.027 cv
200.986 201.882 li
200.986 201.882 198.881 197.052 195.545 197.472 cv
192.209 197.892 192.082 204.266 192.082 204.266 cv
192.082 204.266 188.631 199.021 184.923 199.821 cv
181.493 200.561 180.928 205.673 180.928 205.673 cv
185.395 231.26 li
207.239 240.338 li
216.788 226.826 li
cp
.0011902 .363043 .614893 0 cmyk
f
192.774 210.366 mo
192.936 210.501 193.152 210.568 193.376 210.533 cv
193.789 210.469 194.07 210.082 194.005 209.67 cv
193.28 205.032 li
193.216 204.619 192.829 204.338 192.417 204.402 cv
192.005 204.467 191.723 204.854 191.788 205.266 cv
192.513 209.903 li
192.542 210.092 192.639 210.253 192.774 210.366 cv
cp
.411444 .692866 .946502 .470893 cmyk
f
201.613 209.798 mo
201.772 209.932 201.986 209.999 202.209 209.966 cv
202.621 209.904 202.906 209.521 202.845 209.108 cv
201.931 202.934 li
201.87 202.521 201.485 202.236 201.073 202.297 cv
200.66 202.358 200.375 202.743 200.436 203.155 cv
201.35 209.329 li
201.378 209.521 201.476 209.684 201.613 209.798 cv
cp
f
324.178 283.482 mo
336.975 280.391 li
342.38 260.019 li
329.583 263.11 li
324.178 283.482 li
cp
.874937 .836881 .343786 .235386 cmyk
f
329.583 263.11 mo
342.38 260.019 li
324.219 252.323 li
311.423 255.414 li
329.583 263.11 li
cp
.819181 .782315 .173892 .0373541 cmyk
f
311.423 255.414 mo
306.018 275.786 li
324.178 283.482 li
329.583 263.11 li
311.423 255.414 li
cp
.721218 .679347 .0120546 0 cmyk
f
141.762 250.219 mo
143.132 259.299 li
143.506 261.78 144.322 264.174 145.541 266.366 cv
179.076 326.683 li
213.488 288.527 li
176.963 234.434 li
165.794 229.712 li
146.596 235.038 li
142.713 239.072 140.927 244.683 141.762 250.219 cv
cp
.426215 .547295 0 0 cmyk
f
239.73 191.839 mo
248.121 181.95 li
249.574 153.93 li
249.707 151.362 251.828 149.349 254.398 149.349 cv
257.067 149.349 259.229 151.512 259.229 154.18 cv
259.229 164.864 li
262.158 164.864 li
264.775 164.864 266.897 166.986 266.897 169.604 cv
266.897 171.264 li
268.618 171.264 li
271.635 171.264 274.081 173.71 274.081 176.728 cv
274.081 183.58 li
274.081 187.581 270.838 190.824 266.836 190.824 cv
265.65 199.336 li
265.089 203.367 263.2 207.097 260.284 209.935 cv
256.905 213.223 li
239.73 191.839 li
cp
.0011902 .363043 .614893 0 cmyk
f
266.836 191.358 mo
266.542 191.358 266.303 191.119 266.303 190.824 cv
266.303 183.761 li
266.303 183.466 266.542 183.228 266.836 183.228 cv
267.131 183.228 267.37 183.466 267.37 183.761 cv
267.37 190.824 li
267.37 191.119 267.131 191.358 266.836 191.358 cv
cp
.345312 .781857 1 .416999 cmyk
f
263.214 177.956 mo
262.919 177.956 262.681 177.717 262.681 177.422 cv
262.681 174.946 li
262.681 172.622 264.572 170.73 266.897 170.73 cv
267.191 170.73 267.431 170.969 267.431 171.264 cv
267.431 171.559 267.191 171.798 266.897 171.798 cv
265.161 171.798 263.748 173.21 263.748 174.946 cv
263.748 177.422 li
263.748 177.717 263.509 177.956 263.214 177.956 cv
cp
f
256.905 172.643 mo
256.611 172.643 256.372 172.404 256.372 172.109 cv
256.372 167.188 li
256.372 165.612 257.654 164.331 259.23 164.331 cv
259.524 164.331 259.764 164.569 259.764 164.864 cv
259.764 165.159 259.524 165.398 259.23 165.398 cv
258.243 165.398 257.439 166.201 257.439 167.188 cv
257.439 172.109 li
257.439 172.404 257.2 172.643 256.905 172.643 cv
cp
f
186.28 261.079 mo
218.614 255.798 li
223.514 254.998 227.966 252.473 231.168 248.679 cv
264.522 209.158 li
243.916 186.97 li
204.955 225.579 li
165.794 229.712 li
165.794 247.475 li
186.28 261.079 li
cp
.426215 .547295 0 0 cmyk
f
gsave
243.916 186.97 mo
204.955 225.579 li
165.794 229.712 li
146.596 235.038 li
142.713 239.072 140.927 244.683 141.762 250.219 cv
143.132 259.299 li
143.506 261.78 144.322 264.174 145.541 266.366 cv
179.076 326.683 li
213.488 288.527 li
194.092 259.803 li
218.614 255.798 li
223.514 254.998 227.966 252.473 231.168 248.679 cv
264.522 209.158 li
243.916 186.97 li
clp
161.89 259.841 mo
161.672 259.795 li
161.403 259.675 161.283 259.358 161.402 259.09 cv
166.371 247.964 li
166.491 247.695 166.807 247.574 167.076 247.693 cv
167.345 247.814 167.466 248.13 167.346 248.398 cv
162.377 259.525 li
162.289 259.724 162.094 259.841 161.89 259.841 cv
cp
0 0 0 0 cmyk
f
165.234 258.795 mo
165.014 258.747 li
164.746 258.625 164.627 258.309 164.749 258.04 cv
166.797 253.524 li
166.919 253.256 167.236 253.138 167.503 253.258 cv
167.772 253.38 167.891 253.696 167.769 253.965 cv
165.721 258.481 li
165.631 258.678 165.437 258.795 165.234 258.795 cv
cp
f
159.841 248.715 mo
159.624 248.669 li
159.355 248.549 159.234 248.232 159.354 247.964 cv
164.322 236.838 li
164.443 236.569 164.758 236.447 165.027 236.568 cv
165.297 236.688 165.417 237.004 165.297 237.273 cv
160.329 248.398 li
160.24 248.598 160.045 248.715 159.841 248.715 cv
cp
f
163.186 247.669 mo
162.966 247.621 li
162.697 247.499 162.578 247.183 162.7 246.915 cv
164.749 242.398 li
164.871 242.129 165.187 242.011 165.455 242.132 cv
165.724 242.254 165.842 242.57 165.721 242.839 cv
163.672 247.355 li
163.583 247.553 163.389 247.669 163.186 247.669 cv
cp
f
152.004 262.866 mo
151.787 262.819 li
151.517 262.699 151.396 262.384 151.517 262.115 cv
156.486 250.989 li
156.606 250.72 156.921 250.599 157.19 250.719 cv
157.46 250.839 157.58 251.155 157.46 251.424 cv
152.491 262.55 li
152.403 262.748 152.208 262.866 152.004 262.866 cv
cp
f
155.349 261.819 mo
155.129 261.771 li
154.86 261.65 154.741 261.334 154.863 261.065 cv
156.912 256.549 li
157.033 256.28 157.35 256.161 157.618 256.283 cv
157.886 256.405 158.005 256.722 157.884 256.989 cv
155.835 261.506 li
155.746 261.703 155.552 261.819 155.349 261.819 cv
cp
f
141.461 256.536 mo
141.244 256.489 li
140.975 256.37 140.854 256.054 140.974 255.785 cv
145.943 244.659 li
146.063 244.391 146.379 244.27 146.648 244.39 cv
146.917 244.51 147.038 244.825 146.917 245.094 cv
141.949 256.22 li
141.86 256.418 141.666 256.536 141.461 256.536 cv
cp
f
144.806 255.49 mo
144.586 255.442 li
144.317 255.32 144.198 255.004 144.32 254.735 cv
146.368 250.22 li
146.49 249.951 146.807 249.832 147.075 249.953 cv
147.343 250.075 147.462 250.392 147.341 250.66 cv
145.292 255.177 li
145.203 255.373 145.009 255.49 144.806 255.49 cv
cp
f
150.645 250.974 mo
150.428 250.927 li
150.159 250.807 150.038 250.491 150.158 250.223 cv
155.127 239.096 li
155.247 238.827 155.563 238.705 155.832 238.826 cv
156.101 238.946 156.222 239.263 156.102 239.531 cv
151.132 250.657 li
151.044 250.855 150.849 250.974 150.645 250.974 cv
cp
f
153.99 249.927 mo
153.77 249.879 li
153.501 249.757 153.382 249.441 153.504 249.173 cv
155.553 244.656 li
155.675 244.388 155.992 244.27 156.259 244.391 cv
156.528 244.513 156.646 244.829 156.525 245.097 cv
154.477 249.613 li
154.387 249.811 154.193 249.927 153.99 249.927 cv
cp
f
147.125 240.37 mo
146.908 240.323 li
146.639 240.203 146.518 239.888 146.638 239.618 cv
151.606 228.492 li
151.727 228.224 152.042 228.102 152.312 228.223 cv
152.581 228.343 152.702 228.658 152.582 228.928 cv
147.613 240.054 li
147.524 240.252 147.33 240.37 147.125 240.37 cv
cp
f
150.47 239.323 mo
150.25 239.275 li
149.981 239.153 149.862 238.838 149.984 238.569 cv
152.033 234.053 li
152.154 233.784 152.472 233.666 152.739 233.787 cv
153.008 233.909 153.126 234.225 153.005 234.493 cv
150.957 239.01 li
150.867 239.207 150.673 239.323 150.47 239.323 cv
cp
f
175.522 280.399 mo
175.305 280.353 li
175.035 280.232 174.915 279.917 175.035 279.648 cv
180.004 268.522 li
180.124 268.253 180.439 268.132 180.709 268.253 cv
180.978 268.372 181.099 268.688 180.978 268.957 cv
176.009 280.083 li
175.921 280.281 175.726 280.399 175.522 280.399 cv
cp
f
178.866 279.354 mo
178.646 279.306 li
178.378 279.184 178.259 278.867 178.381 278.599 cv
180.429 274.083 li
180.551 273.814 180.868 273.695 181.136 273.816 cv
181.404 273.938 181.523 274.255 181.401 274.523 cv
179.353 279.04 li
179.264 279.236 179.069 279.354 178.866 279.354 cv
cp
f
170.248 294.165 mo
170.031 294.119 li
169.762 293.999 169.641 293.683 169.761 293.414 cv
174.73 282.288 li
174.85 282.019 175.165 281.899 175.435 282.018 cv
175.704 282.139 175.825 282.454 175.705 282.723 cv
170.736 293.85 li
170.647 294.048 170.453 294.165 170.248 294.165 cv
cp
f
173.593 293.119 mo
173.373 293.071 li
173.105 292.949 172.985 292.633 173.107 292.364 cv
175.156 287.849 li
175.277 287.58 175.594 287.461 175.862 287.582 cv
176.13 287.704 176.25 288.021 176.128 288.289 cv
174.08 292.806 li
173.99 293.002 173.796 293.119 173.593 293.119 cv
cp
f
180.915 288.603 mo
180.698 288.556 li
180.428 288.436 180.308 288.12 180.428 287.851 cv
185.397 276.725 li
185.517 276.456 185.833 276.335 186.102 276.455 cv
186.371 276.575 186.492 276.891 186.371 277.16 cv
181.402 288.286 li
181.314 288.484 181.119 288.603 180.915 288.603 cv
cp
f
184.26 287.556 mo
184.04 287.508 li
183.771 287.386 183.652 287.07 183.774 286.802 cv
185.823 282.285 li
185.944 282.017 186.262 281.898 186.529 282.02 cv
186.798 282.142 186.917 282.458 186.795 282.726 cv
184.747 287.242 li
184.657 287.439 184.463 287.556 184.26 287.556 cv
cp
f
187.166 275.576 mo
186.948 275.53 li
186.679 275.41 186.559 275.094 186.679 274.825 cv
191.647 263.699 li
191.768 263.431 192.084 263.31 192.353 263.43 cv
192.622 263.55 192.742 263.865 192.622 264.135 cv
187.653 275.26 li
187.564 275.459 187.37 275.576 187.166 275.576 cv
cp
f
190.51 274.53 mo
190.291 274.482 li
190.021 274.36 189.903 274.044 190.024 273.776 cv
192.073 269.26 li
192.195 268.991 192.512 268.872 192.779 268.993 cv
193.048 269.115 193.167 269.432 193.045 269.7 cv
190.997 274.217 li
190.908 274.414 190.713 274.53 190.51 274.53 cv
cp
f
180.703 255.49 mo
180.486 255.443 li
180.216 255.323 180.096 255.008 180.216 254.738 cv
185.184 243.613 li
185.305 243.344 185.62 243.223 185.889 243.343 cv
186.159 243.463 186.279 243.779 186.159 244.048 cv
181.191 255.174 li
181.102 255.372 180.907 255.49 180.703 255.49 cv
cp
f
184.047 254.443 mo
183.828 254.396 li
183.559 254.274 183.44 253.958 183.562 253.689 cv
185.61 249.173 li
185.732 248.904 186.049 248.786 186.317 248.907 cv
186.585 249.029 186.704 249.345 186.583 249.613 cv
184.534 254.13 li
184.445 254.327 184.251 254.443 184.047 254.443 cv
cp
f
167.551 310.595 mo
167.334 310.548 li
167.065 310.428 166.944 310.112 167.064 309.844 cv
172.033 298.718 li
172.153 298.448 172.469 298.327 172.738 298.448 cv
173.007 298.567 173.128 298.884 173.008 299.152 cv
168.039 310.278 li
167.95 310.477 167.756 310.595 167.551 310.595 cv
cp
f
170.896 309.548 mo
170.676 309.501 li
170.408 309.379 170.289 309.063 170.411 308.794 cv
172.459 304.277 li
172.581 304.009 172.898 303.891 173.166 304.012 cv
173.434 304.134 173.553 304.45 173.431 304.719 cv
171.383 309.234 li
171.293 309.432 171.099 309.548 170.896 309.548 cv
cp
f
172.945 318.798 mo
172.728 318.751 li
172.459 318.631 172.338 318.315 172.458 318.046 cv
177.426 306.92 li
177.547 306.651 177.862 306.53 178.131 306.65 cv
178.4 306.771 178.521 307.086 178.401 307.355 cv
173.433 318.481 li
173.344 318.68 173.149 318.798 172.945 318.798 cv
cp
f
176.29 317.751 mo
176.069 317.703 li
175.801 317.581 175.682 317.265 175.804 316.997 cv
177.852 312.48 li
177.974 312.212 178.292 312.094 178.559 312.215 cv
178.827 312.337 178.946 312.652 178.824 312.921 cv
176.776 317.438 li
176.687 317.635 176.492 317.751 176.29 317.751 cv
cp
f
179.844 303.241 mo
179.626 303.194 li
179.357 303.074 179.236 302.759 179.356 302.489 cv
184.325 291.363 li
184.445 291.095 184.761 290.975 185.03 291.094 cv
185.299 291.214 185.42 291.529 185.3 291.799 cv
180.332 302.925 li
180.243 303.123 180.048 303.241 179.844 303.241 cv
cp
f
183.188 302.194 mo
182.968 302.146 li
182.7 302.024 182.581 301.708 182.703 301.44 cv
184.751 296.924 li
184.873 296.655 185.19 296.537 185.458 296.658 cv
185.726 296.78 185.845 297.096 185.723 297.364 cv
183.675 301.881 li
183.585 302.078 183.391 302.194 183.188 302.194 cv
cp
f
188.5 291.69 mo
188.283 291.645 li
188.014 291.524 187.893 291.208 188.013 290.939 cv
192.981 279.813 li
193.102 279.544 193.417 279.424 193.687 279.543 cv
193.956 279.663 194.076 279.979 193.957 280.248 cv
188.988 291.374 li
188.899 291.572 188.705 291.69 188.5 291.69 cv
cp
f
191.845 290.644 mo
191.625 290.597 li
191.356 290.475 191.237 290.158 191.359 289.89 cv
193.407 285.373 li
193.529 285.104 193.847 284.986 194.114 285.107 cv
194.382 285.229 194.501 285.546 194.38 285.814 cv
192.331 290.33 li
192.242 290.527 192.048 290.644 191.845 290.644 cv
cp
f
193.893 299.894 mo
193.676 299.847 li
193.407 299.727 193.286 299.411 193.406 299.142 cv
198.375 288.016 li
198.496 287.747 198.811 287.625 199.08 287.746 cv
199.349 287.866 199.47 288.183 199.35 288.451 cv
194.381 299.577 li
194.292 299.775 194.098 299.894 193.893 299.894 cv
cp
f
197.238 298.847 mo
197.018 298.799 li
196.749 298.677 196.63 298.361 196.752 298.093 cv
198.8 293.576 li
198.922 293.308 199.24 293.188 199.507 293.311 cv
199.775 293.433 199.895 293.749 199.773 294.017 cv
197.724 298.533 li
197.635 298.73 197.441 298.847 197.238 298.847 cv
cp
f
185.284 316.157 mo
185.067 316.111 li
184.797 315.991 184.677 315.675 184.797 315.406 cv
189.766 304.28 li
189.886 304.012 190.202 303.891 190.471 304.011 cv
190.74 304.131 190.86 304.446 190.74 304.716 cv
185.771 315.842 li
185.683 316.04 185.488 316.157 185.284 316.157 cv
cp
f
188.629 315.111 mo
188.409 315.063 li
188.141 314.941 188.021 314.625 188.143 314.357 cv
190.191 309.841 li
190.313 309.572 190.631 309.453 190.898 309.574 cv
191.167 309.696 191.286 310.013 191.164 310.281 cv
189.115 314.798 li
189.026 314.995 188.832 315.111 188.629 315.111 cv
cp
f
200.792 284.337 mo
200.575 284.29 li
200.306 284.17 200.185 283.854 200.305 283.585 cv
205.273 272.459 li
205.394 272.19 205.709 272.07 205.979 272.189 cv
206.248 272.31 206.368 272.626 206.249 272.895 cv
201.28 284.021 li
201.191 284.219 200.996 284.337 200.792 284.337 cv
cp
f
204.137 283.29 mo
203.917 283.242 li
203.648 283.12 203.529 282.805 203.651 282.536 cv
205.699 278.02 li
205.821 277.751 206.139 277.633 206.406 277.754 cv
206.674 277.876 206.793 278.192 206.671 278.46 cv
204.623 282.977 li
204.534 283.174 204.339 283.29 204.137 283.29 cv
cp
f
203.064 299.232 mo
202.847 299.186 li
202.578 299.065 202.457 298.75 202.577 298.48 cv
207.546 287.355 li
207.666 287.086 207.981 286.965 208.251 287.086 cv
208.52 287.205 208.641 287.521 208.52 287.79 cv
203.551 298.916 li
203.463 299.114 203.268 299.232 203.064 299.232 cv
cp
f
206.409 298.186 mo
206.188 298.139 li
205.92 298.017 205.801 297.7 205.923 297.432 cv
207.971 292.915 li
208.093 292.646 208.41 292.528 208.678 292.649 cv
208.946 292.771 209.065 293.088 208.943 293.355 cv
206.895 297.872 li
206.806 298.069 206.611 298.186 206.409 298.186 cv
cp
f
162.538 273.318 mo
162.32 273.271 li
162.051 273.151 161.931 272.836 162.05 272.566 cv
167.019 261.441 li
167.14 261.172 167.455 261.052 167.724 261.171 cv
167.993 261.291 168.114 261.607 167.994 261.876 cv
163.025 273.002 li
162.937 273.2 162.742 273.318 162.538 273.318 cv
cp
f
165.882 272.271 mo
165.662 272.225 li
165.394 272.103 165.275 271.786 165.396 271.518 cv
167.445 267.001 li
167.566 266.732 167.884 266.614 168.151 266.735 cv
168.42 266.857 168.539 267.174 168.417 267.442 cv
166.369 271.958 li
166.279 272.155 166.085 272.271 165.882 272.271 cv
cp
f
170.677 261.612 mo
170.459 261.566 li
170.19 261.446 170.07 261.131 170.19 260.861 cv
175.159 249.735 li
175.279 249.467 175.595 249.346 175.863 249.466 cv
176.133 249.586 176.253 249.901 176.133 250.171 cv
171.164 261.297 li
171.076 261.495 170.881 261.612 170.677 261.612 cv
cp
f
174.021 260.566 mo
173.802 260.519 li
173.533 260.396 173.414 260.081 173.536 259.813 cv
175.584 255.296 li
175.707 255.027 176.023 254.909 176.291 255.03 cv
176.56 255.152 176.678 255.469 176.557 255.736 cv
174.508 260.253 li
174.419 260.45 174.225 260.566 174.021 260.566 cv
cp
f
170.224 233.631 mo
170.006 233.585 li
169.737 233.465 169.617 233.148 169.736 232.88 cv
174.705 221.754 li
174.825 221.484 175.141 221.363 175.41 221.484 cv
175.679 221.604 175.8 221.92 175.68 222.189 cv
170.711 233.315 li
170.623 233.514 170.428 233.631 170.224 233.631 cv
cp
f
173.568 232.585 mo
173.348 232.537 li
173.08 232.415 172.961 232.099 173.083 231.83 cv
175.131 227.314 li
175.252 227.046 175.57 226.927 175.837 227.048 cv
176.106 227.17 176.225 227.486 176.103 227.755 cv
174.055 232.271 li
173.965 232.468 173.771 232.585 173.568 232.585 cv
cp
f
170.872 247.108 mo
170.654 247.062 li
170.385 246.941 170.265 246.626 170.385 246.357 cv
175.354 235.23 li
175.474 234.962 175.79 234.841 176.058 234.961 cv
176.328 235.081 176.448 235.397 176.328 235.666 cv
171.359 246.792 li
171.271 246.99 171.076 247.108 170.872 247.108 cv
cp
f
174.216 246.062 mo
173.996 246.015 li
173.728 245.893 173.609 245.576 173.73 245.308 cv
175.779 240.791 li
175.9 240.522 176.218 240.404 176.485 240.525 cv
176.754 240.647 176.873 240.964 176.751 241.231 cv
174.703 245.749 li
174.613 245.945 174.419 246.062 174.216 246.062 cv
cp
f
179.011 235.403 mo
178.793 235.356 li
178.524 235.236 178.404 234.921 178.524 234.651 cv
183.493 223.525 li
183.613 223.257 183.928 223.135 184.197 223.256 cv
184.467 223.376 184.587 223.691 184.467 223.961 cv
179.498 235.087 li
179.41 235.285 179.215 235.403 179.011 235.403 cv
cp
f
182.355 234.356 mo
182.136 234.309 li
181.867 234.188 181.748 233.871 181.87 233.603 cv
183.918 229.086 li
184.04 228.817 184.357 228.699 184.625 228.82 cv
184.894 228.941 185.012 229.258 184.891 229.526 cv
182.842 234.043 li
182.753 234.24 182.559 234.356 182.355 234.356 cv
cp
f
189.287 237.239 mo
189.07 237.192 li
188.801 237.072 188.68 236.757 188.8 236.488 cv
193.769 225.361 li
193.889 225.093 194.205 224.971 194.474 225.092 cv
194.743 225.212 194.864 225.528 194.744 225.797 cv
189.775 236.923 li
189.686 237.121 189.492 237.239 189.287 237.239 cv
cp
f
192.632 236.192 mo
192.412 236.145 li
192.144 236.023 192.025 235.707 192.146 235.438 cv
194.195 230.922 li
194.316 230.653 194.634 230.535 194.901 230.656 cv
195.17 230.778 195.289 231.095 195.167 231.363 cv
193.119 235.879 li
193.029 236.076 192.835 236.192 192.632 236.192 cv
cp
f
189.935 250.717 mo
189.718 250.67 li
189.449 250.55 189.328 250.234 189.448 249.965 cv
194.417 238.839 li
194.538 238.57 194.853 238.448 195.122 238.569 cv
195.391 238.689 195.512 239.005 195.392 239.274 cv
190.423 250.4 li
190.334 250.599 190.14 250.717 189.935 250.717 cv
cp
f
193.28 249.67 mo
193.06 249.622 li
192.792 249.5 192.673 249.184 192.794 248.916 cv
194.843 244.399 li
194.964 244.131 195.282 244.012 195.549 244.134 cv
195.818 244.255 195.937 244.571 195.815 244.84 cv
193.767 249.356 li
193.677 249.554 193.483 249.67 193.28 249.67 cv
cp
f
198.075 239.011 mo
197.857 238.965 li
197.588 238.845 197.467 238.528 197.588 238.26 cv
202.557 227.134 li
202.677 226.864 202.993 226.743 203.261 226.863 cv
203.531 226.984 203.651 227.3 203.531 227.569 cv
198.562 238.694 li
198.474 238.894 198.279 239.011 198.075 239.011 cv
cp
f
201.419 237.964 mo
201.199 237.917 li
200.931 237.795 200.812 237.479 200.934 237.21 cv
202.982 232.693 li
203.104 232.426 203.421 232.307 203.688 232.428 cv
203.957 232.55 204.076 232.866 203.954 233.135 cv
201.906 237.651 li
201.816 237.848 201.622 237.964 201.419 237.964 cv
cp
f
196.377 254.772 mo
196.16 254.726 li
195.891 254.605 195.771 254.29 195.891 254.021 cv
200.859 242.896 li
200.98 242.626 201.295 242.505 201.564 242.626 cv
201.834 242.745 201.954 243.062 201.834 243.33 cv
196.865 254.456 li
196.776 254.654 196.582 254.772 196.377 254.772 cv
cp
f
199.722 253.726 mo
199.502 253.679 li
199.234 253.557 199.115 253.24 199.237 252.972 cv
201.285 248.455 li
201.407 248.187 201.724 248.068 201.992 248.189 cv
202.26 248.312 202.379 248.628 202.257 248.896 cv
200.209 253.412 li
200.12 253.609 199.925 253.726 199.722 253.726 cv
cp
f
197.025 268.25 mo
196.808 268.203 li
196.539 268.083 196.418 267.768 196.539 267.498 cv
201.507 256.372 li
201.627 256.104 201.943 255.981 202.212 256.103 cv
202.481 256.223 202.602 256.539 202.482 256.808 cv
197.513 267.934 li
197.424 268.132 197.23 268.25 197.025 268.25 cv
cp
f
200.371 267.203 mo
200.15 267.155 li
199.882 267.033 199.763 266.718 199.885 266.449 cv
201.933 261.933 li
202.055 261.664 202.373 261.545 202.64 261.667 cv
202.908 261.788 203.027 262.104 202.905 262.373 cv
200.857 266.89 li
200.768 267.087 200.573 267.203 200.371 267.203 cv
cp
f
205.165 256.544 mo
204.948 256.498 li
204.678 256.378 204.558 256.062 204.678 255.793 cv
209.647 244.667 li
209.767 244.398 210.083 244.277 210.352 244.397 cv
210.621 244.518 210.741 244.833 210.621 245.103 cv
205.652 256.228 li
205.564 256.427 205.369 256.544 205.165 256.544 cv
cp
f
208.509 255.498 mo
208.29 255.45 li
208.021 255.328 207.902 255.012 208.024 254.744 cv
210.072 250.227 li
210.194 249.958 210.511 249.84 210.779 249.961 cv
211.047 250.083 211.166 250.399 211.044 250.668 cv
208.996 255.185 li
208.907 255.382 208.712 255.498 208.509 255.498 cv
cp
f
211.622 230.501 mo
211.404 230.454 li
211.135 230.334 211.015 230.019 211.135 229.749 cv
216.104 218.623 li
216.224 218.354 216.54 218.232 216.809 218.354 cv
217.078 218.474 217.198 218.789 217.078 219.059 cv
212.109 230.185 li
212.021 230.383 211.826 230.501 211.622 230.501 cv
cp
f
214.966 229.454 mo
214.746 229.406 li
214.478 229.284 214.359 228.968 214.48 228.7 cv
216.529 224.184 li
216.65 223.915 216.968 223.796 217.235 223.918 cv
217.504 224.039 217.623 224.355 217.501 224.624 cv
215.453 229.141 li
215.363 229.338 215.169 229.454 214.966 229.454 cv
cp
f
212.27 243.978 mo
212.053 243.932 li
211.783 243.812 211.663 243.495 211.783 243.227 cv
216.751 232.101 li
216.872 231.831 217.188 231.71 217.457 231.831 cv
217.726 231.951 217.846 232.267 217.726 232.536 cv
212.757 243.661 li
212.668 243.86 212.474 243.978 212.27 243.978 cv
cp
f
215.614 242.931 mo
215.395 242.884 li
215.126 242.762 215.007 242.445 215.128 242.177 cv
217.177 237.66 li
217.299 237.393 217.616 237.273 217.883 237.395 cv
218.152 237.517 218.271 237.833 218.149 238.102 cv
216.101 242.617 li
216.012 242.814 215.817 242.931 215.614 242.931 cv
cp
f
220.409 232.272 mo
220.192 232.226 li
219.923 232.105 219.802 231.79 219.922 231.521 cv
224.891 220.395 li
225.011 220.126 225.327 220.005 225.596 220.125 cv
225.865 220.245 225.985 220.561 225.865 220.83 cv
220.897 231.956 li
220.808 232.154 220.613 232.272 220.409 232.272 cv
cp
f
223.754 231.226 mo
223.534 231.179 li
223.265 231.057 223.146 230.74 223.268 230.472 cv
225.316 225.955 li
225.438 225.687 225.755 225.568 226.023 225.689 cv
226.292 225.812 226.41 226.128 226.289 226.396 cv
224.24 230.912 li
224.151 231.109 223.957 231.226 223.754 231.226 cv
cp
f
218.712 249.028 mo
218.495 248.981 li
218.226 248.861 218.105 248.546 218.225 248.276 cv
223.194 237.15 li
223.314 236.882 223.63 236.76 223.898 236.881 cv
224.168 237.001 224.289 237.316 224.168 237.586 cv
219.199 248.712 li
219.111 248.91 218.916 249.028 218.712 249.028 cv
cp
f
222.057 247.981 mo
221.836 247.934 li
221.568 247.812 221.449 247.495 221.571 247.228 cv
223.619 242.711 li
223.741 242.442 224.059 242.323 224.326 242.445 cv
224.594 242.566 224.713 242.883 224.592 243.151 cv
222.543 247.668 li
222.454 247.865 222.26 247.981 222.057 247.981 cv
cp
f
219.36 262.505 mo
219.143 262.459 li
218.874 262.339 218.753 262.022 218.873 261.754 cv
223.842 250.628 li
223.962 250.358 224.277 250.237 224.547 250.358 cv
224.816 250.478 224.937 250.794 224.816 251.063 cv
219.848 262.188 li
219.759 262.388 219.564 262.505 219.36 262.505 cv
cp
f
222.705 261.458 mo
222.485 261.411 li
222.216 261.289 222.097 260.973 222.219 260.704 cv
224.267 256.188 li
224.389 255.92 224.706 255.801 224.974 255.922 cv
225.242 256.044 225.361 256.36 225.24 256.629 cv
223.191 261.145 li
223.102 261.342 222.908 261.458 222.705 261.458 cv
cp
f
227.5 250.8 mo
227.282 250.754 li
227.013 250.633 226.892 250.317 227.012 250.049 cv
231.98 238.922 li
232.101 238.653 232.417 238.533 232.686 238.652 cv
232.955 238.772 233.076 239.089 232.956 239.357 cv
227.987 250.483 li
227.898 250.682 227.704 250.8 227.5 250.8 cv
cp
f
230.844 249.753 mo
230.624 249.705 li
230.355 249.583 230.237 249.268 230.358 248.999 cv
232.407 244.482 li
232.528 244.214 232.846 244.095 233.113 244.217 cv
233.382 244.339 233.501 244.655 233.379 244.923 cv
231.331 249.439 li
231.241 249.637 231.047 249.753 230.844 249.753 cv
cp
f
229.983 220.457 mo
229.767 220.411 li
229.497 220.291 229.376 219.975 229.497 219.706 cv
234.466 208.58 li
234.586 208.311 234.901 208.189 235.17 208.311 cv
235.439 208.431 235.56 208.746 235.44 209.016 cv
230.471 220.142 li
230.382 220.34 230.188 220.457 229.983 220.457 cv
cp
f
233.328 219.411 mo
233.108 219.363 li
232.84 219.241 232.721 218.925 232.842 218.656 cv
234.891 214.14 li
235.013 213.872 235.33 213.753 235.598 213.874 cv
235.866 213.996 235.985 214.313 235.863 214.581 cv
233.815 219.098 li
233.726 219.294 233.531 219.411 233.328 219.411 cv
cp
f
240.443 238.14 mo
240.226 238.093 li
239.957 237.974 239.836 237.657 239.957 237.389 cv
244.925 226.263 li
245.045 225.993 245.361 225.872 245.63 225.993 cv
245.899 226.113 246.02 226.429 245.899 226.698 cv
240.931 237.823 li
240.842 238.022 240.647 238.14 240.443 238.14 cv
cp
f
243.788 237.094 mo
243.568 237.046 li
243.3 236.924 243.181 236.607 243.302 236.34 cv
245.351 231.823 li
245.473 231.555 245.79 231.436 246.057 231.558 cv
246.326 231.679 246.445 231.995 246.323 232.264 cv
244.275 236.78 li
244.186 236.978 243.991 237.094 243.788 237.094 cv
cp
f
230.632 233.935 mo
230.415 233.888 li
230.145 233.768 230.024 233.452 230.145 233.183 cv
235.114 222.057 li
235.233 221.788 235.549 221.667 235.818 221.787 cv
236.088 221.907 236.209 222.224 236.088 222.492 cv
231.119 233.618 li
231.031 233.816 230.836 233.935 230.632 233.935 cv
cp
f
233.977 232.888 mo
233.756 232.84 li
233.488 232.719 233.369 232.402 233.491 232.134 cv
235.539 227.617 li
235.661 227.349 235.978 227.23 236.246 227.352 cv
236.514 227.474 236.633 227.79 236.511 228.059 cv
234.463 232.574 li
234.374 232.771 234.179 232.888 233.977 232.888 cv
cp
f
241.43 224.18 mo
241.212 224.133 li
240.943 224.013 240.823 223.697 240.942 223.428 cv
245.911 212.302 li
246.032 212.033 246.347 211.912 246.616 212.032 cv
246.885 212.152 247.006 212.469 246.886 212.737 cv
241.917 223.863 li
241.829 224.062 241.634 224.18 241.43 224.18 cv
cp
f
244.774 223.133 mo
244.554 223.086 li
244.286 222.964 244.167 222.647 244.289 222.379 cv
246.337 217.862 li
246.459 217.594 246.776 217.476 247.043 217.597 cv
247.312 217.719 247.431 218.035 247.31 218.304 cv
245.261 222.819 li
245.171 223.017 244.978 223.133 244.774 223.133 cv
cp
f
240.443 213.564 mo
240.226 213.519 li
239.957 213.398 239.836 213.082 239.957 212.813 cv
244.925 201.688 li
245.045 201.418 245.361 201.297 245.63 201.418 cv
245.899 201.538 246.02 201.854 245.899 202.123 cv
240.931 213.249 li
240.842 213.447 240.647 213.564 240.443 213.564 cv
cp
f
243.788 212.519 mo
243.568 212.471 li
243.3 212.349 243.181 212.032 243.302 211.764 cv
245.351 207.247 li
245.473 206.979 245.79 206.86 246.057 206.981 cv
246.326 207.104 246.445 207.42 246.323 207.688 cv
244.275 212.205 li
244.186 212.401 243.991 212.519 243.788 212.519 cv
cp
f
221.057 217.911 mo
220.84 217.864 li
220.571 217.744 220.45 217.429 220.57 217.159 cv
225.539 206.033 li
225.659 205.765 225.974 205.644 226.244 205.764 cv
226.513 205.884 226.633 206.199 226.514 206.469 cv
221.545 217.595 li
221.456 217.793 221.262 217.911 221.057 217.911 cv
cp
f
224.402 216.864 mo
224.182 216.816 li
223.913 216.695 223.794 216.379 223.916 216.11 cv
225.964 211.594 li
226.086 211.325 226.404 211.206 226.671 211.328 cv
226.939 211.449 227.059 211.766 226.937 212.034 cv
224.888 216.551 li
224.799 216.748 224.605 216.864 224.402 216.864 cv
cp
f
229.196 206.205 mo
228.979 206.159 li
228.709 206.039 228.589 205.723 228.709 205.454 cv
233.678 194.328 li
233.798 194.059 234.114 193.938 234.383 194.059 cv
234.652 194.179 234.773 194.494 234.652 194.764 cv
229.684 205.89 li
229.595 206.088 229.4 206.205 229.196 206.205 cv
cp
f
232.541 205.159 mo
232.321 205.111 li
232.053 204.989 231.934 204.673 232.055 204.404 cv
234.104 199.888 li
234.226 199.62 234.543 199.501 234.811 199.622 cv
235.079 199.744 235.198 200.061 235.076 200.329 cv
233.028 204.846 li
232.938 205.042 232.744 205.159 232.541 205.159 cv
cp
f
154.052 276.084 mo
153.835 276.037 li
153.566 275.917 153.445 275.602 153.565 275.332 cv
158.534 264.206 li
158.654 263.938 158.97 263.816 159.239 263.937 cv
159.508 264.057 159.629 264.372 159.508 264.642 cv
154.54 275.768 li
154.451 275.966 154.256 276.084 154.052 276.084 cv
cp
f
157.397 275.037 mo
157.177 274.989 li
156.909 274.868 156.79 274.552 156.912 274.283 cv
158.959 269.767 li
159.081 269.498 159.399 269.379 159.666 269.501 cv
159.935 269.622 160.053 269.939 159.932 270.207 cv
157.884 274.724 li
157.794 274.921 157.6 275.037 157.397 275.037 cv
cp
f
143.463 272.568 mo
143.246 272.521 li
142.977 272.401 142.856 272.086 142.976 271.817 cv
147.945 260.69 li
148.065 260.422 148.38 260.301 148.65 260.421 cv
148.919 260.541 149.04 260.857 148.919 261.126 cv
143.951 272.252 li
143.862 272.45 143.667 272.568 143.463 272.568 cv
cp
f
146.808 271.521 mo
146.588 271.474 li
146.319 271.352 146.2 271.036 146.322 270.768 cv
148.37 266.251 li
148.492 265.982 148.809 265.863 149.077 265.985 cv
149.345 266.107 149.464 266.424 149.343 266.691 cv
147.294 271.208 li
147.205 271.405 147.011 271.521 146.808 271.521 cv
cp
f
166.308 284.916 mo
166.09 284.869 li
165.821 284.75 165.701 284.434 165.821 284.165 cv
170.79 273.039 li
170.91 272.77 171.225 272.648 171.494 272.769 cv
171.764 272.889 171.884 273.205 171.764 273.474 cv
166.795 284.6 li
166.707 284.798 166.512 284.916 166.308 284.916 cv
cp
f
169.653 283.869 mo
169.433 283.822 li
169.164 283.7 169.045 283.384 169.167 283.115 cv
171.215 278.599 li
171.337 278.33 171.654 278.212 171.922 278.333 cv
172.19 278.455 172.309 278.771 172.188 279.04 cv
170.139 283.556 li
170.05 283.753 169.855 283.869 169.653 283.869 cv
cp
f
159.193 300.982 mo
158.976 300.936 li
158.706 300.816 158.585 300.5 158.706 300.231 cv
163.675 289.105 li
163.794 288.837 164.11 288.716 164.379 288.836 cv
164.649 288.956 164.769 289.271 164.649 289.541 cv
159.68 300.666 li
159.592 300.864 159.397 300.982 159.193 300.982 cv
cp
f
162.538 299.937 mo
162.318 299.889 li
162.049 299.767 161.93 299.45 162.052 299.183 cv
164.1 294.665 li
164.222 294.396 164.539 294.278 164.807 294.399 cv
165.075 294.521 165.194 294.838 165.073 295.106 cv
163.024 299.623 li
162.935 299.819 162.741 299.937 162.538 299.937 cv
cp
f
155.725 289.856 mo
155.507 289.811 li
155.238 289.69 155.118 289.374 155.238 289.105 cv
160.207 277.979 li
160.327 277.71 160.643 277.589 160.912 277.71 cv
161.181 277.83 161.301 278.146 161.181 278.414 cv
156.212 289.541 li
156.124 289.739 155.929 289.856 155.725 289.856 cv
cp
f
159.069 288.811 mo
158.849 288.763 li
158.581 288.641 158.462 288.324 158.584 288.056 cv
160.632 283.54 li
160.754 283.271 161.071 283.152 161.338 283.273 cv
161.607 283.396 161.726 283.712 161.605 283.98 cv
159.556 288.497 li
159.466 288.693 159.272 288.811 159.069 288.811 cv
cp
f
grestore
179.076 326.683 mo
179.624 327.381 li
182.708 331.311 187.426 333.605 192.422 333.605 cv
258.727 333.605 li
290.12 404.925 li
326.021 394.139 li
291.56 304.511 li
288.245 295.889 280.11 290.072 270.879 289.723 cv
212.812 287.526 li
179.076 326.683 li
1 .867247 .359258 .270176 cmyk
f
157.246 226.815 mo
163.806 222.272 li
166.207 220.61 167 217.425 165.658 214.831 cv
161.829 207.431 152.555 193.918 151.313 193.256 cv
149.616 192.351 140.824 192.986 135.355 197.234 cv
129.886 201.481 124.377 212.367 130.914 217.842 cv
133.117 219.687 143.484 228.415 143.484 228.415 cv
157.246 226.815 li
cp
.0011902 .363043 .614893 0 cmyk
f
147.409 212.986 mo
148.527 214.781 147.979 217.144 146.184 218.263 cv
144.388 219.381 142.026 218.832 140.907 217.037 cv
139.789 215.242 140.337 212.88 142.133 211.761 cv
143.928 210.643 146.29 211.191 147.409 212.986 cv
cp
f
157.934 204.118 mo
158.802 204.861 161.608 206.384 163.522 207.386 cv
164.416 207.854 164.552 209.076 163.785 209.731 cv
161.473 211.708 li
157.934 204.118 li
cp
f
145.473 217.128 mo
144.919 217.372 144.305 217.423 143.711 217.267 cv
143.017 217.085 142.435 216.644 142.073 216.024 cv
141.71 215.404 141.611 214.682 141.793 213.987 cv
141.975 213.293 142.417 212.711 143.036 212.349 cv
143.435 212.113 143.942 212.251 144.173 212.646 cv
144.405 213.043 144.271 213.552 143.875 213.783 cv
143.639 213.922 143.471 214.144 143.401 214.408 cv
143.332 214.673 143.37 214.949 143.508 215.186 cv
143.793 215.673 144.427 215.835 144.909 215.553 cv
145.307 215.318 145.814 215.454 146.046 215.851 cv
146.278 216.247 146.144 216.756 145.749 216.987 cv
145.659 217.04 145.566 217.087 145.473 217.128 cv
cp
.411444 .692866 .946502 .470893 cmyk
f
155.038 201.033 mo
153.868 201.749 152.955 202.772 152.394 204.024 cv
152.021 204.857 153.279 205.529 153.655 204.688 cv
154.12 203.65 154.819 202.838 155.791 202.242 cv
156.573 201.763 155.82 200.553 155.038 201.033 cv
cp
1 .867247 .359258 .270176 cmyk
f
164.794 214.29 mo
164.374 214.042 163.993 214.283 163.843 214.633 cv
163.515 214.813 162.976 214.904 162.678 214.965 cv
162.199 215.062 161.717 215.075 161.23 215.052 cv
160.313 215.008 160.36 216.433 161.271 216.477 cv
162.281 216.525 163.293 216.363 164.228 215.972 cv
164.611 215.812 165.1 215.628 165.212 215.178 cv
165.304 214.807 165.107 214.476 164.794 214.29 cv
cp
f
157.908 205.751 mo
158.288 206.361 158.218 207.091 157.751 207.382 cv
157.285 207.672 156.599 207.413 156.219 206.803 cv
155.839 206.193 155.909 205.463 156.376 205.173 cv
156.842 204.883 157.527 205.142 157.908 205.751 cv
cp
f
148.075 213.309 mo
157.629 217.936 li
157.825 218.03 158.049 218.048 158.257 217.984 cv
166.094 215.6 li
166.234 215.557 166.383 215.551 166.527 215.581 cv
170.385 216.408 li
170.615 216.457 170.814 216.598 170.938 216.798 cv
172.651 219.561 li
172.874 219.921 172.803 220.391 172.482 220.668 cv
171.954 221.126 172.16 221.989 172.838 222.158 cv
173.218 222.254 li
173.484 222.32 173.704 222.51 173.808 222.765 cv
174.438 224.309 li
174.499 224.557 li
174.902 228.963 li
174.941 229.393 174.658 229.784 174.239 229.883 cv
165.098 232.021 li
164.881 232.071 164.653 232.036 164.462 231.923 cv
156.161 227.011 li
154.771 226.188 153.565 225.086 152.622 223.774 cv
146.516 215.289 li
146.302 214.992 146.298 214.594 146.506 214.294 cv
146.988 213.596 li
147.23 213.245 147.691 213.123 148.075 213.309 cv
cp
.756252 .687648 .654871 .887205 cmyk
f
141.374 212.524 mo
148.257 203.597 li
147.609 202.584 li
147.044 201.7 147.164 200.543 147.898 199.793 cv
154.759 192.792 li
155.919 191.608 157.849 191.692 158.902 192.972 cv
165.158 200.569 li
166.168 201.795 165.95 203.616 164.68 204.57 cv
157.107 210.257 li
156.399 210.788 155.445 210.856 154.669 210.43 cv
145.102 216.633 li
144.462 217.047 143.622 216.973 143.065 216.451 cv
141.416 214.906 li
140.732 214.267 140.713 213.188 141.374 212.524 cv
cp
f
143.553 216.648 mo
136.909 223.81 li
136.777 223.952 136.555 223.96 136.413 223.828 cv
134.121 221.702 li
133.979 221.57 133.971 221.349 134.103 221.206 cv
140.747 214.045 li
140.878 213.902 141.101 213.895 141.242 214.026 cv
143.534 216.152 li
143.676 216.284 143.685 216.506 143.553 216.648 cv
cp
f
165.158 200.569 mo
158.902 192.972 li
158.721 192.752 158.514 192.571 158.29 192.423 cv
155.502 194.701 li
154.705 195.353 154.587 196.527 155.238 197.324 cv
160.094 203.266 li
160.746 204.063 161.919 204.181 162.717 203.529 cv
165.552 201.212 li
165.452 200.986 165.323 200.77 165.158 200.569 cv
cp
1 .867247 .359258 .270176 cmyk
f
145.227 240.391 mo
140.731 231.185 li
140.077 229.846 140.876 228.251 142.341 227.975 cv
160.777 224.493 li
162.275 224.21 163.793 224.87 164.608 226.158 cv
167.605 230.893 li
145.227 240.391 li
cp
.426215 .547295 0 0 cmyk
f
291.73 414.584 mo
351.611 414.584 li
353.736 414.584 355.331 412.671 354.979 410.596 cv
290.904 410.596 li
291.73 414.584 li
cp
1 .867247 .359258 .270176 cmyk
f
275.827 372.987 mo
275.622 372.987 275.426 372.868 275.338 372.668 cv
258.378 334.139 li
247.006 334.139 li
246.711 334.139 246.473 333.9 246.473 333.605 cv
246.473 333.311 246.711 333.071 247.006 333.071 cv
258.727 333.071 li
258.938 333.071 259.13 333.196 259.215 333.391 cv
276.315 372.238 li
276.434 372.508 276.311 372.823 276.042 372.941 cv
275.827 372.987 li
.630396 .599573 0 0 cmyk
f
258.727 334.139 mo
258.617 334.139 258.506 334.105 258.412 334.036 cv
258.208 333.888 258.136 333.615 258.241 333.385 cv
259.207 331.251 267.689 312.522 267.964 312.047 cv
268.111 311.791 268.438 311.704 268.693 311.852 cv
268.947 311.998 269.035 312.322 268.891 312.577 cv
268.63 313.063 263.301 324.804 260.274 331.483 cv
270.121 322.564 li
270.339 322.366 270.677 322.383 270.875 322.602 cv
271.072 322.819 271.056 323.157 270.837 323.354 cv
259.085 334.001 li
258.984 334.093 258.855 334.139 258.727 334.139 cv
cp
f
178.335 262.782 mo
183.183 264.29 li
190.457 260.906 li
178.335 262.782 li
cp
183.221 265.396 mo
183.063 265.371 li
175.818 263.117 li
175.581 263.043 175.426 262.815 175.444 262.568 cv
175.463 262.32 175.65 262.118 175.895 262.08 cv
194.011 259.275 li
194.274 259.235 194.526 259.394 194.604 259.648 cv
194.681 259.902 194.559 260.175 194.318 260.287 cv
183.446 265.346 li
183.221 265.396 li
cp
1 .867247 .359258 .270176 cmyk
f
160.385 230.992 mo
159.143 231.156 li
157.881 231.322 156.686 231.735 155.59 232.384 cv
155.405 232.492 li
160.385 230.992 li
cp
151.345 234.807 mo
151.138 234.807 150.943 234.686 150.856 234.487 cv
150.748 234.24 150.841 233.951 151.073 233.813 cv
155.046 231.465 li
156.267 230.743 157.598 230.283 159.003 230.098 cv
166.789 229.07 li
167.068 229.034 167.322 229.216 167.38 229.487 cv
167.439 229.759 167.278 230.03 167.012 230.11 cv
151.499 234.784 li
151.345 234.807 li
cp
f
206.378 228.062 mo
209.816 238.006 li
214.159 237.146 li
206.378 228.062 li
cp
209.463 239.153 mo
209.239 239.153 209.034 239.013 208.959 238.794 cv
204.451 225.754 li
204.367 225.512 204.467 225.244 204.69 225.116 cv
204.913 224.988 205.194 225.038 205.361 225.232 cv
215.563 237.146 li
215.687 237.289 215.725 237.488 215.662 237.668 cv
215.601 237.847 215.448 237.979 215.262 238.017 cv
209.566 239.144 li
209.463 239.153 li
cp
f
258.727 215.546 mo
258.577 215.546 258.429 215.483 258.323 215.361 cv
238.433 192.352 li
238.346 192.251 238.303 192.127 238.303 192.004 cv
238.303 191.854 238.366 191.705 238.487 191.6 cv
238.711 191.406 239.047 191.431 239.241 191.654 cv
259.13 214.663 li
259.218 214.764 259.26 214.888 259.26 215.012 cv
259.26 215.161 259.198 215.31 259.076 215.416 cv
258.975 215.503 258.851 215.546 258.727 215.546 cv
cp
f
244.126 191.379 mo
243.572 191.379 243.121 191.83 243.121 192.385 cv
243.121 192.939 243.572 193.391 244.126 193.391 cv
244.681 193.391 245.132 192.939 245.132 192.385 cv
245.132 191.83 244.681 191.379 244.126 191.379 cv
cp
244.126 194.458 mo
242.983 194.458 242.054 193.528 242.054 192.385 cv
242.054 191.242 242.983 190.312 244.126 190.312 cv
245.27 190.312 246.2 191.242 246.2 192.385 cv
246.2 193.528 245.27 194.458 244.126 194.458 cv
cp
f
217.11 414.584 mo
207.772 414.584 li
207.772 356.949 li
217.11 356.949 li
217.11 414.584 li
cp
f
160.629 414.584 mo
207.772 409.433 li
210.057 398.163 li
162.051 409.433 li
160.629 414.584 li
cp
f
262.482 414.584 mo
215.339 409.433 li
213.055 398.163 li
261.061 409.433 li
262.482 414.584 li
cp
f
286.719 128.713 mo
284.184 128.713 282.121 130.775 282.121 133.311 cv
282.121 135.846 284.184 137.908 286.719 137.908 cv
289.254 137.908 291.317 135.846 291.317 133.311 cv
291.317 130.775 289.254 128.713 286.719 128.713 cv
cp
286.719 138.977 mo
283.595 138.977 281.054 136.435 281.054 133.311 cv
281.054 130.187 283.595 127.646 286.719 127.646 cv
289.843 127.646 292.384 130.187 292.384 133.311 cv
292.384 136.435 289.843 138.977 286.719 138.977 cv
cp
0 0 0 0 cmyk
f
274.688 143.055 mo
272.153 143.055 270.09 145.118 270.09 147.653 cv
270.09 150.188 272.153 152.251 274.688 152.251 cv
277.224 152.251 279.286 150.188 279.286 147.653 cv
279.286 145.118 277.224 143.055 274.688 143.055 cv
cp
274.688 153.318 mo
271.564 153.318 269.022 150.777 269.022 147.653 cv
269.022 144.529 271.564 141.987 274.688 141.987 cv
277.812 141.987 280.354 144.529 280.354 147.653 cv
280.354 150.777 277.812 153.318 274.688 153.318 cv
cp
f
248.352 141.395 mo
248.114 141.395 247.897 141.235 247.835 140.995 cv
245.149 130.606 li
245.076 130.321 245.247 130.03 245.532 129.956 cv
245.819 129.882 246.109 130.054 246.183 130.34 cv
248.869 140.728 li
248.942 141.013 248.771 141.304 248.486 141.378 cv
248.352 141.395 li
cp
f
244.126 135.837 mo
243.884 135.837 243.665 135.671 243.607 135.425 cv
243.54 135.138 243.718 134.851 244.005 134.783 cv
248.661 133.696 li
248.947 133.631 249.234 133.809 249.302 134.095 cv
249.369 134.382 249.19 134.669 248.903 134.736 cv
244.248 135.823 li
244.126 135.837 li
cp
f
298.25 189.324 mo
298.247 189.324 li
297.954 189.322 297.716 189.087 297.716 188.793 cv
297.716 188.177 298.912 177.727 299.048 176.537 cv
299.075 176.307 299.247 176.119 299.475 176.074 cv
299.702 176.028 299.933 176.136 300.045 176.339 cv
305.962 187.034 li
306.105 187.292 306.011 187.617 305.753 187.76 cv
305.496 187.902 305.171 187.81 305.028 187.551 cv
299.919 178.316 li
299.409 182.801 298.788 188.385 298.784 188.793 cv
298.781 189.086 298.542 189.324 298.25 189.324 cv
cp
f
165.036 167.732 mo
106.251 193.666 li
104.923 194.251 103.357 193.645 102.772 192.316 cv
102.011 190.591 li
101.425 189.263 102.032 187.697 103.36 187.111 cv
162.145 161.179 li
163.473 160.593 165.039 161.199 165.625 162.527 cv
166.386 164.253 li
166.971 165.581 166.364 167.146 165.036 167.732 cv
cp
1 .867247 .359258 .270176 cmyk
f
315.947 114.599 mo
262.164 122.171 li
260.727 122.373 259.385 121.363 259.183 119.926 cv
258.92 118.059 li
258.717 116.621 259.728 115.28 261.165 115.077 cv
314.949 107.506 li
316.386 107.304 317.728 108.313 317.93 109.751 cv
318.192 111.618 li
318.395 113.056 317.385 114.396 315.947 114.599 cv
cp
f
267.604 121.523 mo
267.555 122.423 266.787 123.111 265.888 123.063 cv
264.989 123.015 264.299 122.246 264.348 121.348 cv
264.396 120.448 265.165 119.76 266.063 119.808 cv
266.962 119.856 267.652 120.625 267.604 121.523 cv
cp
0 0 0 0 cmyk
f
273.477 118.006 mo
273.428 118.904 272.66 119.594 271.761 119.545 cv
270.862 119.497 270.173 118.729 270.221 117.83 cv
270.27 116.931 271.038 116.241 271.937 116.29 cv
272.836 116.339 273.525 117.106 273.477 118.006 cv
cp
f
279.478 119.962 mo
279.429 120.861 278.661 121.551 277.762 121.502 cv
276.863 121.453 276.173 120.686 276.222 119.786 cv
276.271 118.888 277.039 118.198 277.938 118.246 cv
278.836 118.295 279.526 119.063 279.478 119.962 cv
cp
f
284.927 116.447 mo
284.879 117.347 284.111 118.036 283.212 117.987 cv
282.313 117.938 281.624 117.171 281.672 116.271 cv
281.721 115.373 282.489 114.684 283.388 114.732 cv
284.287 114.78 284.976 115.549 284.927 116.447 cv
cp
f
290.325 118.372 mo
290.277 119.271 289.509 119.96 288.61 119.911 cv
287.711 119.863 287.021 119.095 287.07 118.196 cv
287.119 117.297 287.887 116.607 288.786 116.656 cv
289.685 116.705 290.374 117.473 290.325 118.372 cv
cp
f
295.829 114.981 mo
295.78 115.88 295.012 116.569 294.113 116.521 cv
293.214 116.472 292.525 115.704 292.574 114.805 cv
292.622 113.906 293.39 113.217 294.289 113.266 cv
295.188 113.314 295.877 114.082 295.829 114.981 cv
cp
f
300.601 117.295 mo
300.553 118.193 299.785 118.883 298.886 118.834 cv
297.987 118.785 297.297 118.018 297.346 117.118 cv
297.395 116.22 298.163 115.53 299.062 115.579 cv
299.96 115.628 300.65 116.396 300.601 117.295 cv
cp
f
214.127 184.573 mo
213.892 184.573 213.676 184.416 213.612 184.178 cv
213.396 183.375 214.07 182.815 214.563 182.407 cv
214.802 182.208 215.203 181.876 215.165 181.735 cv
215.127 181.595 214.614 181.509 214.307 181.458 cv
213.676 181.353 212.811 181.208 212.595 180.405 cv
212.378 179.604 213.053 179.044 213.546 178.635 cv
213.785 178.437 214.186 178.104 214.147 177.964 cv
214.11 177.824 213.597 177.739 213.291 177.688 cv
212.659 177.583 211.795 177.438 211.578 176.637 cv
211.362 175.835 212.037 175.275 212.529 174.867 cv
212.769 174.669 213.169 174.337 213.131 174.197 cv
213.093 174.057 212.581 173.972 212.274 173.92 cv
211.643 173.814 210.778 173.671 210.562 172.868 cv
210.346 172.066 211.021 171.507 211.513 171.099 cv
211.752 170.9 212.153 170.568 212.115 170.429 cv
212.077 170.289 211.564 170.203 211.258 170.152 cv
210.627 170.047 209.762 169.903 209.546 169.101 cv
209.329 168.299 210.004 167.74 210.497 167.331 cv
210.736 167.133 211.137 166.802 211.099 166.662 cv
211.062 166.522 210.549 166.438 210.243 166.387 cv
209.611 166.281 208.747 166.138 208.53 165.336 cv
208.314 164.534 208.989 163.975 209.482 163.566 cv
209.721 163.368 210.121 163.036 210.084 162.896 cv
210.046 162.757 209.533 162.672 209.227 162.62 cv
208.595 162.515 207.731 162.371 207.514 161.569 cv
207.298 160.767 207.973 160.208 208.466 159.8 cv
208.705 159.602 209.105 159.27 209.067 159.13 cv
209.03 158.989 208.517 158.904 208.21 158.854 cv
207.579 158.748 206.714 158.604 206.498 157.802 cv
206.282 157 206.957 156.44 207.45 156.032 cv
207.688 155.834 208.089 155.502 208.051 155.362 cv
208.014 155.223 207.501 155.138 207.194 155.086 cv
206.563 154.981 205.699 154.837 205.482 154.035 cv
205.266 153.233 205.941 152.674 206.434 152.266 cv
206.673 152.067 207.073 151.735 207.036 151.596 cv
206.998 151.456 206.485 151.371 206.179 151.32 cv
205.547 151.215 204.683 151.071 204.466 150.269 cv
204.25 149.467 204.925 148.908 205.418 148.5 cv
205.657 148.302 206.058 147.97 206.02 147.83 cv
205.982 147.69 205.47 147.605 205.163 147.554 cv
204.532 147.449 203.667 147.306 203.451 146.503 cv
203.234 145.701 203.91 145.143 204.402 144.734 cv
204.642 144.536 205.042 144.204 205.004 144.064 cv
204.967 143.925 204.454 143.84 204.148 143.788 cv
203.516 143.684 202.652 143.54 202.435 142.738 cv
202.219 141.936 202.894 141.377 203.387 140.969 cv
203.626 140.771 204.026 140.438 203.989 140.299 cv
203.951 140.159 203.438 140.074 203.132 140.023 cv
202.501 139.918 201.636 139.774 201.42 138.973 cv
201.204 138.171 201.878 137.611 202.372 137.203 cv
202.611 137.006 203.011 136.674 202.974 136.534 cv
202.936 136.396 202.423 136.31 202.117 136.259 cv
201.485 136.153 200.621 136.01 200.404 135.207 cv
200.188 134.406 200.863 133.847 201.356 133.438 cv
201.595 133.24 201.996 132.908 201.958 132.77 cv
201.921 132.63 201.408 132.545 201.102 132.494 cv
200.47 132.39 199.605 132.246 199.389 131.444 cv
199.173 130.643 199.848 130.083 200.341 129.675 cv
200.581 129.477 200.98 129.146 200.943 129.006 cv
200.866 128.722 201.035 128.429 201.319 128.352 cv
201.605 128.274 201.897 128.443 201.974 128.729 cv
202.19 129.529 201.515 130.089 201.022 130.497 cv
200.783 130.695 200.382 131.026 200.42 131.166 cv
200.458 131.305 200.97 131.391 201.276 131.441 cv
201.908 131.546 202.772 131.689 202.989 132.491 cv
203.205 133.293 202.53 133.853 202.037 134.261 cv
201.798 134.459 201.397 134.79 201.435 134.93 cv
201.473 135.069 201.986 135.154 202.292 135.206 cv
202.923 135.311 203.788 135.455 204.004 136.257 cv
204.22 137.059 203.545 137.617 203.052 138.025 cv
202.813 138.224 202.413 138.556 202.451 138.694 cv
202.488 138.834 203.001 138.919 203.307 138.97 cv
203.938 139.075 204.803 139.219 205.02 140.021 cv
205.236 140.823 204.561 141.382 204.068 141.79 cv
203.829 141.988 203.428 142.32 203.466 142.46 cv
203.503 142.6 204.017 142.685 204.323 142.735 cv
204.954 142.841 205.819 142.984 206.035 143.786 cv
206.251 144.588 205.576 145.147 205.084 145.556 cv
204.844 145.754 204.444 146.086 204.481 146.226 cv
204.519 146.365 205.032 146.45 205.338 146.501 cv
205.97 146.606 206.834 146.75 207.051 147.552 cv
207.267 148.354 206.592 148.913 206.099 149.321 cv
205.86 149.52 205.459 149.852 205.497 149.991 cv
205.535 150.131 206.047 150.216 206.354 150.267 cv
206.985 150.372 207.85 150.516 208.066 151.318 cv
208.283 152.12 207.608 152.679 207.115 153.088 cv
206.876 153.286 206.476 153.617 206.513 153.757 cv
206.551 153.897 207.063 153.982 207.37 154.033 cv
208.001 154.139 208.866 154.282 209.082 155.084 cv
209.298 155.886 208.624 156.445 208.131 156.854 cv
207.892 157.052 207.491 157.384 207.529 157.523 cv
207.567 157.664 208.08 157.749 208.386 157.8 cv
209.017 157.905 209.882 158.05 210.098 158.852 cv
210.315 159.653 209.64 160.213 209.147 160.621 cv
208.908 160.819 208.507 161.151 208.545 161.291 cv
208.583 161.431 209.096 161.517 209.402 161.567 cv
210.033 161.673 210.898 161.816 211.114 162.618 cv
211.331 163.421 210.656 163.979 210.163 164.388 cv
209.924 164.586 209.523 164.918 209.561 165.058 cv
209.599 165.197 210.111 165.282 210.417 165.333 cv
211.049 165.438 211.914 165.582 212.13 166.384 cv
212.346 167.186 211.671 167.745 211.178 168.153 cv
210.939 168.352 210.539 168.684 210.576 168.823 cv
210.614 168.963 211.127 169.048 211.434 169.1 cv
212.065 169.205 212.93 169.349 213.146 170.15 cv
213.362 170.953 212.687 171.513 212.194 171.921 cv
211.955 172.119 211.555 172.451 211.592 172.591 cv
211.63 172.73 212.143 172.816 212.45 172.867 cv
213.081 172.973 213.946 173.116 214.162 173.919 cv
214.378 174.721 213.704 175.28 213.211 175.688 cv
212.972 175.887 212.571 176.219 212.609 176.359 cv
212.646 176.499 213.159 176.584 213.466 176.635 cv
214.097 176.74 214.962 176.885 215.178 177.687 cv
215.395 178.488 214.72 179.048 214.227 179.457 cv
213.988 179.655 213.587 179.987 213.626 180.127 cv
213.663 180.268 214.176 180.354 214.483 180.405 cv
215.114 180.511 215.979 180.655 216.195 181.458 cv
216.412 182.26 215.737 182.82 215.245 183.229 cv
215.005 183.427 214.605 183.76 214.643 183.899 cv
214.72 184.185 214.551 184.478 214.267 184.555 cv
214.127 184.573 li
cp
1 .867124 .391089 .340948 cmyk
f
93.2271 182.359 mo
93.0293 182.359 92.8394 182.249 92.7466 182.06 cv
92.6177 181.794 92.728 181.475 92.9932 181.346 cv
174.893 141.478 li
176.883 140.508 179.202 140.432 181.252 141.267 cv
183.303 142.102 184.909 143.775 185.656 145.86 cv
192.281 164.325 li
192.38 164.604 192.236 164.909 191.959 165.009 cv
191.68 165.108 191.376 164.964 191.276 164.686 cv
184.651 146.221 li
184.006 144.421 182.621 142.976 180.85 142.255 cv
179.08 141.534 177.078 141.601 175.359 142.438 cv
93.4605 182.306 li
93.2271 182.359 li
cp
f
463.058 112.226 mo
463.027 112.225 li
462.733 112.207 462.508 111.955 462.525 111.661 cv
462.614 110.095 li
460.909 109.846 li
460.617 109.803 460.415 109.532 460.458 109.24 cv
460.5 108.948 460.771 108.746 461.063 108.789 cv
463.251 109.108 li
463.525 109.148 463.723 109.392 463.708 109.667 cv
463.59 111.722 li
463.574 112.006 463.339 112.226 463.058 112.226 cv
cp
453.07 112.977 mo
453.06 112.977 li
452.765 112.971 452.53 112.728 452.536 112.433 cv
452.617 108.163 li
452.62 108.01 452.688 107.865 452.805 107.767 cv
452.922 107.667 453.077 107.624 453.228 107.646 cv
456.837 108.172 li
457.129 108.215 457.331 108.486 457.289 108.777 cv
457.246 109.069 456.972 109.271 456.683 109.229 cv
453.673 108.789 li
453.604 112.453 li
453.598 112.744 453.36 112.977 453.07 112.977 cv
cp
462.571 120.751 mo
462.54 120.751 li
462.246 120.733 462.021 120.481 462.038 120.188 cv
462.281 115.924 li
462.298 115.63 462.555 115.408 462.844 115.422 cv
463.138 115.438 463.364 115.69 463.347 115.985 cv
463.104 120.248 li
463.087 120.532 462.852 120.751 462.571 120.751 cv
cp
452.908 121.515 mo
452.897 121.515 li
452.603 121.509 452.368 121.266 452.374 120.971 cv
452.455 116.702 li
452.46 116.407 452.699 116.159 452.999 116.178 cv
453.293 116.184 453.528 116.427 453.522 116.722 cv
453.441 120.991 li
453.436 121.282 453.198 121.515 452.908 121.515 cv
cp
462.084 129.277 mo
462.054 129.276 li
461.759 129.26 461.534 129.008 461.551 128.713 cv
461.794 124.45 li
461.812 124.156 462.073 123.934 462.357 123.948 cv
462.652 123.965 462.877 124.217 462.86 124.511 cv
462.617 128.774 li
462.601 129.058 462.366 129.277 462.084 129.277 cv
cp
452.746 130.054 mo
452.735 130.053 li
452.441 130.048 452.206 129.804 452.212 129.51 cv
452.292 125.24 li
452.298 124.949 452.536 124.717 452.826 124.717 cv
452.836 124.717 li
453.131 124.723 453.366 124.966 453.36 125.261 cv
453.279 129.529 li
453.273 129.821 453.036 130.054 452.746 130.054 cv
cp
461.598 137.804 mo
461.567 137.803 li
461.273 137.786 461.048 137.534 461.065 137.239 cv
461.308 132.977 li
461.325 132.683 461.571 132.459 461.872 132.474 cv
462.166 132.491 462.391 132.743 462.374 133.037 cv
462.13 137.3 li
462.114 137.584 461.879 137.804 461.598 137.804 cv
cp
452.583 138.592 mo
452.573 138.592 li
452.278 138.586 452.044 138.343 452.049 138.048 cv
452.13 133.778 li
452.136 133.483 452.376 133.243 452.674 133.255 cv
452.969 133.261 453.204 133.504 453.198 133.799 cv
453.117 138.068 li
453.111 138.359 452.874 138.592 452.583 138.592 cv
cp
461.111 146.33 mo
461.08 146.329 li
460.786 146.313 460.561 146.061 460.578 145.766 cv
460.821 141.503 li
460.838 141.209 461.089 140.989 461.385 141 cv
461.679 141.017 461.904 141.27 461.887 141.563 cv
461.644 145.826 li
461.627 146.11 461.392 146.33 461.111 146.33 cv
cp
452.422 147.13 mo
452.411 147.13 li
452.117 147.124 451.882 146.881 451.888 146.586 cv
451.969 142.317 li
451.974 142.022 452.229 141.777 452.512 141.794 cv
452.807 141.8 453.042 142.043 453.036 142.338 cv
452.955 146.606 li
452.95 146.897 452.711 147.13 452.422 147.13 cv
cp
460.625 154.856 mo
460.594 154.855 li
460.3 154.838 460.075 154.586 460.091 154.292 cv
460.335 150.029 li
460.352 149.734 460.607 149.515 460.898 149.526 cv
461.192 149.543 461.417 149.795 461.4 150.09 cv
461.157 154.353 li
461.141 154.637 460.906 154.856 460.625 154.856 cv
cp
452.259 155.669 mo
452.249 155.669 li
451.954 155.663 451.72 155.42 451.725 155.125 cv
451.806 150.855 li
451.812 150.561 452.054 150.313 452.35 150.332 cv
452.645 150.338 452.879 150.581 452.874 150.876 cv
452.793 155.145 li
452.787 155.437 452.549 155.669 452.259 155.669 cv
cp
460.138 163.382 mo
460.107 163.381 li
459.813 163.364 459.588 163.112 459.604 162.818 cv
459.848 158.555 li
459.865 158.261 460.115 158.039 460.412 158.053 cv
460.706 158.069 460.931 158.321 460.914 158.616 cv
460.67 162.879 li
460.654 163.163 460.419 163.382 460.138 163.382 cv
cp
452.098 164.207 mo
452.087 164.207 li
451.792 164.201 451.558 163.958 451.563 163.663 cv
451.644 159.395 li
451.65 159.103 451.888 158.87 452.178 158.87 cv
452.188 158.871 li
452.483 158.876 452.717 159.12 452.712 159.414 cv
452.631 163.684 li
452.625 163.975 452.387 164.207 452.098 164.207 cv
cp
459.651 171.908 mo
459.62 171.907 li
459.326 171.891 459.101 171.639 459.118 171.344 cv
459.362 167.081 li
459.378 166.787 459.623 166.564 459.925 166.579 cv
460.219 166.596 460.444 166.848 460.427 167.142 cv
460.184 171.405 li
460.167 171.688 459.933 171.908 459.651 171.908 cv
cp
451.935 172.746 mo
451.925 172.746 li
451.63 172.74 451.396 172.497 451.401 172.202 cv
451.482 167.933 li
451.488 167.638 451.731 167.396 452.026 167.409 cv
452.32 167.415 452.555 167.658 452.549 167.953 cv
452.469 172.222 li
452.463 172.514 452.225 172.746 451.935 172.746 cv
cp
459.165 180.435 mo
459.134 180.434 li
458.84 180.417 458.615 180.165 458.631 179.87 cv
458.875 175.607 li
458.892 175.313 459.151 175.09 459.438 175.104 cv
459.732 175.122 459.958 175.374 459.941 175.668 cv
459.697 179.931 li
459.681 180.215 459.446 180.435 459.165 180.435 cv
cp
451.773 181.284 mo
451.763 181.284 li
451.468 181.278 451.233 181.035 451.239 180.74 cv
451.32 176.471 li
451.326 176.18 451.563 175.947 451.854 175.947 cv
451.864 175.947 li
452.159 175.953 452.393 176.196 452.388 176.491 cv
452.307 180.761 li
452.301 181.052 452.063 181.284 451.773 181.284 cv
cp
458.678 188.961 mo
458.648 188.96 li
458.354 188.943 458.128 188.69 458.145 188.396 cv
458.388 184.134 li
458.405 183.84 458.659 183.62 458.951 183.631 cv
459.246 183.647 459.471 183.899 459.454 184.194 cv
459.211 188.457 li
459.195 188.741 458.959 188.961 458.678 188.961 cv
cp
451.611 189.822 mo
451.601 189.822 li
451.306 189.817 451.071 189.573 451.077 189.279 cv
451.158 185.01 li
451.164 184.715 451.408 184.466 451.702 184.486 cv
451.996 184.491 452.231 184.735 452.225 185.029 cv
452.145 189.299 li
452.139 189.591 451.901 189.822 451.611 189.822 cv
cp
457.593 192.332 mo
453.323 192.332 li
453.028 192.332 452.789 192.094 452.789 191.799 cv
452.789 191.504 453.028 191.265 453.323 191.265 cv
457.593 191.265 li
457.887 191.265 458.126 191.504 458.126 191.799 cv
458.126 192.094 457.887 192.332 457.593 192.332 cv
cp
.897398 .829099 .457404 .496651 cmyk
f
439.808 116.593 mo
439.791 116.593 li
439.497 116.584 439.265 116.337 439.274 116.043 cv
439.337 114 li
438.218 114.008 li
437.923 114.006 437.683 113.771 437.681 113.478 cv
437.679 113.183 437.917 112.942 438.211 112.94 cv
439.884 112.929 li
440.019 112.924 440.168 112.986 440.27 113.09 cv
440.371 113.194 440.425 113.334 440.421 113.479 cv
440.341 116.075 li
440.333 116.364 440.095 116.593 439.808 116.593 cv
cp
429.754 118.332 mo
429.744 118.332 li
429.449 118.326 429.214 118.083 429.22 117.788 cv
429.301 113.519 li
429.306 113.229 429.542 112.997 429.831 112.995 cv
433.942 112.968 li
433.945 112.968 li
434.239 112.968 434.477 113.205 434.479 113.498 cv
434.481 113.793 434.244 114.034 433.949 114.036 cv
430.358 114.06 li
430.287 117.809 li
430.282 118.1 430.043 118.332 429.754 118.332 cv
cp
439.546 125.129 mo
439.529 125.129 li
439.234 125.119 439.003 124.874 439.012 124.579 cv
439.143 120.311 li
439.152 120.017 439.402 119.787 439.693 119.794 cv
439.988 119.803 440.219 120.049 440.21 120.344 cv
440.079 124.611 li
440.07 124.9 439.833 125.129 439.546 125.129 cv
cp
429.592 126.87 mo
429.581 126.87 li
429.287 126.864 429.052 126.621 429.058 126.326 cv
429.139 122.057 li
429.145 121.763 429.382 121.512 429.683 121.534 cv
429.977 121.539 430.212 121.783 430.207 122.077 cv
430.125 126.347 li
430.12 126.638 429.881 126.87 429.592 126.87 cv
cp
439.284 133.665 mo
439.267 133.665 li
438.972 133.655 438.741 133.409 438.75 133.115 cv
438.881 128.847 li
438.89 128.553 439.146 128.317 439.431 128.33 cv
439.725 128.339 439.957 128.585 439.948 128.88 cv
439.816 133.147 li
439.808 133.437 439.571 133.665 439.284 133.665 cv
cp
429.43 135.409 mo
429.419 135.409 li
429.125 135.403 428.89 135.16 428.896 134.865 cv
428.977 130.596 li
428.982 130.301 429.236 130.062 429.521 130.072 cv
429.815 130.078 430.05 130.321 430.044 130.616 cv
429.963 134.885 li
429.958 135.177 429.719 135.409 429.43 135.409 cv
cp
439.021 142.201 mo
439.004 142.201 li
438.71 142.191 438.479 141.945 438.487 141.651 cv
438.619 137.383 li
438.627 137.088 438.872 136.857 439.168 136.865 cv
439.463 136.875 439.694 137.121 439.685 137.415 cv
439.554 141.684 li
439.545 141.973 439.308 142.201 439.021 142.201 cv
cp
429.268 143.947 mo
429.257 143.947 li
428.962 143.941 428.728 143.698 428.733 143.403 cv
428.814 139.134 li
428.82 138.839 429.06 138.596 429.358 138.61 cv
429.653 138.616 429.888 138.859 429.882 139.154 cv
429.801 143.424 li
429.795 143.715 429.557 143.947 429.268 143.947 cv
cp
438.759 150.737 mo
438.742 150.737 li
438.447 150.728 438.216 150.481 438.225 150.187 cv
438.356 145.919 li
438.365 145.624 438.616 145.389 438.906 145.401 cv
439.201 145.411 439.432 145.657 439.423 145.952 cv
439.292 150.22 li
439.283 150.509 439.046 150.737 438.759 150.737 cv
cp
429.105 152.485 mo
429.095 152.485 li
428.8 152.48 428.566 152.236 428.571 151.942 cv
428.652 147.673 li
428.658 147.378 428.913 147.131 429.196 147.149 cv
429.491 147.155 429.726 147.398 429.72 147.693 cv
429.639 151.962 li
429.633 152.254 429.395 152.485 429.105 152.485 cv
cp
438.497 159.272 mo
438.48 159.272 li
438.186 159.264 437.954 159.018 437.963 158.723 cv
438.094 154.455 li
438.103 154.16 438.36 153.929 438.644 153.938 cv
438.938 153.946 439.17 154.193 439.161 154.487 cv
439.03 158.756 li
439.021 159.045 438.784 159.272 438.497 159.272 cv
cp
428.943 161.024 mo
428.933 161.024 li
428.638 161.019 428.403 160.775 428.409 160.48 cv
428.49 156.211 li
428.496 155.916 428.737 155.665 429.034 155.688 cv
429.329 155.693 429.563 155.937 429.558 156.231 cv
429.477 160.501 li
429.471 160.792 429.233 161.024 428.943 161.024 cv
cp
438.234 167.809 mo
438.218 167.809 li
437.923 167.8 437.692 167.554 437.701 167.259 cv
437.832 162.991 li
437.841 162.696 438.086 162.469 438.381 162.474 cv
438.676 162.482 438.908 162.729 438.898 163.023 cv
438.768 167.292 li
438.759 167.581 438.521 167.809 438.234 167.809 cv
cp
428.781 169.563 mo
428.771 169.563 li
428.476 169.557 428.242 169.313 428.247 169.019 cv
428.328 164.75 li
428.333 164.455 428.591 164.214 428.872 164.227 cv
429.167 164.231 429.401 164.476 429.396 164.77 cv
429.314 169.039 li
429.309 169.33 429.071 169.563 428.781 169.563 cv
cp
437.972 176.345 mo
437.956 176.345 li
437.661 176.336 437.429 176.09 437.438 175.795 cv
437.569 171.527 li
437.578 171.232 437.83 170.999 438.119 171.01 cv
438.414 171.019 438.645 171.265 438.636 171.56 cv
438.505 175.827 li
438.497 176.116 438.259 176.345 437.972 176.345 cv
cp
428.619 178.102 mo
428.608 178.102 li
428.314 178.096 428.079 177.853 428.085 177.558 cv
428.166 173.288 li
428.172 172.993 428.415 172.749 428.71 172.765 cv
429.005 172.771 429.239 173.014 429.234 173.309 cv
429.152 177.578 li
429.147 177.869 428.909 178.102 428.619 178.102 cv
cp
437.71 184.881 mo
437.693 184.881 li
437.398 184.872 437.167 184.625 437.176 184.331 cv
437.307 180.063 li
437.316 179.769 437.556 179.539 437.857 179.546 cv
438.152 179.555 438.383 179.801 438.374 180.096 cv
438.243 184.363 li
438.234 184.652 437.997 184.881 437.71 184.881 cv
cp
428.457 186.64 mo
428.447 186.64 li
428.152 186.634 427.917 186.391 427.923 186.096 cv
428.004 181.827 li
428.009 181.535 428.248 181.303 428.537 181.303 cv
428.548 181.303 li
428.842 181.309 429.077 181.552 429.071 181.847 cv
428.99 186.116 li
428.985 186.407 428.747 186.64 428.457 186.64 cv
cp
437.447 193.417 mo
437.431 193.417 li
437.136 193.407 436.905 193.161 436.914 192.867 cv
437.045 188.599 li
437.054 188.304 437.299 188.07 437.595 188.082 cv
437.89 188.091 438.121 188.337 438.112 188.632 cv
437.98 192.899 li
437.972 193.188 437.734 193.417 437.447 193.417 cv
cp
428.295 195.179 mo
428.285 195.178 li
427.99 195.173 427.755 194.929 427.761 194.635 cv
427.842 190.365 li
427.848 190.07 428.092 189.818 428.386 189.842 cv
428.681 189.848 428.915 190.091 428.91 190.386 cv
428.829 194.654 li
428.823 194.946 428.585 195.179 428.295 195.179 cv
cp
435.836 196.158 mo
431.566 196.158 li
431.271 196.158 431.032 195.92 431.032 195.625 cv
431.032 195.33 431.271 195.091 431.566 195.091 cv
435.836 195.091 li
436.13 195.091 436.37 195.33 436.37 195.625 cv
436.37 195.92 436.13 196.158 435.836 196.158 cv
cp
f
519.907 172.479 mo
505.734 169.483 491.646 167.513 477.646 166.605 cv
476.482 166.53 475.626 165.488 475.786 164.333 cv
478.64 143.771 li
478.79 142.688 479.781 141.925 480.866 142.057 cv
493.249 143.567 506.94 145.409 523.485 147.974 cv
524.567 148.141 525.315 149.146 525.165 150.229 cv
522.311 170.797 li
522.15 171.95 521.045 172.719 519.907 172.479 cv
cp
0 .918029 .0663767 0 cmyk
f
333.072 320.003 mo
341.096 321.941 li
344.485 334.716 li
336.461 332.777 li
333.072 320.003 li
cp
1 .867247 .359258 .270176 cmyk
f
336.461 332.777 mo
344.485 334.716 li
333.098 339.541 li
325.074 337.603 li
336.461 332.777 li
.756252 .687648 .654871 .887205 cmyk
f
325.074 337.603 mo
321.685 324.828 li
333.072 320.003 li
336.461 332.777 li
325.074 337.603 li
.500725 0 .190341 0 cmyk
f
104.086 310.971 mo
96.062 312.909 li
92.6729 325.684 li
100.697 323.745 li
104.086 310.971 li
cp
.426215 .547295 0 0 cmyk
f
100.697 323.745 mo
92.6729 325.684 li
104.06 330.509 li
112.084 328.57 li
100.697 323.745 li
cp
.756252 .687648 .654871 .887205 cmyk
f
112.084 328.57 mo
115.473 315.796 li
104.086 310.971 li
100.697 323.745 li
112.084 328.57 li
cp
.500725 0 .190341 0 cmyk
f
494.313 264.489 mo
494.313 302.728 li
494.313 305.802 496.786 308.295 499.836 308.295 cv
510.515 308.295 li
513.566 308.295 516.039 310.787 516.039 313.861 cv
516.039 317.97 li
516.039 321.045 518.512 323.537 521.563 323.537 cv
531.573 323.537 li
534.624 323.537 537.097 321.045 537.097 317.97 cv
537.097 308.295 li
537.097 285.326 li
537.097 264.489 li
537.097 261.415 534.624 258.923 531.573 258.923 cv
499.836 258.923 li
496.786 258.923 494.313 261.415 494.313 264.489 cv
cp
f
527.229 284.314 mo
500.614 284.314 li
499.455 284.314 498.515 283.374 498.515 282.215 cv
498.515 268.3 li
498.515 267.14 499.455 266.2 500.614 266.2 cv
527.229 266.2 li
528.389 266.2 529.329 267.14 529.329 268.3 cv
529.329 282.215 li
529.329 283.374 528.389 284.314 527.229 284.314 cv
cp
1 .867247 .359258 .270176 cmyk
f
502.816 302.447 mo
501.386 302.447 li
500.28 302.447 499.384 301.551 499.384 300.445 cv
499.384 292.616 li
499.384 291.511 500.28 290.614 501.386 290.614 cv
502.816 290.614 li
503.921 290.614 504.817 291.511 504.817 292.616 cv
504.817 300.445 li
504.817 301.551 503.921 302.447 502.816 302.447 cv
cp
f
512.626 302.447 mo
511.196 302.447 li
510.09 302.447 509.194 301.551 509.194 300.445 cv
509.194 292.616 li
509.194 291.511 510.09 290.614 511.196 290.614 cv
512.626 290.614 li
513.732 290.614 514.628 291.511 514.628 292.616 cv
514.628 300.445 li
514.628 301.551 513.732 302.447 512.626 302.447 cv
cp
f
522.437 302.447 mo
521.006 302.447 li
519.901 302.447 519.005 301.551 519.005 300.445 cv
519.005 292.616 li
519.005 291.511 519.901 290.614 521.006 290.614 cv
522.437 290.614 li
523.542 290.614 524.438 291.511 524.438 292.616 cv
524.438 300.445 li
524.438 301.551 523.542 302.447 522.437 302.447 cv
cp
f
470.211 350.392 mo
470.021 350.357 li
469.746 350.252 469.607 349.943 469.712 349.669 cv
473.639 339.352 li
473.741 339.083 474.037 338.942 474.31 339.036 cv
484.744 342.586 li
487.048 332.656 li
487.083 332.507 487.181 332.379 487.317 332.307 cv
487.453 332.233 487.614 332.224 487.758 332.278 cv
496.069 335.432 li
498.9 319.676 li
498.953 319.386 499.229 319.193 499.52 319.245 cv
499.811 319.297 500.003 319.575 499.951 319.865 cv
497.006 336.254 li
496.978 336.409 496.882 336.546 496.744 336.624 cv
496.605 336.702 496.439 336.715 496.291 336.658 cv
487.95 333.493 li
485.65 343.401 li
485.616 343.549 485.521 343.675 485.389 343.747 cv
485.258 343.821 485.1 343.835 484.958 343.786 cv
474.453 340.212 li
470.71 350.048 li
470.628 350.261 470.426 350.392 470.211 350.392 cv
.897398 .829099 .457404 .496651 cmyk
f
502.638 319.572 mo
502.638 321.29 501.246 322.682 499.529 322.682 cv
497.812 322.682 496.419 321.29 496.419 319.572 cv
496.419 317.855 497.812 316.464 499.529 316.464 cv
501.246 316.464 502.638 317.855 502.638 319.572 cv
cp
f
261.667 244.671 mo
259.705 244.671 258.108 246.269 258.108 248.23 cv
258.108 250.192 259.705 251.789 261.667 251.789 cv
263.63 251.789 265.227 250.192 265.227 248.23 cv
265.227 246.269 263.63 244.671 261.667 244.671 cv
cp
261.667 252.856 mo
259.117 252.856 257.041 250.781 257.041 248.23 cv
257.041 245.68 259.117 243.604 261.667 243.604 cv
264.218 243.604 266.294 245.68 266.294 248.23 cv
266.294 250.781 264.218 252.856 261.667 252.856 cv
cp
f
271.875 262.673 mo
271.875 264.361 270.506 265.729 268.817 265.729 cv
267.129 265.729 265.76 264.361 265.76 262.673 cv
265.76 260.984 267.129 259.615 268.817 259.615 cv
270.506 259.615 271.875 260.984 271.875 262.673 cv
cp
f
293.894 238.43 mo
293.894 241.926 291.06 244.76 287.563 244.76 cv
284.067 244.76 281.233 241.926 281.233 238.43 cv
281.233 234.934 284.067 232.1 287.563 232.1 cv
291.06 232.1 293.894 234.934 293.894 238.43 cv
cp
f
393.606 92.8184 mo
393.788 93.001 400.721 90.6738 405.379 89.083 cv
407.884 88.2266 410.655 89.0117 412.343 91.0508 cv
412.75 91.542 412.559 92.2871 411.965 92.5225 cv
395.66 98.9902 li
393.606 92.8184 li
cp
0 .918029 .0663767 0 cmyk
f
391.068 123.148 mo
398.765 123.446 li
401.526 122.808 403.385 120.218 403.104 117.397 cv
402.301 109.348 399.604 96.0947 398.72 95.0508 cv
397.514 93.627 388.528 88.7871 382.071 90.6582 cv
375.614 92.5303 366.743 100.377 370.678 107.659 cv
372.004 110.112 378.229 121.704 378.229 121.704 cv
391.068 123.148 li
cp
.0011902 .363043 .614893 0 cmyk
f
398.72 95.0508 mo
378.744 92.0469 li
370.695 98.585 li
372.653 111.326 li
378.229 121.704 li
383.709 110.069 li
383.709 110.069 388.463 112.319 389.196 109.032 cv
389.929 105.744 389.61 101.197 389.61 101.197 cv
398.72 95.0508 li
cp
1 .867247 .359258 .270176 cmyk
f
387.3 109.19 mo
387.666 111.212 386.324 113.146 384.303 113.512 cv
382.283 113.877 380.348 112.536 379.982 110.516 cv
379.617 108.494 380.958 106.56 382.979 106.194 cv
385 105.828 386.934 107.17 387.3 109.19 cv
cp
.0011902 .363043 .614893 0 cmyk
f
399.974 104.963 mo
400.491 105.944 402.478 108.323 403.845 109.913 cv
404.483 110.656 404.168 111.808 403.241 112.124 cv
400.447 113.078 li
399.974 104.963 li
cp
f
384.501 112.215 mo
384.893 112.092 385.147 111.699 385.083 111.28 cv
385.013 110.818 384.582 110.5 384.119 110.57 cv
383.599 110.649 383.111 110.291 383.031 109.771 cv
382.953 109.25 383.313 108.76 383.832 108.684 cv
384.297 108.612 384.612 108.181 384.542 107.719 cv
384.472 107.256 384.04 106.938 383.577 107.009 cv
382.132 107.229 381.138 108.581 381.357 110.024 cv
381.577 111.469 382.93 112.465 384.374 112.245 cv
384.501 112.215 li
cp
.411444 .692866 .946502 .470893 cmyk
f
398.467 101.141 mo
397.156 101.368 395.964 101.964 395.01 102.893 cv
394.375 103.51 395.269 104.567 395.91 103.943 cv
396.701 103.174 397.623 102.691 398.714 102.502 cv
399.591 102.351 399.346 100.988 398.467 101.141 cv
cp
1 .867247 .359258 .270176 cmyk
f
402.924 115.817 mo
402.769 115.792 402.621 115.766 402.51 115.745 cv
402.043 115.661 401.604 115.501 401.173 115.305 cv
400.36 114.937 399.893 116.239 400.699 116.605 cv
401.451 116.946 402.259 117.145 403.082 117.19 cv
403.036 116.751 402.984 116.295 402.924 115.817 cv
cp
f
399.366 106.427 mo
399.49 107.113 399.165 107.746 398.64 107.842 cv
398.116 107.937 397.589 107.457 397.465 106.771 cv
397.341 106.084 397.666 105.45 398.19 105.355 cv
398.715 105.261 399.241 105.74 399.366 106.427 cv
cp
f
378.229 121.704 mo
377.11 130.767 li
392.965 132.56 li
394.208 122.375 li
378.229 121.704 li
cp
.0011902 .363043 .614893 0 cmyk
f
394.099 123.266 mo
385.007 121.727 li
385.007 121.727 384.97 128.467 393.24 130.312 cv
394.099 123.266 li
cp
.411444 .692866 .946502 .470893 cmyk
f
372.653 111.326 mo
399.262 97.0586 li
398.422 93.7061 395.779 91.1035 392.413 90.3174 cv
389.531 89.6445 li
386.041 88.8291 382.373 89.3438 379.241 91.0859 cv
375.422 93.2119 li
370.313 96.0547 368.125 102.399 370.678 107.659 cv
372.653 111.326 li
cp
0 .918029 .0663767 0 cmyk
f
382.844 105.642 mo
392.972 101.701 li
392.57 99.0762 li
392.411 98.0391 392.989 97.0293 393.964 96.6416 cv
403.071 93.0176 li
404.611 92.4043 406.342 93.2627 406.787 94.8584 cv
409.432 104.338 li
409.859 105.868 408.923 107.445 407.375 107.803 cv
398.149 109.938 li
397.286 110.137 396.386 109.813 395.85 109.108 cv
384.59 110.907 li
383.837 111.027 383.099 110.619 382.801 109.917 cv
381.918 107.836 li
381.552 106.975 381.971 105.981 382.844 105.642 cv
cp
.756252 .687648 .654871 .887205 cmyk
f
383.167 110.294 mo
374.192 114.153 li
374.014 114.229 373.808 114.147 373.731 113.97 cv
373.083 112.46 li
373.006 112.282 373.088 112.076 373.266 112 cv
382.241 108.141 li
382.419 108.064 382.625 108.146 382.702 108.324 cv
383.351 109.834 li
383.427 110.012 383.345 110.218 383.167 110.294 cv
cp
f
409.432 104.338 mo
406.787 94.8584 li
406.711 94.585 406.594 94.335 406.45 94.1084 cv
402.978 95.0635 li
401.985 95.3369 401.402 96.3623 401.675 97.3555 cv
403.71 104.754 li
403.983 105.746 405.009 106.329 406.001 106.057 cv
409.532 105.085 li
409.532 104.839 409.501 104.588 409.432 104.338 cv
cp
1 .867247 .359258 .270176 cmyk
f
346.25 223.466 mo
317.485 201.451 li
312.461 197.984 310.761 191.344 313.5 185.888 cv
347.632 139.811 li
352.686 133.212 362.198 132.104 368.634 137.363 cv
374.737 142.352 375.828 151.262 371.108 157.575 cv
346.866 190 li
361.782 201.047 li
346.25 223.466 li
cp
.0011902 .363043 .614893 0 cmyk
f
346.25 223.466 mo
356.417 230.977 li
356.417 234.524 li
349.82 233.323 li
347.396 232.882 345.031 234.35 344.35 236.718 cv
343.654 239.135 344.943 241.68 347.304 242.548 cv
353.27 244.741 363.505 248.44 363.505 248.013 cv
363.505 247.409 369.336 206.466 369.336 206.466 cv
360.884 199.945 li
346.25 223.466 li
cp
.756252 .687648 .654871 .887205 cmyk
f
356.411 182.41 mo
329.679 160.401 li
350.542 135.061 li
355.02 129.622 363.058 128.844 368.497 133.321 cv
375.534 139.115 li
380.973 143.593 381.752 151.632 377.274 157.07 cv
356.411 182.41 li
cp
1 .867247 .359258 .270176 cmyk
f
347.094 191.075 mo
347.288 190.952 347.422 190.744 347.445 190.503 cv
347.48 190.145 347.259 189.81 346.916 189.7 cv
340.92 187.785 li
340.517 187.657 340.087 187.879 339.958 188.282 cv
339.829 188.685 340.051 189.115 340.454 189.244 cv
343.068 190.078 li
328.702 191.747 li
328.281 191.796 327.981 192.176 328.03 192.596 cv
328.079 193.015 328.459 193.316 328.879 193.268 cv
346.771 191.189 li
346.889 191.176 346.999 191.136 347.094 191.075 cv
cp
.345312 .781857 1 .416999 cmyk
f
371.228 385.569 mo
371.228 410.685 li
371.228 412.018 372.309 413.099 373.643 413.099 cv
428.254 413.099 li
429.695 413.099 430.815 411.846 430.654 410.414 cv
429.824 403.03 li
429.46 399.794 426.723 397.347 423.466 397.347 cv
398.436 397.347 li
397.792 385.569 li
371.228 385.569 li
cp
0 .918029 .0663767 0 cmyk
f
371.228 410.684 mo
371.228 412.018 372.309 413.099 373.643 413.099 cv
428.254 413.099 li
429.695 413.099 430.815 411.846 430.654 410.414 cv
430.503 409.074 li
371.228 409.074 li
371.228 410.684 li
cp
1 .867247 .359258 .270176 cmyk
f
384.624 398.127 mo
387.932 398.127 390.614 395.445 390.614 392.137 cv
390.614 385.569 li
378.634 385.569 li
378.634 392.137 li
378.634 395.445 381.315 398.127 384.624 398.127 cv
cp
f
414.696 385.569 mo
414.696 410.685 li
414.696 412.018 415.777 413.099 417.111 413.099 cv
471.723 413.099 li
473.163 413.099 474.283 411.846 474.122 410.414 cv
473.292 403.03 li
472.928 399.794 470.191 397.347 466.934 397.347 cv
441.904 397.347 li
441.26 385.569 li
414.696 385.569 li
cp
0 .918029 .0663767 0 cmyk
f
414.696 410.684 mo
414.696 412.018 415.777 413.099 417.111 413.099 cv
471.723 413.099 li
473.163 413.099 474.283 411.846 474.122 410.414 cv
473.972 409.074 li
414.696 409.074 li
414.696 410.684 li
cp
1 .867247 .359258 .270176 cmyk
f
428.092 398.127 mo
431.4 398.127 434.082 395.445 434.082 392.137 cv
434.082 385.569 li
422.102 385.569 li
422.102 392.137 li
422.102 395.445 424.783 398.127 428.092 398.127 cv
cp
f
360.281 219.747 mo
360.281 390.157 li
404.714 390.157 li
404.714 219.747 li
360.281 219.747 li
.426215 .547295 0 0 cmyk
f
408.417 298.634 mo
412.603 387.823 li
454.461 387.823 li
448.919 288.99 li
448.751 285.998 448.054 283.059 446.861 280.31 cv
420.009 218.459 li
374.931 222.766 li
408.417 298.634 li
f
388.397 253.812 mo
388.398 253.812 li
388.397 253.812 li
cp
404.715 290.778 mo
404.506 290.778 404.309 290.655 404.222 290.451 cv
398.397 276.619 389.472 255.829 388.151 253.798 cv
386.789 253.692 381.604 252.965 380.974 252.877 cv
380.683 252.836 380.479 252.565 380.52 252.273 cv
380.562 251.982 380.83 251.779 381.123 251.819 cv
383.762 252.191 387.876 252.743 388.398 252.743 cv
388.848 252.743 389 252.743 391.75 258.834 cv
393.135 261.902 395.012 266.181 397.327 271.55 cv
401.268 280.688 405.167 289.944 405.207 290.037 cv
405.321 290.309 405.193 290.621 404.921 290.736 cv
404.715 290.778 li
cp
.897398 .829099 .457404 .496651 cmyk
f
388.397 253.812 mo
388.128 253.812 387.896 253.607 387.867 253.334 cv
387.836 253.041 388.048 252.777 388.341 252.747 cv
397.091 251.817 li
397.383 251.784 397.647 251.999 397.678 252.292 cv
397.709 252.585 397.497 252.848 397.204 252.879 cv
388.454 253.808 li
388.397 253.812 li
cp
f
428.092 301.421 mo
428.031 301.418 li
408.356 299.164 li
408.115 299.136 407.922 298.948 407.889 298.707 cv
407.855 298.465 407.989 298.232 408.215 298.14 cv
420.772 292.988 li
421.046 292.877 421.356 293.007 421.469 293.279 cv
421.581 293.552 421.45 293.863 421.177 293.976 cv
410.541 298.34 li
428.153 300.357 li
428.445 300.391 428.656 300.655 428.622 300.948 cv
428.591 301.22 428.36 301.421 428.092 301.421 cv
cp
f
404.714 384.01 mo
360.281 384.01 li
359.986 384.01 359.747 383.771 359.747 383.477 cv
359.747 383.182 359.986 382.942 360.281 382.942 cv
404.714 382.942 li
405.009 382.942 405.248 383.182 405.248 383.477 cv
405.248 383.771 405.009 384.01 404.714 384.01 cv
cp
f
368.612 390.048 mo
368.317 390.048 368.078 389.809 368.078 389.514 cv
368.078 383.477 li
368.078 383.182 368.317 382.942 368.612 382.942 cv
368.906 382.942 369.146 383.182 369.146 383.477 cv
369.146 389.514 li
369.146 389.809 368.906 390.048 368.612 390.048 cv
cp
f
377.97 390.048 mo
377.675 390.048 377.436 389.809 377.436 389.514 cv
377.436 383.477 li
377.436 383.182 377.675 382.942 377.97 382.942 cv
378.264 382.942 378.503 383.182 378.503 383.477 cv
378.503 389.514 li
378.503 389.809 378.264 390.048 377.97 390.048 cv
cp
f
388.474 390.048 mo
388.18 390.048 387.94 389.809 387.94 389.514 cv
387.94 383.477 li
387.94 383.182 388.18 382.942 388.474 382.942 cv
388.769 382.942 389.008 383.182 389.008 383.477 cv
389.008 389.514 li
389.008 389.809 388.769 390.048 388.474 390.048 cv
cp
f
397.832 390.048 mo
397.537 390.048 397.298 389.809 397.298 389.514 cv
397.298 383.477 li
397.298 383.182 397.537 382.942 397.832 382.942 cv
398.126 382.942 398.366 383.182 398.366 383.477 cv
398.366 389.514 li
398.366 389.809 398.126 390.048 397.832 390.048 cv
cp
f
453.374 381.837 mo
412.563 381.837 li
412.268 381.837 412.029 381.598 412.029 381.303 cv
412.029 381.009 412.268 380.77 412.563 380.77 cv
453.374 380.77 li
453.669 380.77 453.908 381.009 453.908 381.303 cv
453.908 381.598 453.669 381.837 453.374 381.837 cv
cp
f
420.894 387.874 mo
420.6 387.874 420.36 387.635 420.36 387.34 cv
420.36 381.303 li
420.36 381.009 420.6 380.77 420.894 380.77 cv
421.189 380.77 421.428 381.009 421.428 381.303 cv
421.428 387.34 li
421.428 387.635 421.189 387.874 420.894 387.874 cv
cp
f
430.252 387.874 mo
429.957 387.874 429.718 387.635 429.718 387.34 cv
429.718 381.303 li
429.718 381.009 429.957 380.77 430.252 380.77 cv
430.546 380.77 430.786 381.009 430.786 381.303 cv
430.786 387.34 li
430.786 387.635 430.546 387.874 430.252 387.874 cv
cp
f
440.756 387.874 mo
440.462 387.874 440.223 387.635 440.223 387.34 cv
440.223 381.303 li
440.223 381.009 440.462 380.77 440.756 380.77 cv
441.051 380.77 441.291 381.009 441.291 381.303 cv
441.291 387.34 li
441.291 387.635 441.051 387.874 440.756 387.874 cv
cp
f
450.114 387.874 mo
449.82 387.874 449.581 387.635 449.581 387.34 cv
449.581 381.303 li
449.581 381.009 449.82 380.77 450.114 380.77 cv
450.409 380.77 450.648 381.009 450.648 381.303 cv
450.648 387.34 li
450.648 387.635 450.409 387.874 450.114 387.874 cv
cp
f
422.965 262.249 mo
439.02 262.249 li
438.391 260.801 li
422.965 260.801 li
421.091 260.801 419.566 259.275 419.566 257.401 cv
419.566 255.526 421.091 254.002 422.965 254.002 cv
435.439 254.002 li
434.81 252.553 li
422.965 252.553 li
420.292 252.553 418.117 254.728 418.117 257.401 cv
418.117 260.074 420.292 262.249 422.965 262.249 cv
cp
f
427.173 265.561 mo
426.878 265.561 426.639 265.321 426.639 265.026 cv
426.639 257.401 li
426.639 257.106 426.878 256.867 427.173 256.867 cv
427.467 256.867 427.707 257.106 427.707 257.401 cv
427.707 265.026 li
427.707 265.321 427.467 265.561 427.173 265.561 cv
cp
f
360.281 219.747 mo
359.154 136.515 li
412.925 143.438 li
426.481 220.104 li
426.989 222.977 424.629 225.547 421.724 225.285 cv
360.281 219.747 li
cp
1 .867247 .359258 .270176 cmyk
f
422.746 216.4 mo
422.711 216.398 li
360.246 210.281 li
360.05 210.262 359.907 210.088 359.926 209.893 cv
359.946 209.697 360.119 209.553 360.315 209.573 cv
422.78 215.69 li
422.976 215.71 423.119 215.884 423.1 216.079 cv
423.082 216.263 422.927 216.4 422.746 216.4 cv
cp
0 0 0 0 cmyk
f
365.714 220.593 mo
365.695 220.593 li
365.5 220.583 365.348 220.415 365.358 220.219 cv
365.848 210.489 li
365.858 210.293 366.03 210.143 366.221 210.151 cv
366.417 210.161 366.568 210.328 366.559 210.525 cv
366.069 220.255 li
366.059 220.445 365.902 220.593 365.714 220.593 cv
cp
f
374.418 221.377 mo
374.399 221.377 li
374.203 221.366 374.052 221.199 374.063 221.003 cv
374.576 211.343 li
374.586 211.146 374.758 210.996 374.95 211.007 cv
375.146 211.017 375.297 211.185 375.287 211.381 cv
374.773 221.04 li
374.764 221.23 374.606 221.377 374.418 221.377 cv
cp
f
382.861 222.139 mo
382.843 222.138 li
382.647 222.128 382.496 221.961 382.506 221.765 cv
382.989 212.168 li
382.999 211.972 383.176 211.818 383.362 211.83 cv
383.558 211.84 383.709 212.007 383.7 212.204 cv
383.217 221.801 li
383.207 221.99 383.05 222.139 382.861 222.139 cv
cp
f
390.467 222.823 mo
390.444 222.823 li
390.248 222.811 390.099 222.642 390.111 222.445 cv
390.715 212.963 li
390.728 212.767 390.9 212.615 391.093 212.631 cv
391.289 212.644 391.438 212.813 391.425 213.008 cv
390.822 222.49 li
390.81 222.679 390.653 222.823 390.467 222.823 cv
cp
f
397.832 223.487 mo
397.813 223.487 li
397.617 223.477 397.466 223.31 397.476 223.113 cv
397.959 213.993 li
397.97 213.797 398.132 213.646 398.333 213.656 cv
398.53 213.667 398.681 213.835 398.67 214.031 cv
398.187 223.15 li
398.177 223.341 398.02 223.487 397.832 223.487 cv
cp
f
405.432 224.173 mo
405.412 224.172 li
405.216 224.161 405.065 223.993 405.076 223.797 cv
405.588 214.38 li
405.599 214.184 405.766 214.032 405.962 214.044 cv
406.159 214.055 406.309 214.222 406.298 214.418 cv
405.787 223.836 li
405.776 224.025 405.619 224.173 405.432 224.173 cv
cp
f
412.803 224.812 mo
412.784 224.812 li
412.588 224.802 412.437 224.634 412.447 224.438 cv
412.904 215.543 li
412.914 215.347 413.079 215.194 413.278 215.206 cv
413.474 215.217 413.625 215.384 413.615 215.58 cv
413.158 224.475 li
413.148 224.664 412.991 224.812 412.803 224.812 cv
cp
f
419.748 225.335 mo
419.727 225.334 li
419.531 225.323 419.38 225.155 419.392 224.959 cv
419.904 216.024 li
419.915 215.828 420.084 215.681 420.279 215.689 cv
420.476 215.7 420.625 215.869 420.614 216.064 cv
420.102 224.999 li
420.091 225.188 419.935 225.335 419.748 225.335 cv
cp
f
373.16 125.245 mo
373.16 125.245 li
362.579 125.245 354.002 133.822 354.002 144.403 cv
356.525 164.832 li
357.353 171.536 363.048 176.571 369.803 176.571 cv
374.007 176.571 377.678 173.727 378.726 169.655 cv
384.276 148.097 li
385.281 144.191 392.422 141.463 396.454 141.463 cv
407.129 141.463 li
407.129 138.192 li
407.129 134.603 405.654 131.172 403.049 128.702 cv
400.707 126.482 397.603 125.245 394.376 125.245 cv
373.16 125.245 li
cp
0 .918029 .0663767 0 cmyk
f
369.663 145.755 mo
368.615 145.755 367.557 145.599 366.519 145.275 cv
364.763 144.729 363.329 143.529 362.48 141.897 cv
361.633 140.266 361.475 138.402 362.036 136.651 cv
363.419 132.334 366.328 128.681 370.227 126.366 cv
372.887 124.786 li
373.141 124.636 373.468 124.719 373.619 124.973 cv
373.77 125.226 373.686 125.554 373.432 125.704 cv
370.772 127.283 li
367.098 129.466 364.356 132.908 363.052 136.978 cv
362.579 138.455 362.712 140.027 363.428 141.405 cv
364.144 142.782 365.354 143.795 366.836 144.257 cv
370.941 145.536 375.422 143.896 377.733 140.27 cv
380.029 136.667 li
381.302 134.67 382.949 132.996 384.926 131.69 cv
389.289 128.81 394.358 127.287 399.585 127.287 cv
400.28 127.287 li
400.575 127.287 400.814 127.526 400.814 127.821 cv
400.814 128.115 400.575 128.354 400.28 128.354 cv
399.585 128.354 li
394.567 128.354 389.702 129.816 385.514 132.581 cv
383.664 133.804 382.121 135.371 380.929 137.241 cv
378.634 140.844 li
376.648 143.958 373.223 145.754 369.663 145.755 cv
cp
.897398 .829099 .457404 .496651 cmyk
f
466.302 204.652 mo
433.797 220.635 li
428.458 223.595 421.753 222.166 418.084 217.287 cv
391.979 166.232 li
388.313 158.772 391.548 149.759 399.121 146.331 cv
406.302 143.081 414.769 146.064 418.326 153.099 cv
436.598 189.227 li
453.123 180.774 li
466.302 204.652 li
cp
.0011902 .363043 .614893 0 cmyk
f
447.268 201.131 mo
448.105 200.298 li
446.935 200.14 li
446.685 200.106 446.468 199.952 446.354 199.728 cv
445.82 198.674 li
445.308 199.738 li
445.199 199.965 444.985 200.124 444.736 200.163 cv
443.569 200.345 li
444.424 201.16 li
444.606 201.334 444.691 201.587 444.651 201.836 cv
444.463 203.002 li
445.503 202.441 li
445.725 202.322 445.991 202.319 446.215 202.434 cv
447.266 202.973 li
447.055 201.811 li
447.027 201.658 447.046 201.504 447.107 201.366 cv
447.268 201.131 li
cp
448.754 204.976 mo
448.52 205.15 448.208 205.176 447.948 205.043 cv
445.875 203.979 li
443.824 205.085 li
443.568 205.224 443.255 205.204 443.018 205.035 cv
442.78 204.866 442.659 204.577 442.706 204.29 cv
443.075 201.989 li
441.39 200.381 li
441.18 200.18 441.101 199.877 441.188 199.598 cv
441.278 199.319 441.513 199.116 441.801 199.071 cv
444.103 198.712 li
445.112 196.612 li
445.238 196.35 445.502 196.182 445.794 196.179 cv
446.085 196.176 446.353 196.338 446.485 196.598 cv
447.538 198.677 li
449.847 198.987 li
450.135 199.026 450.377 199.226 450.47 199.502 cv
450.563 199.778 450.491 200.083 450.285 200.288 cv
448.633 201.933 li
449.051 204.224 li
449.079 204.377 449.059 204.532 448.999 204.669 cv
448.946 204.788 448.863 204.895 448.754 204.976 cv
cp
1 .867247 .359258 .270176 cmyk
f
466.302 204.652 mo
490.565 189.906 li
476.793 167.209 li
453.123 180.774 li
466.302 204.652 li
cp
.756252 .687648 .654871 .887205 cmyk
f
458.485 177.666 mo
460.966 176.435 469.661 157.478 472.714 156.492 cv
474.692 155.854 477.769 156.747 477.497 161.073 cv
477.225 165.399 472.577 173.079 472.577 173.079 cv
458.485 177.666 li
cp
f
501.477 178.094 mo
501.477 178.094 li
502.742 180.184 502.066 182.929 499.977 184.193 cv
487.246 191.899 li
485.156 193.165 482.411 192.49 481.146 190.4 cv
479.881 188.31 480.556 185.564 482.646 184.3 cv
495.376 176.594 li
497.466 175.328 500.211 176.003 501.477 178.094 cv
cp
f
496.8 170.625 mo
496.8 170.625 li
498.065 172.715 497.39 175.46 495.3 176.726 cv
482.57 184.432 li
480.48 185.696 477.734 185.021 476.469 182.932 cv
475.204 180.842 475.879 178.097 477.969 176.831 cv
490.699 169.125 li
492.79 167.86 495.535 168.535 496.8 170.625 cv
cp
f
498.788 159.246 mo
498.788 159.246 li
500.053 161.337 499.377 164.082 497.288 165.347 cv
480.757 175.354 li
478.457 171.554 li
477.192 169.463 475 168.084 477.089 166.818 cv
492.687 157.747 li
494.777 156.481 497.522 157.156 498.788 159.246 cv
cp
f
494.234 167.429 mo
494.216 167.582 494.14 167.729 494.009 167.833 cv
493.97 167.863 493.869 167.944 481.826 175.261 cv
481.538 175.437 481.162 175.345 480.987 175.057 cv
480.812 174.768 480.903 174.393 481.191 174.217 cv
484.436 172.246 492.899 167.101 493.278 166.854 cv
493.541 166.671 493.904 166.721 494.106 166.975 cv
494.212 167.108 494.253 167.271 494.234 167.429 cv
cp
.426215 .547295 0 0 cmyk
f
496.477 176.64 mo
496.458 176.793 496.381 176.939 496.25 177.044 cv
496.212 177.074 496.11 177.155 484.068 184.472 cv
483.779 184.647 483.404 184.556 483.229 184.268 cv
483.053 183.979 483.145 183.604 483.434 183.428 cv
486.678 181.456 495.141 176.312 495.52 176.065 cv
495.782 175.882 496.146 175.932 496.348 176.186 cv
496.454 176.318 496.495 176.482 496.477 176.64 cv
cp
f
477.443 190.041 mo
470.429 193.651 li
469.639 194.058 468.668 193.747 468.261 192.956 cv
463.645 183.989 li
463.238 183.198 463.549 182.228 464.34 181.82 cv
471.354 178.21 li
472.144 177.804 473.115 178.114 473.521 178.905 cv
478.138 187.872 li
478.544 188.663 478.234 189.634 477.443 190.041 cv
cp
f
460.66 189.596 mo
460.53 189.596 460.406 189.524 460.343 189.401 cv
460.253 189.227 460.322 189.013 460.497 188.923 cv
465.528 186.347 li
465.703 186.257 465.917 186.326 466.006 186.501 cv
466.096 186.676 466.027 186.891 465.852 186.98 cv
460.822 189.557 li
460.66 189.596 li
cp
0 0 0 0 cmyk
f
462.765 193.442 mo
462.635 193.442 462.51 193.372 462.448 193.249 cv
462.358 193.074 462.427 192.859 462.602 192.77 cv
467.633 190.194 li
467.808 190.104 468.022 190.174 468.112 190.349 cv
468.201 190.523 468.132 190.738 467.958 190.827 cv
462.926 193.403 li
462.765 193.442 li
cp
f
437.298 189.534 mo
437.391 189.323 437.386 189.076 437.271 188.863 cv
437.101 188.546 436.731 188.391 436.385 188.491 cv
430.338 190.241 li
429.933 190.358 429.698 190.782 429.816 191.189 cv
429.934 191.596 430.358 191.829 430.764 191.712 cv
433.399 190.949 li
422.398 200.336 li
422.076 200.611 422.038 201.095 422.313 201.415 cv
422.587 201.737 423.07 201.775 423.392 201.501 cv
437.094 189.809 li
437.185 189.731 437.253 189.638 437.298 189.534 cv
cp
.345312 .781857 1 .416999 cmyk
f
428.825 170.613 mo
397.48 185.327 li
383.532 155.614 li
380.538 149.237 383.281 141.641 389.658 138.647 cv
397.91 134.773 li
404.287 131.78 411.883 134.523 414.877 140.9 cv
428.825 170.613 li
cp
1 .867247 .359258 .270176 cmyk
f
370.685 107.659 mo
371.518 109.208 li
376.228 106.732 li
377.325 106.156 377.737 104.794 377.144 103.706 cv
376.583 102.677 375.316 102.262 374.254 102.76 cv
369.779 104.857 li
369.946 105.808 370.243 106.75 370.685 107.659 cv
cp
f
397.48 185.861 mo
397.28 185.861 397.087 185.748 396.997 185.554 cv
388.033 166.458 li
387.907 166.191 388.022 165.873 388.289 165.748 cv
388.555 165.623 388.874 165.737 388.999 166.004 cv
397.963 185.101 li
398.088 185.367 397.974 185.686 397.707 185.811 cv
397.48 185.861 li
cp
.630396 .599573 0 0 cmyk
f
392.321 174.869 mo
392.268 174.866 li
387.516 174.396 li
387.223 174.366 387.008 174.105 387.038 173.812 cv
387.066 173.519 387.333 173.305 387.621 173.333 cv
392.373 173.804 li
392.666 173.833 392.88 174.095 392.851 174.388 cv
392.824 174.663 392.592 174.869 392.321 174.869 cv
cp
f
359.72 178.925 mo
359.426 178.925 359.187 178.686 359.187 178.391 cv
359.187 171.986 li
359.187 171.691 359.426 171.452 359.72 171.452 cv
360.015 171.452 360.254 171.691 360.254 171.986 cv
360.254 178.391 li
360.254 178.686 360.015 178.925 359.72 178.925 cv
cp
f
414.696 407.556 mo
414.401 407.556 414.162 407.316 414.162 407.021 cv
414.162 397.347 li
414.162 397.053 414.401 396.813 414.696 396.813 cv
414.991 396.813 415.229 397.053 415.229 397.347 cv
415.229 407.021 li
415.229 407.316 414.991 407.556 414.696 407.556 cv
cp
.897398 .829099 .457404 .496651 cmyk
f
510.513 111.104 mo
510.337 111.074 li
509.054 110.627 507.707 110.4 506.335 110.4 cv
506.041 110.4 505.795 110.161 505.795 109.866 cv
505.795 109.571 506.027 109.333 506.322 109.333 cv
506.335 109.333 li
507.827 109.333 509.292 109.58 510.688 110.066 cv
510.967 110.164 511.114 110.468 511.017 110.746 cv
510.94 110.967 510.733 111.104 510.513 111.104 cv
cp
498.418 113.174 mo
498.261 113.174 498.106 113.105 498.001 112.974 cv
497.817 112.743 497.854 112.407 498.084 112.224 cv
499.25 111.291 500.554 110.567 501.957 110.075 cv
502.236 109.979 502.539 110.124 502.637 110.402 cv
502.734 110.681 502.588 110.985 502.31 111.083 cv
501.021 111.535 499.823 112.199 498.751 113.058 cv
498.653 113.136 498.535 113.174 498.418 113.174 cv
cp
517.069 116.322 mo
516.892 116.322 516.719 116.234 516.617 116.074 cv
515.886 114.916 514.972 113.896 513.9 113.042 cv
513.669 112.858 513.631 112.522 513.815 112.292 cv
513.999 112.062 514.334 112.023 514.565 112.207 cv
515.731 113.136 516.725 114.245 517.52 115.504 cv
517.677 115.753 517.603 116.083 517.354 116.24 cv
517.265 116.296 517.167 116.322 517.069 116.322 cv
cp
493.965 120.271 mo
493.847 120.258 li
493.559 120.192 493.379 119.906 493.444 119.619 cv
493.772 118.167 494.342 116.79 495.137 115.526 cv
495.293 115.276 495.624 115.202 495.873 115.358 cv
496.122 115.516 496.197 115.845 496.04 116.095 cv
495.311 117.256 494.787 118.521 494.485 119.854 cv
494.429 120.103 494.208 120.271 493.965 120.271 cv
cp
518.311 127.274 mo
518.134 127.244 li
517.856 127.147 517.709 126.843 517.807 126.564 cv
518.257 125.277 518.485 123.927 518.485 122.551 cv
518.486 121.632 518.383 120.717 518.18 119.83 cv
518.114 119.543 518.294 119.257 518.581 119.191 cv
518.872 119.126 519.155 119.305 519.221 119.593 cv
519.441 120.557 519.553 121.553 519.553 122.551 cv
519.553 124.048 519.304 125.517 518.814 126.917 cv
518.737 127.137 518.531 127.274 518.311 127.274 cv
cp
494.908 128.595 mo
494.71 128.595 494.52 128.483 494.427 128.293 cv
493.78 126.952 493.367 125.521 493.201 124.038 cv
493.168 123.745 493.379 123.481 493.672 123.448 cv
493.964 123.415 494.229 123.626 494.261 123.919 cv
494.415 125.282 494.794 126.598 495.389 127.829 cv
495.517 128.095 495.406 128.413 495.14 128.542 cv
494.908 128.595 li
cp
513.086 133.824 mo
512.909 133.824 512.735 133.736 512.634 133.575 cv
512.477 133.325 512.552 132.996 512.801 132.839 cv
513.959 132.109 514.98 131.196 515.836 130.125 cv
516.02 129.895 516.356 129.857 516.586 130.041 cv
516.816 130.226 516.854 130.561 516.67 130.791 cv
515.74 131.956 514.63 132.949 513.37 133.742 cv
513.282 133.798 513.183 133.824 513.086 133.824 cv
cp
500.834 134.517 mo
500.603 134.464 li
499.264 133.818 498.049 132.956 496.993 131.9 cv
496.784 131.692 496.784 131.354 496.992 131.146 cv
497.201 130.937 497.539 130.938 497.747 131.146 cv
498.718 132.115 499.835 132.908 501.067 133.502 cv
501.332 133.63 501.444 133.949 501.316 134.215 cv
501.224 134.405 501.033 134.517 500.834 134.517 cv
cp
506.335 135.768 mo
505.843 135.768 505.347 135.74 504.86 135.687 cv
504.567 135.654 504.356 135.39 504.389 135.098 cv
504.421 134.804 504.689 134.593 504.978 134.626 cv
506.332 134.775 507.724 134.697 509.043 134.398 cv
509.333 134.331 509.617 134.513 509.682 134.8 cv
509.747 135.088 509.567 135.373 509.28 135.438 cv
508.32 135.657 507.329 135.768 506.335 135.768 cv
cp
f
522.865 116.271 mo
522.74 116.255 li
521.439 115.943 520.05 115.928 518.744 116.209 cv
518.459 116.271 518.172 116.088 518.109 115.8 cv
518.048 115.512 518.231 115.228 518.519 115.165 cv
519.981 114.851 521.533 114.868 522.989 115.218 cv
523.275 115.286 523.452 115.574 523.383 115.861 cv
523.325 116.105 523.106 116.271 522.865 116.271 cv
cp
512.127 121.303 mo
511.891 121.247 li
511.627 121.116 511.519 120.797 511.649 120.532 cv
512.312 119.189 513.288 117.99 514.471 117.064 cv
514.702 116.883 515.038 116.924 515.22 117.156 cv
515.401 117.388 515.361 117.724 515.128 117.905 cv
514.071 118.732 513.198 119.805 512.606 121.005 cv
512.513 121.193 512.324 121.303 512.127 121.303 cv
cp
529.248 121.502 mo
529.047 121.502 528.854 121.387 528.764 121.192 cv
528.2 119.979 527.354 118.888 526.315 118.036 cv
526.087 117.849 526.054 117.513 526.241 117.284 cv
526.428 117.057 526.765 117.023 526.992 117.211 cv
528.154 118.164 529.101 119.386 529.732 120.743 cv
529.856 121.01 529.74 121.327 529.473 121.452 cv
529.248 121.502 li
cp
512.063 129.556 mo
511.863 129.556 511.672 129.442 511.581 129.25 cv
510.942 127.904 510.619 126.461 510.619 124.961 cv
510.619 124.88 li
510.624 124.588 510.861 124.354 511.153 124.354 cv
511.161 124.354 li
511.456 124.358 511.691 124.601 511.687 124.896 cv
511.687 124.961 li
511.686 126.302 511.975 127.591 512.545 128.793 cv
512.671 129.059 512.558 129.377 512.292 129.504 cv
512.063 129.556 li
cp
529.185 129.622 mo
528.953 129.568 li
528.688 129.44 528.577 129.121 528.705 128.855 cv
529.294 127.637 529.594 126.326 529.594 124.961 cv
529.594 124.666 529.833 124.428 530.127 124.428 cv
530.422 124.428 530.661 124.666 530.661 124.961 cv
530.661 126.488 530.326 127.955 529.666 129.32 cv
529.574 129.511 529.383 129.622 529.185 129.622 cv
cp
518.488 134.737 mo
518.367 134.724 li
516.908 134.385 515.519 133.706 514.348 132.762 cv
514.119 132.576 514.083 132.24 514.269 132.011 cv
514.454 131.781 514.79 131.745 515.019 131.931 cv
516.064 132.775 517.306 133.381 518.608 133.684 cv
518.895 133.75 519.074 134.036 519.007 134.324 cv
518.95 134.57 518.73 134.737 518.488 134.737 cv
cp
522.72 134.754 mo
522.475 134.754 522.255 134.585 522.199 134.337 cv
522.135 134.049 522.316 133.764 522.604 133.699 cv
523.909 133.407 525.155 132.811 526.206 131.975 cv
526.438 131.792 526.773 131.83 526.956 132.061 cv
527.14 132.291 527.102 132.627 526.871 132.811 cv
525.693 133.746 524.298 134.414 522.836 134.741 cv
522.72 134.754 li
cp
f
337.098 114.063 mo
336.895 114.022 li
336.622 113.91 336.492 113.599 336.604 113.326 cv
340.468 103.931 li
340.543 103.747 340.714 103.621 340.912 103.603 cv
341.108 103.582 341.3 103.676 341.409 103.842 cv
346.721 111.983 li
346.882 112.23 346.813 112.562 346.566 112.722 cv
346.319 112.883 345.988 112.813 345.827 112.566 cv
341.069 105.275 li
337.592 113.731 li
337.507 113.938 337.308 114.063 337.098 114.063 cv
cp
f
337.098 122.678 mo
336.895 122.638 li
336.622 122.525 336.492 122.213 336.604 121.94 cv
340.468 112.546 li
340.543 112.362 340.714 112.235 340.912 112.217 cv
341.108 112.197 341.3 112.291 341.409 112.457 cv
346.721 120.598 li
346.882 120.845 346.813 121.176 346.566 121.337 cv
346.319 121.498 345.988 121.429 345.827 121.182 cv
341.069 113.891 li
337.592 122.347 li
337.507 122.553 337.308 122.678 337.098 122.678 cv
cp
f
337.098 131.292 mo
336.895 131.252 li
336.622 131.14 336.492 130.828 336.604 130.556 cv
340.468 121.16 li
340.543 120.977 340.714 120.851 340.912 120.832 cv
341.108 120.811 341.3 120.905 341.409 121.071 cv
346.721 129.213 li
346.882 129.46 346.813 129.791 346.566 129.952 cv
346.319 130.112 345.988 130.043 345.827 129.796 cv
341.069 122.505 li
337.592 130.961 li
337.507 131.168 337.308 131.292 337.098 131.292 cv
cp
f
510.759 193.714 mo
526.632 196.432 li
533.198 158.088 li
517.325 155.37 li
510.759 193.714 li
cp
527.068 197.581 mo
526.979 197.573 li
510.053 194.676 li
509.763 194.626 509.567 194.35 509.617 194.06 cv
516.363 154.664 li
516.413 154.373 516.688 154.179 516.979 154.228 cv
533.904 157.126 li
534.043 157.149 534.168 157.228 534.25 157.344 cv
534.332 157.459 534.364 157.603 534.34 157.742 cv
527.594 197.138 li
527.57 197.277 527.492 197.401 527.376 197.483 cv
527.286 197.548 527.178 197.581 527.068 197.581 cv
cp
0 0 0 0 cmyk
f
283.181 389.161 mo
271.444 389.161 li
275.198 374.85 li
275.645 374.545 276.069 374.234 276.471 373.918 cv
283.181 389.161 li
323.923 388.682 mo
312.131 358.011 li
312.376 358.077 312.622 358.143 312.869 358.209 cv
315.61 358.945 318.405 359.696 321.827 359.696 cv
324.306 359.695 327.115 359.302 330.47 358.224 cv
331.971 357.741 333.304 357.211 334.498 356.643 cv
334.498 374.928 li
334.498 381.493 329.994 387.057 323.923 388.682 cv
275.621 373.239 mo
275.691 372.97 li
275.735 372.981 275.781 372.987 275.827 372.987 cv
275.984 372.954 li
275.865 373.049 275.744 373.145 275.621 373.239 cv
321.828 358.637 mo
318.583 358.637 315.909 357.919 313.146 357.178 cv
312.653 357.045 312.158 356.913 311.659 356.784 cv
305.557 340.915 li
307.229 341.193 308.803 341.616 310.406 342.046 cv
313.147 342.782 315.942 343.533 319.365 343.533 cv
321.844 343.533 324.652 343.139 328.007 342.06 cv
329.609 341.546 331.018 340.978 332.273 340.367 cv
333.681 342.573 334.498 345.188 334.498 347.985 cv
334.498 355.462 li
333.233 356.091 331.797 356.676 330.143 357.207 cv
326.891 358.252 324.206 358.637 321.828 358.637 cv
319.365 342.475 mo
316.12 342.475 313.445 341.757 310.683 341.015 cv
308.903 340.537 307.1 340.053 305.118 339.773 cv
302.803 333.752 li
320.265 333.752 li
321.629 333.752 322.949 333.946 324.2 334.309 cv
325.074 337.603 li
331.386 339.127 li
331.479 339.244 331.571 339.363 331.661 339.483 cv
330.488 340.042 329.173 340.565 327.68 341.045 cv
324.428 342.089 321.744 342.475 319.365 342.475 cv
.205386 0 .0702525 0 cmyk
f
319.365 343.533 mo
315.942 343.533 313.147 342.782 310.406 342.046 cv
308.803 341.616 307.229 341.193 305.557 340.915 cv
305.118 339.773 li
307.1 340.053 308.903 340.537 310.683 341.015 cv
313.445 341.757 316.12 342.475 319.365 342.475 cv
321.744 342.475 324.428 342.089 327.68 341.045 cv
329.173 340.565 330.488 340.042 331.661 339.483 cv
331.876 339.769 332.079 340.064 332.273 340.367 cv
331.018 340.978 329.609 341.546 328.007 342.06 cv
324.652 343.139 321.844 343.533 319.365 343.533 cv
.500725 0 .190341 0 cmyk
f
275.198 374.85 mo
275.621 373.239 li
275.744 373.145 275.865 373.049 275.984 372.954 cv
276.042 372.942 li
276.471 373.918 li
276.069 374.234 275.645 374.545 275.198 374.85 cv
321.827 359.696 mo
318.405 359.696 315.61 358.945 312.869 358.209 cv
312.622 358.143 312.376 358.077 312.131 358.011 cv
311.659 356.784 li
312.158 356.913 312.653 357.045 313.146 357.178 cv
315.909 357.919 318.583 358.637 321.828 358.637 cv
324.206 358.637 326.891 358.252 330.143 357.207 cv
331.797 356.676 333.233 356.091 334.498 355.462 cv
334.498 356.643 li
333.304 357.211 331.971 357.741 330.47 358.224 cv
327.115 359.302 324.306 359.695 321.827 359.696 cv
f
271.444 389.161 mo
264.769 389.161 li
256.941 389.161 250.536 382.757 250.536 374.928 cv
250.536 348.323 li
251.344 346.831 251.804 345.125 251.804 343.318 cv
251.804 342.13 li
253.214 339.03 255.707 336.516 258.791 335.076 cv
275.338 372.668 li
275.406 372.823 275.539 372.93 275.691 372.97 cv
275.621 373.239 li
275.198 374.85 li
271.444 389.161 li
.826047 .442329 .320439 .0588998 cmyk
f
250.536 348.323 mo
250.536 347.985 li
250.536 345.902 250.99 343.918 251.804 342.13 cv
251.804 343.318 li
251.804 345.125 251.344 346.831 250.536 348.323 cv
.267857 .628138 .0351263 0 cmyk
f
320.265 389.161 mo
283.181 389.161 li
276.471 373.918 li
276.042 372.942 li
276.042 372.941 li
276.311 372.823 276.434 372.508 276.315 372.238 cv
259.775 334.662 li
261.331 334.074 263.014 333.752 264.769 333.752 cv
302.803 333.752 li
305.118 339.773 li
305.557 340.915 li
311.659 356.784 li
312.131 358.011 li
323.923 388.682 li
322.755 388.994 321.528 389.161 320.265 389.161 cv
.826047 .442329 .320439 .0588998 cmyk
f
275.827 372.987 mo
275.781 372.987 275.735 372.981 275.691 372.97 cv
275.539 372.93 275.406 372.823 275.338 372.668 cv
258.791 335.076 li
259.113 334.926 259.441 334.788 259.775 334.662 cv
276.315 372.238 li
276.434 372.508 276.311 372.823 276.042 372.941 cv
276.042 372.942 li
275.984 372.954 li
275.827 372.987 li
.600458 .288304 .0252079 0 cmyk
f
331.386 339.127 mo
325.074 337.603 li
328.284 336.242 li
329.455 337.046 330.501 338.02 331.386 339.127 cv
.855558 .487831 .576074 .318334 cmyk
f
325.074 337.603 mo
324.2 334.309 li
325.672 334.735 327.047 335.394 328.284 336.242 cv
325.074 337.603 li
.500725 0 .190341 0 cmyk
f
319.319 351.77 mo
265.716 351.77 li
264.541 351.77 263.58 350.809 263.58 349.634 cv
263.58 348.106 li
263.58 346.932 264.541 345.971 265.716 345.971 cv
319.319 345.971 li
320.494 345.971 321.455 346.932 321.455 348.106 cv
321.455 349.634 li
321.455 350.809 320.494 351.77 319.319 351.77 cv
cp
f
319.319 364.356 mo
265.716 364.356 li
264.541 364.356 263.58 363.396 263.58 362.22 cv
263.58 360.693 li
263.58 359.519 264.541 358.558 265.716 358.558 cv
319.319 358.558 li
320.494 358.558 321.455 359.519 321.455 360.693 cv
321.455 362.22 li
321.455 363.396 320.494 364.356 319.319 364.356 cv
cp
f
319.319 376.943 mo
265.716 376.943 li
264.541 376.943 263.58 375.981 263.58 374.807 cv
263.58 373.28 li
263.58 372.105 264.541 371.144 265.716 371.144 cv
319.319 371.144 li
320.494 371.144 321.455 372.105 321.455 373.28 cv
321.455 374.807 li
321.455 375.981 320.494 376.943 319.319 376.943 cv
cp
f
466.158 361.31 mo
452.974 361.31 li
450.611 319.167 li
452.21 318.943 453.947 318.551 455.862 317.936 cv
463.849 315.369 467.058 311.456 470.161 307.672 cv
470.419 307.356 470.677 307.042 470.936 306.73 cv
476.432 308.705 480.391 313.98 480.391 320.134 cv
480.391 341.105 li
474.31 339.036 li
474.252 339.016 474.194 339.007 474.137 339.007 cv
473.921 339.007 473.719 339.139 473.639 339.352 cv
469.712 349.669 li
469.607 349.943 469.746 350.252 470.021 350.357 cv
470.211 350.392 li
470.426 350.392 470.628 350.261 470.71 350.048 cv
474.453 340.212 li
480.391 342.232 li
480.391 347.076 li
480.391 354.904 473.986 361.31 466.158 361.31 cv
450.551 318.103 mo
449.867 305.9 li
466.158 305.9 li
467.429 305.9 468.661 306.069 469.836 306.385 cv
469.668 306.589 469.502 306.792 469.335 306.995 cv
466.192 310.828 463.223 314.449 455.536 316.919 cv
453.711 317.505 452.065 317.884 450.551 318.103 cv
.205386 0 .0702525 0 cmyk
f
450.611 319.167 mo
450.551 318.103 li
452.065 317.884 453.711 317.505 455.536 316.919 cv
463.223 314.449 466.192 310.828 469.335 306.995 cv
469.502 306.792 469.668 306.589 469.836 306.385 cv
470.209 306.486 470.576 306.601 470.936 306.73 cv
470.677 307.042 470.419 307.356 470.161 307.672 cv
467.058 311.456 463.849 315.369 455.862 317.936 cv
453.947 318.551 452.21 318.943 450.611 319.167 cv
.500725 0 .190341 0 cmyk
f
470.211 350.392 mo
470.021 350.357 li
469.746 350.252 469.607 349.943 469.712 349.669 cv
473.639 339.352 li
473.719 339.139 473.921 339.007 474.137 339.007 cv
474.194 339.007 474.252 339.016 474.31 339.036 cv
480.391 341.105 li
480.391 342.232 li
474.453 340.212 li
470.71 350.048 li
470.628 350.261 470.426 350.392 470.211 350.392 cv
.809018 .455879 .408545 .123629 cmyk
f
411.359 361.31 mo
404.714 361.31 li
404.714 331.009 li
405.709 329.956 406.591 328.881 407.464 327.815 cv
408.187 326.934 408.901 326.064 409.665 325.216 cv
411.359 361.31 li
404.714 329.429 mo
404.714 312.003 li
404.81 311.886 404.905 311.77 405.001 311.653 cv
406.21 310.179 407.392 308.737 408.827 307.379 cv
409.595 323.729 li
408.515 324.85 407.572 326 406.639 327.139 cv
406.004 327.913 405.375 328.679 404.714 329.429 cv
404.714 310.32 mo
404.714 305.9 li
408.758 305.9 li
408.763 306.003 li
407.18 307.393 405.92 308.859 404.714 310.32 cv
.205386 0 .0702525 0 cmyk
f
404.714 312.003 mo
404.714 310.32 li
405.92 308.859 407.18 307.393 408.763 306.003 cv
408.827 307.379 li
407.392 308.737 406.21 310.179 405.001 311.653 cv
404.905 311.77 404.81 311.886 404.714 312.003 cv
.500725 0 .190341 0 cmyk
f
404.714 331.009 mo
404.714 329.429 li
405.375 328.679 406.004 327.913 406.639 327.139 cv
407.572 326 408.515 324.85 409.595 323.729 cv
409.665 325.216 li
408.901 326.064 408.187 326.934 407.464 327.815 cv
406.591 328.881 405.709 329.956 404.714 331.009 cv
f
404.714 361.31 mo
375.631 361.31 li
367.802 361.31 361.397 354.904 361.397 347.076 cv
361.397 320.134 li
361.397 312.306 367.802 305.9 375.631 305.9 cv
404.714 305.9 li
404.714 310.32 li
404.714 312.003 li
404.714 329.429 li
404.714 331.009 li
404.714 361.31 li
.49134 .277226 .00534066 0 cmyk
f
452.974 361.31 mo
411.359 361.31 li
409.665 325.216 li
409.595 323.729 li
408.827 307.379 li
408.763 306.003 li
408.758 305.9 li
449.867 305.9 li
450.551 318.103 li
450.611 319.167 li
452.974 361.31 li
f
459.769 323.918 mo
382.019 323.918 li
380.844 323.918 379.883 322.957 379.883 321.781 cv
379.883 320.255 li
379.883 319.08 380.844 318.119 382.019 318.119 cv
459.769 318.119 li
460.944 318.119 461.905 319.08 461.905 320.255 cv
461.905 321.781 li
461.905 322.957 460.944 323.918 459.769 323.918 cv
cp
.500725 0 .190341 0 cmyk
f
459.769 336.505 mo
382.019 336.505 li
380.844 336.505 379.883 335.543 379.883 334.368 cv
379.883 332.842 li
379.883 331.667 380.844 330.706 382.019 330.706 cv
459.769 330.706 li
460.944 330.706 461.905 331.667 461.905 332.842 cv
461.905 334.368 li
461.905 335.543 460.944 336.505 459.769 336.505 cv
cp
f
459.769 349.092 mo
382.019 349.092 li
380.844 349.092 379.883 348.13 379.883 346.955 cv
379.883 345.429 li
379.883 344.254 380.844 343.292 382.019 343.292 cv
459.769 343.292 li
460.944 343.292 461.905 344.254 461.905 345.429 cv
461.905 346.955 li
461.905 348.13 460.944 349.092 459.769 349.092 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.3
%%For: (Alexandra Bataeva) ()
%%Title: (27_0303_Metaverse_01sim_3.eps)
%%CreationDate: 4/7/2022 4:41 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bm1Q?FWdX/4GSDoVE\Sl":1)W+np\<jC9bi&0sMk";gQI!>AH>TSV<($i.l+rM1gqdrnOQpl+"Zk,id][\m\"[;8K"P2,6m
%l#,7]ICa(XC$@crZ&WW`CDk5G=[)D8]A8np&K."!>?)HIWWG!B4g=3``/V8cm_*UY`6HA[M/9k(/!XmSg%qa^3D!5])*q5H:>gDK
%S'_rLpp#[49BGJ?b?ls*)6+9L3aXO`W`H78d]=7e<\%7Te=3SH>je"_j-In@\79Q'X@f>gPfm+OiXXJ[/1Bh<ElBNXRoQf>WG*CU
%V0-&=Ad`>S!q[MN[Io5'J6&dq)`e,3EP&cX4'1&m!M%_O6PBXuU2#EjaS6,R0_f,HJuiY@eD9HA<k6auRdG./G(1E=at0Kej]/?i
%OrMd!=\aLn'\qd?eu%-"Zq6TD[hO4,:NHf\Bl:J4+>$hkj`k#JH=DBF00sd^oJ7_bs4h)"Ds4gS8XrK.=]rkA2FLG.jZ-IpgS.t>
%#W.&S;n/$I_)JH1ULLY`4K>D6VaWA@4O9pj!.\+%Tu%O49h7p3/gE*tNANK7)_-Ff+:SCEf'NgI86A[1f$gt\--IiB9mbqWc1YoJ
%3K10l6$'[aE!jqGpTA]i<qBq*g]g6*(hSl'=fRgi$4uXb-r`kk$OkkdY?g.Bg"`me+NX4J#E?r1:3TmPg8Q]ncR^?=K&+Lg_lDOk
%hnm'tO^s<<;.L9W7L-2b3'l"N:'Z?U7o0GPW%oSj0dAL\#t;%k6!FBK?#Gt;b-eR-_+U;1G=5Z-DjF&!=DK+YP<YFr[*JSfd/WM4
%!qkrh<MK[&id,L!;%Pq)[#1<DX-I_u.N43\qO%N?YCY,$l<EsfpBSD;-oqg,((=<[>)*IH)FAiLfMurf?XKdSi9#EnhJ"Oj2XADE
%9k?ri%?#jV2(ajDS`Zg=:\o"`/2sGQe-A\MS)>J5d(.jDX&<jiLe5-:(fr2!c"qFqL4aHMqulGT5aI<@'su\1Z#IS42QU@,A&2`(
%pq%5JDT-=)Z!7[0^bE+JITg[X^s@^,V1T4\]pZ<8[<c7dh6G\QD*Lc7\neCVJ>@K)e@NRMD`iUn#R.Nfgl816"QASejbhaJL+1$?
%Q!+Z-a\R--cp/4G*+n?W8u92N1`P32,+!.i>2.hlHG/<G&%V/9`88D@:sCtZY!/n(e19W]eS0blX8p;a`JV)"XOXc=#rGQXAo5(J
%p_0I?0&S)W9I?af=76[/25aJW95ns:>$3Fdc@iUa^#cV2K86ZG3llB=1+7'oc0JPFor/8kA[/nq6W"Gb2p4)J(:_mi\S\mg=g'`F
%9?OASRgfa@%P>6VU/]]P:1NIgR@3KLREfAZCl.tb=Xq=2H'Xr2=f[rjY\./uL_HG@0ITWG,*sl%5BcerZ'UImj2iV:i7m`VYJ<Zi
%2.#GTpgj.NTB#,0K"qbG+:8a/A3gqe5o0qQ,@lKJI.BTiK^,9S8g=%YU*?V3->)2"(%^FT=HIc!PU,`s'M4QH8XBi7/*3S>1aa#K
%?5@'CQ=WKcAPLb;N1?/SEaG?$$d]bgOcCM^A49?p79@99]>4+YopbRnoj,RcVnLF/^!B(G#mDjhMMI)UnRIrH3L^Kj;.A"JM[$%(
%kKkF*eAslaV'k;u#i%_4Wa5=eEa<4%m,:)!)Yslt(Hd+84Z4;JHi$K,+LKHMn/?UhNs+l.O#pYr']obu6EZD%A-tdl05(NsTG6I=
%<"KF(JY+I:c->A5Ec]pEba^DccY7IcS2)J<8^P1*a6*j+\U6T5b@gF7]TEHKGqH5^jh-foo0T%p'lnB+HnLc/jt\qAVrtFWRT"6I
%:<JDY-_Du$kHao"/t:*tZ:7m@C0<EpAEBnW'k-b09]>cObZlKea^qcG$tXY2lU0sFbY>0OS(OJ)Bh?m#"\#hnVXjkH!^p>V%1rgO
%._<!K0-Wn1FbC(?!pb2&P_BqU74&A!HRMo"JF7%@Xqdh"1p1s96`mE!$gS.gDX4jj.ckL6k-9AFm0;lkgS>ZE7<<9;entfmO"H:9
%U,20<e$>e:*\DW9anY!*05_;+\-5R\DCnOXREpN-"drGReF-#5@V?OaTOZ5EHF2%SmX!W<((AV\:s3rbP.`?_64[,rV,6uSr:1AM
%LVsLr+tt)oQk9L\M$?F<#L`bJ",on`N",8$>KDBjJ,t7Y(/0hn#"aB,$Kap8Nrd6-MB4tdL+<c=%(H_?/DuQpV@=LL(iC'P)R)m?
%`as[S:c.X^1&)C`p*^&4Jk6INYC^,T_+.Q8pgg&6/8A/+.kiGF5o!d:#16F>1sr?2ra7OW)CcS)25:45.Wc:AL9Ur:6W:@fM40CM
%C7;$;-_hP_<eHEH"Y0%)Q$X`o!,VpZ_oN\YdL@UA!.O-o$m,f#jT]CY_<W4AqAc4>E<LNRJWHM"$ala]Ig!'Ub@l(N_+*X?%_AVS
%1_;IuHk*`M`SE7fa#"5Rd<`oQ5;Q)g%`Y,d66mSRNhSrgZs"s,Q,9o0kdi2&<E+Z2oWSXthjR(`?lh%I0XPe'&d2NaC4QsqFVV)t
%H8I*pKtV5k*3+!6dQ!*23#H\'-:&Jj&<7`d9*%FN!^T^le-utpS5B8r/S:f;P#4Ms%&AV3RHH@0XK>H#M4T<eF0mcBCT2il'PXM)
%23cWgXJNHIel&<A<)]d!K!p858GFFa*sI-nqkGkfUrVmN@t1eu&,=!:k\G&P+4*ptk'd1:"%HomQgie4iHZC<"DH(MF#BD]n_@s$
%'5m`c7WB]*aH5$T71M<.5u@^i*nW"X^Wka49`SrZiogj)=_)$AIEeO4dC-0O$<:rTMCbg%Jt7*:lQ#b7fU2cP.Uq.i5-"S/m>p4R
%ZHe4;V;oV3&2G=]NrG(VnPMV;1,cOK+*G%7^pr^Aqh<F[&KUakGQr/88^38p<<o8QIo0A@NPLZ`La3CSM%]e0gbA(V;ZBU74sKS7
%q3N<!1XVKur?h"rj+BB/j-f>aQ!fPT_suJI(?RkR1E\\-.'X'<5)7rB!u,&BeJCLY$=Mt:EX#3i#+@/sYn0/%$=H&<;H>QgQtTl,
%'JM*m3C)*0MZkdoH11sC@!W7.5n0muZ6_7C,nZ(LP)TMG7qbB6iIE5,>U7[*jFO9ijA<Xb!Aa.r;>`g7,X2k<i$G'W*"68Z'*h'2
%*5lB,BP,nk:B[28<;HXL($6_s+"?[k,<c2+!K9@scQN_^raVb$"IoMRmqLG+"&BH20VJ(B[(8NR(<FXMZ`4"CM$D7^P**RT&MjIs
%9#6n4^,#K*i&)04R<m!)8+q8M=mR:N*Y2C"VVC,UK9qPQ-6>qkF,m_gr8jI91F')kI-;iN4!42ph%+1Riq^ZHNth*r_`rZ+r/S#9
%%q+18h>P2]AV>mjfZ8Za(,Yk7Yq_(i1>"&*nPH2EdSR/0M-N^7A;]$qjDisP^oll@G"TlA`LdS<i"-=/Y^4S9FR7SY3!:NLR-q5s
%/*#QPHpm*AGWre7!tl^R5cfS?hsaFWbDl#m7l[!mhp3uaoYcD9%>,mR+;h_F,_.WI:@seZ#RCm4E&`PQQWsuo*u]k_N]p=2P&--K
%CDGAKZoF8WoguWfHP55b#iAonm^g,KcN;c.oFY[:1_66^!6kO)]LnpO<aWYn4pP+p#Kn`P20\2Q_)p(l_AF=ra:Y,%*N/s-J*7LN
%EkF[L47GqrjFgE=cfluNB/VMhOdV!776!QMjt_iZBNdko<U:=?35@lk)-RB$0FYlLB7#HQ7jME8#jtjsLQ+;"+:V#I$:-!.($Dg)
%R'AeC)8]4tp(G1\E'-PT)ql>VncY*TL\s<rj^iC]K)@JTYcp8E&*\egkRHq#8&Q83n(:S4LPZWW7!aJXG?[D=I<O\d)g43A4!CX`
%OJNN5%=4ERB92rs>_e!;HU-Qg"MtflXc"6D]52[UC`)5d7o$jq4"CC;*Wj4hYd3tO<6j0XRWJ1uGWS_8RJe?6#BY(VgYT3EGJEAP
%)7s\AD;ROEKA^>aJ4Tt"AjE#Hnde:bJS_MpTlmCr+ATj*<B:8q3OC8):!)<6kriI6#WX(mG+\mRrLlk<aRKI#9Rt'79hm)?)!TO;
%__!Ve&YGRe;^=Uq.sOIpkfOnQki`_;VGMpW0S4(j6GO!>#BMj]S3p^/LnoR=7^=q4Ah=H!U)!5M\/BRJ6dRm)J60m)]N21d1BQ$b
%]imU4YEkB[EjVHm<lr_r3EdFn/)qOS&^O;l)8%2B+;h_F,\Y@GoFi8?b_63nDC>Z`-?&>eZ6(t=Es"8PrjZC,C@>5c%hAC8,7+?+
%cMg8`%MJ"IL3FG$`&j!BZZe]Z/TeQs!NriDpIKH@^q??P<eOirGrQ.7d"WYZKt8BrJ3G'\mA7q_FE)[HXI74I/'0R!0pM-W<XKP*
%9s<eq?'H$uPLG,X8aHZ6Y&TQ*0^t>m,G6#08E_3(p`^$;>m-!pM!3LmP41%AZ@EVc,u3%>@&03.lj4-c8UO-PN>(E\k3^!fWpb)J
%:'oa\;uBk\Ta>A'WN2Wo/m2db\F=%k9rR*WYDkHT8Q$R2jj6C+RdNKAMY:EO)s`X^=$H.X-t&9fmK3@QFW2%[WA3/f.*g/cr.f`F
%OmVql(L=msP5*I2B/Fq:1tk%O!o![o45^:T$U/3Yh`8>aQ$%+:aQf$cjsV2diCj<Sp1Q#cX_,E4pbB(OAS6B)QrlObYA\!?=C'5d
%IoH]L>)<I2-W/K,]'mjq7cB+g;#Z\F2k^,[<W1Gn=t#1<s5@.#O[La">*078<AV^FHH6kIT,%+%H/[F*8s5ctS@p12,tUncs7@#U
%#h:p8mj08X$q]#ndN\F8*QL8A`"KR^H+8e=([r,*Q@*`jG8B5bi&4C^3c583V)nF)12^+//Yfb.d.s=f1[>dq^8k^WoK4elQb9Pl
%H^-?<go8^'?Bn=/+s1W/&n(kQ"gA<COiaio;FlT`Hd_[Vdqu]Bflhi^UMHKs;er-[B=.'uLiZXE*7lBY=-@fO5$%N,?45J'5su6l
%_S84:kfE]=6s`l9>NBYmlc?e8JqQssfaFB7-0Y'ui"14uQ7"UmDp9*@Pr<s(H.Mf:SV:Ed98cm;,n#4KQ](&fA@)*5a/sF<e>q+l
%%;sIYm<5hKd:lgeC$lBDbVYfd^J&XZ>U_P4)D31RZO<G>c;!r/r<thB"ZN@SM.pjN'i<Ji]LAEZQ&]/4eVGEj52['PC!rJZ-/hu8
%&tTPm"H_+M6p*&fg=n=fZ-*S81##`SCV(U>)Hq)VjOE_+bKSWU]kQ6>lAj1ALd@]3oUr/,/?EJ6NGW`BkY5Bo'S@l7kY/W1&"?:0
%GFBJAMH)01]m2nYp#Lj[HlrQK^$2J<WlrAiq8A.8Z#&Abd8[0M[`e&IPW`PJCZ0<t`0**eGtJT`8k\bJDo+EVQ;qU%O#nJaE@*YP
%q*>UJe>kNJ9rlgD`0h]\_3i4hWm=#@552M\er=!*KB[H$c4=G^coD*>Lo`NdHr<In6#hem\!3.n;7=k.Q_@<0,%S+<BbmgrEm.&o
%MII/SE.,QX2mi'o%PcJpJ9lc0YML:ec!-[m\KmCY$5/LuDV0b:6Fl%`jl@\OgME;iW)TqNbH7NPbf(FL,a]OR?nTHf8eT;nZ!7pb
%-*^\fb9aD5:bs=;JS6YW&]5[9a[[eOMabk2`,cLSA?@4[ATc`YeXn0m=*0&1iSXW00>e^n[+_@hoq[PmhN&B_Yf-i9f1)SM2,fL=
%f0!tp>-5)5b=5DhgjX;QE@]"rE_?M)F5tUYB>uM4E6=0<*^akZlC47pX5-2`7Te9/0l8/7jV?j_TPV=dIRVK0mHD(!1XA1a`*"%d
%b7.)+@UoqT3mCC*BWW&pGQ`;L-RN7tA>%P%/9di\ArlXn5W_@g,S$d@<6XL[X,VGMWl6,3=CkkC`htIkYI3(r?hCm/7Ps%R(a#p;
%4F/'$.F/7/<2%7)@b;K%KQr+]J&u8`5/p4.>\c"4>DbC]E8=X(<HZ^_)b/9?3HA=*I4fUMrQ[ZEceue9ECOT-A(W=tN+l]Jb1C&,
%!u2_`?Yi5i6\@3T)WH]Ce09p.#'m`!+caOt)5+f'S)s?eeS<.XLE3@^Z&b;`k\%j:gb0brg/As*@PjJmpVcu<Rp5bmkoH%ZN[:a:
%AKag/Uph"Ed>m@6*,%!g/>%>pFda0G25aP*-,Z>8,:#iE;:H"8aleA'BHpT^=0bQDH6-QXnu1_+$0`;QXJ<[:3cRWV(*(i^QHBpu
%c6i-R`L04HeLUn6,I8a:B0>n@IN4`i=`64,l]q<I$jU5I_iVfq%D<W@$HDC^*l/aq=q]k<8<M_*a<`tVl5aBLAT[Qk!)I;KP_+s8
%(2U'\(j<kXJku-]8Dm46m^HmLP,J1e\G.<FFT4h#k[e9OSf#D)b/?*q#8BSfkcg?qmc+TUIP)e(:^qoG`KBWo2I_KmkZFl&`:RQA
%#"$9$(qZ9JD6m9L.]ZUh.`P[K$<A#YI@1okTDd4TX>8_e-=:XJ.V@).>.+'efbhg[LV>0hkIA</_=P)/R,Y;h*)p*\W/\m&S+Wcf
%k[JB)N^S-$&S"OPFQTM&*&)V62D0b+#%$RAC;XoG@ZA@2X*U:K/P#BENu4oYUSIK:LcObb.@W'@F>h=-9"YS.b2<I\L.X0G3K7Cb
%"SAM7=+3t6f'9X[j(0!aSSG(G0"6TkVXU8"Wg%:b)'eI[BNC!`of1(29[Q-<e[0;*&S&=CV/j3G,h??`70c6r*u-N7lbr#C@<'kR
%8\%-LU;S1N'^$#U;JKTM`!@jXEC,QZi+Oep:X*N,L',)C[b6W(?]^F<lih8bld[ud.P<X+aMP$DX0JOc1C)H_,B,?kN1ORS$q5\I
%4A)"iEJPKtjbj_r7#<c0_lahH0G>bXa^.OgMG;ieUnSjf[g!V/;D(Q]@Raqo)=^sr(p;tVjJ'R*Wo;8m3>2<VnL3Ln`$$JL77hMs
%%V)q-P.<!X$]p8ZbD6S==[,fp.)hsGM\:f4;=UST4VoEq=:DgA+4XV\i_dieM*oLcB`3DJdYqX19rtVd_eKU#/4]U,]N?%Xa[hBI
%i=r%C&-ppI62'5-SR7ae=O6"`@Fk0uKkM1`Y;e%]a[n]!5HsLq]mRB:;e?ZSerO*8'>#$4"c6MXlrmlM7`)=Q2$&lMCIcQRZd>?l
%<\:Rk0=FkRS@'U'X<gn!Z"br!<F^6+ed&Fo4_u[+_1K@<ac=jT@%p-hX-&^H;%+3cC6YZZ7qNI,;ds8^&u)SM8k<L8%a#`;@9tOm
%;L[/rXAmDVlN;CoES+g4>UrsHj]_;g.Qs1r%EiSNA"@2HPTA7M2m$gXni2S*4-uh20hDkO$);;B%]*ksd'5F@#tkc)8IhTMcf^RS
%`i1dbnO+0g3%+9eTYOp+KE'96GPLnPgu&\))4/0.+T7i*12O,@d<__J+U#B/aj5t>U@F@;if?UTMjVLKT^_/6hfB\38*"/pbcojb
%@_LKo[ic/fmR5a-4kd5.)M/s*DBu>LN5`N%W3mmo0MnHo\XbHgLe7d?cl`cO5`7oqe@q<*#'m`!+cah')5,)/S)s?eeS<-m5t5g:
%N:$0HrS6&_UbYhhj8g:8GU+WX;;?ukF)4>n)(9dY0A6A"p4%j=s*"GJ%h>'[-i:[#rbo+BH[oWQ0-s3`Ig<4#OR3!:a*NBos2Eh>
%g&VubF"oi"AC#Hj(P%6f]d2;&:%isu4l=!:cFBUV)Y5A!:[(.Ofe][,WB]cE>,Am>h1bte7<J$2%-ma*#3PKpE-TNpS"5k1X4P,l
%W5UJ#JJnX^)If*):3.)=o!hT^/O&7(DqJ]+>>C4*U_K;mA;)R;+ZhI_.qGn3Y%3qO=XHe-ac^3jl8'KDQhMQ;AMOn%SD.d^<p^lO
%M:O\SLs'#qF&0sOMUaoBZqBNH9sYVGYFVbe%H>I"(os'*"b+EqDdpj!bXUeNBJQ3HX.=F`RhS$ZS!G&`1/5KA,MGTI2%;B$,u4T%
%7GE508[/M1FHfj-P/W3M?@6EDX<P1Cbl`<5@!JNnVL7g^#)#FM<qLuD#"E!ZH%kt#O!VtWQ"8i"=a3LR?BU#/ADnh;GY&ZWP(f6o
%dk4g9+U]ss.L]X58JYWe3!)ei?M[fL)4[=@FRjg6AcZVr%X:Hh"mLga1i[UYV<r&\-!;uAUh(J3_^=@_&2<I+9uK&j+ZX@J3+thm
%Rhu]FnMBNdIs*ri=*Y4q=)Y:0jiI,gA9&Z!K/W([@r`42E(l;68PDK63VF>.%K-DIImP$@\M6*ql"HX'eAo'GV_9?o0+CNI?^Pnl
%<k$=OrFthcR\TRUIZ.4'P,Il+`[)Jta4Xt8.'aOu6To]1Y7==7im87sD6(1nE3%%+>HdncB$4p6D.m+LQmR+.FFG+Vp`d]X],BG"
%)%6r.a;i`sALA)DOc.Ru"D+=:KZ<OB#3^*G,9i/s0gM?uOSK_]4=un/A^K,l#"FOcLR;p/?:()ZE+"^U$au(X*4C75ehPZb*Fjb3
%RZUstd#Yt'7N<>0Fc<#RF@T'gPBDgp*Fm_k-<\A[ehKX)*TP+qd+W*5%'lWLT,%)\ojogqMJ8Nu[TU.E0?;0d-hVcujIdUKP>Z.d
%l8$`b,hD"qCuIYl<NE=3bO&cg_ODp17ceNP/$WdZPTCNYHof:34WA"V.Q"9J*NN5"'D;.C%uRf)N0UK,3FsWL0h:'d-O1*?`^)t3
%lpYs?:`*cc3C=%J?:XOUTd+S9&"emPrhFX"NqZa"*#2!5KV;MniF]E&NADg<@PJmaK3@j1kLcG[>55YUBl8#B0JAIKU0r$<8XqYl
%!C"45.ngeBV:tnink'Zi@i4ipO\b_/6c-&THgsTTfddgm8[9-GR1I8;K'S5o8"F)X!j+#]Hb!^_[LsZ,JL+HT[qQeEKm<U\Y/DRX
%3dOpj8M$4HEeDu4,aqB#\KmU_p&HLtk)sEGE2'l[?K=tEk)Nh]<K)PFP'ClSijfmnQ@s<N31#;>8N<&iF%J>M2'X)lJ1_lT_]I5T
%7k(6l78+?B%9lAI]3[.-29e,0qGE=:NnR,6@RLFBJII0\j<E^goHWoF\<0!W+up`$3EKYmc]o=iEC\&omEYeNK3=/9J0RQj\UJ^s
%@MX15E<K6ZR)O+Cg"BIXKrt'T8t8mr]A0(?0'8Yb7n/PKdPE@f<'Z$oP$2tg<]>5HnBK<5ElM+H`&eg/<GUQG*cjip[Z1"Xnm]A/
%BshWoEWeM$#:4%Z[pqS%?a3rD51@c&Yf->f%#Vb9ULq8'1fpm>\$3o0mJJgG79tjGP#eKkBbmh\6Kp(n"L*4s,PGne7qQ(bs.\<o
%^>Q-53(M)j^os-K_bAa7R7\o_3AI.mX.<@^C/2l:d=\?i!M%8Q;!q8rN+\X!Gh[a]%^I>3#V=\.r()-T8)<W*4G0@$%/P8tn&T_Y
%E=Ne\Pg@%sW7S+QmWPhW&4[D@Z[IK?_((:?PW2):kS,=,dCsg8e^i]AG)D=8')ka$;!uMD8=Z>`Z24MASXl]7lsQJQK+b@)cH&c1
%_($KEUuA0o.Q>12K07pG`3Hs:"#RZ&ZeXE?>-X+]+/p,5rdsS-c]1LI$+WrOYF+Fm&2KXnLY/7/qrAT,Jkm`6i>@>\EZBc5AHX@$
%p_-7T2idmm3/T6-aiamDe`f(2gG(bLEM0u^8VoE1YM_Tr-P@`oH5j7:M2q-5ZTSif).B.S`"+1-38XXfI<-OE`smNXUM[Br-j\k[
%:L-s6d)@tU@jED'H)TQaP*.`?<WYM2Zd`irL>,BA/Vien*q=7>:W*]?LIV9%N1$G[8B+=32g+=[aZ-e1VLai8Hq;T$%T<0oplL=W
%QWpp<GoM;tP!8fiTf39k.fg++N?`]en7X0]oJ\Zq05<hD(X\8=5Ks[;N2HtP9oDKtTg!2qHYq5H(<Xl&Y($l7#`DrHNJt<V;6b#X
%?%;L2*n4l`:@/"dh&rgkTi3IJ+%\8Oei96o`,'P6Cjn4[9Lt,q-qRQbTZJ?:`'KGHhe8Iden1F2.1Doo+1\5/^)o0KqGiUU*7'c:
%UWFVferrjp5/KboVn?RjPpF6"Xh5u0Q3WU_GsFOVo-Hp@R0A.KT<"6IQQ]e)JjAX'la7JCK$P:&Z/Ji$X'B0'*'\VS61Nm&X3[db
%oa:=;;^ubjo1?WPN5oq0b8`adF)+R4+7%kbG]"DuUfBd7TK=aHR]_h?T<t9^RP)Jo<T=g"LG-6AMOMDaRA_#u(Ku0?IU.\HNr\m<
%'6nDO]6g159$l5Ep#F))1kjQ0WbfbH-E%-UTdX.\_aQ"+)3P&?*O*`61]SgFXVn,>5XS)cU0qB%BO_U!k`DHq>Rk7Oi)3b/H&Z#R
%E$9(s+s7I$+jKU67NuS]=hudPc0MBg@<,OK'q#%JeI]57m@'nL\1FZn7tA6c82a:G#R3"8adU?P#mN[k$TaC7.4hEJbRb@_8rE`T
%!E)51&.-,l6'c?8*2\S*R+=Ys[7Q!XU9:LiGmp#K*EWUGG>ZP<"pIENdfjDJD#eU+Ih>r8"CG:T%3.,c>`]CYX\"]7B:5i:BjIIg
%Z2#p90Z4U_UGEIeN^q?%7P.+a\8ZeZ(EL"0kle/fJjPTuRUQ@:bg8?OP[u<l#VI#NP!B+1`%/9daI8D1H!L`ne[-S=3eAkr%>d:N
%.VW1Q1^)=W]V0'ud-\.bMY?PEE%,YfP3cW^WO:E?iIjjmNe&BM`gZCb#O+Q?!AVup!sOY5Ok(Yb/?+LiWk>FU2D?i7'M(V*H7Bc3
%mO>61U!Np);L0799]8*##XY?p&f".Y9X"\T;]#nJOqr;??NKQ`FobQ6<!:*?=9cU,FUr&@W2)jb(&Vl5.Lo1Q*hIqEUbu.L4ks$_
%K/!uUBH%J70e.G3CuYPbKN1=b%Br8(#8ej`7ofp#&0t<<]QO`P:ln\W]$Rm:L_`r4?R+nPdu#?-#UTZJGlm%mQZZP0!J@64'S-A<
%ODS$4cZg!NXO)F+$KWRr^]gN1":1bU'!&(5rZ9g[(`M0lIdAC:iaAr_a,d4Te24XXS!b;4oG`Mf7L'l\@ee=rJ-6Zf6K:p5FW%Pn
%&;Xn1i1N;hlpsA=P)M#$MT$_HHE;=AK9e5ql_'(7A'U">;7DT`E%`,(#"tU\?/V;\L@Ae0P1K]'=9nT%m<(ZAemZE,7@;/,*JRDB
%3#TpP#_7Gi6IbL$b[.d&$HY%k27P+)!i-QMrN'VU=KRh0&UrX`bW!_A.i(^lR93O,(PaGf*B]*X]8?:>DGY7a@U0D.6mo;ugIrLK
%7^cX,GRN'K'%)*)>dF=SM07nGX<0Z=:qBrYa7`TO>aT?*h6,A\lVG<onp)pe3lkCG4-CNDQ,l.eK]febfGS)s70-2i[ch1^A:n]N
%TEIR=9*c5"C^DZp]#u$6(n+#9P@K5eR::2&aR^S-.!FYgnN?LYS5''Cc7oM*>4`HGJA;X3Z4/!6'AFXt9c9Vjc<tPa(VLr\8lCr6
%-`lh.PaE7.%1t&S[SldNcr;0MR8us2ZAKB(i4N"q6.uMB0JO\(eg`<b=t(\=:Q(Cs"$4n`m\cZ\JOriU;O+[6q?@<*cM;$Dn.-38
%U/Vdo$u9ft[_JO4L!%S=5aC.j8hkIpL-gk4\(*<.AIB2SR`;on@j!oHR&'cK()inbn24gNGp4LH,P#VMEaK-b%ot)_ls;p2V*5Ma
%<$+b)2@D!_'A3VXDA>X-r<s(4We[\tOEWg]62j^i*GXEVI';K'V1]Sf0M,dY2A[OS+d*lQU+0(2aqN=":fUHmK'sGZ76cS?7DHL@
%,?0Vf6a;st_Z-WNbDFH%'U;$7lorYN<">\gB=lY`4S$R%jHM3:.WeeUUu@_iK`dinF%r]7DK@hE=m@a=*pbA.%!lCoV'+G!#a3,V
%*'FM(f,u3^`%8]gAJi!s[at@41CCT;.6'C.iF!cS!.npM\(q,>)t:<s[_q<Qc:\oS3>6t[UF;GX@V0'c2%*B81H*]bG1MZRCB9O?
%/@RQkUY^"[c0m^BVlCgA&[ncS[\Zf2*BWbb#:95;o+!>Rfc12T>1$ka$SaSjRKY/TPo@p`]a'o5mA:[)j^H[Mem&6O+Rn&!R7JLg
%3\Zlk$81e6!sEX\3ai]$j`ZVLbl[,j$3Ti)Xe,ea*L^rZ`#fP:E%q-?0KeLc+G5ZdfsV6!X&9:a2f(jZ#c_8toTb^gOdBYQ$a2"b
%#.t#N(CW1f$aG(e#l@ajjo(2q=uZ(8*\PO,dca^?!U3Pdd,Ke]CF\VFW2dL(T)h[0Z6Vts;GGS---U0MN/mc"FD4g<):5)gjS72A
%`=S,+eIR8@j7^?f6].K@%Wr29>qq<CC#*$+V2))QIZL.0:Vt:hgJa6`8k8u%70%3e.o@.hh(Ts<4O/hVaoHe<+FB=q01%qh?6Y8G
%im_<$iHqh"mDU-cbFX`dG*-f9?pKX!:l&G3JAc=F;@Ss]EYs^BMH0'3)b_b?LQL?dhZcG8\J%h#)dQUnK9F,S&gP1.h$ER?#VmP/
%+r.`[AHo-MmTCcgYssYnRZPZT=JH('UBXhqlTm^fJ@[3FArX/&`i(&>&bq`P$)noe(d=Tc]H5EG#370Bh[Qr2\tfQ+U':#FTJ4.s
%29;)F]%spVBTgO?8!=dm#XK4/62RZR+cKjsKZfc;,87q^Yf]+2UBXkr#$Boc%GqW%J!q(k(b(Cu@4!=[0d2h"(rL,T9i?S3U]f2%
%W>G]j2bfHeI$)>7l60u+JntaogQa:l-7M5T;?CUNYTO5*=%s$1N#'&FDIPpL'2l:EA(2W2e,WtuV-tj.JG)d"6J00/#a[2Q"t#!V
%@?j1t,;XJCIZU<p@Q0CD8$Wr<+*tkL'c4Tb\F<eCKoa1f=-(:m*f31ZOh6/;<KBH`,DY(a1GBu2$*2gO0kue)_)ThB)S$f#s7Bt)
%noBps/7I+Qq6V:PZDQ%:J$`?2-tr2iXTf&QNPZ?%"aoE6Agf29'BpD==_%(b<7OfH.GUU(EP).oRCsLcE1$nRS1]JfKatIBj0$IJ
%(-)5-*o.Skr$s!h_P6^.HN4:<d.!FF#.rFP_uVhWp6S%40lD4VKd5=e#O6WJbn:?J$U"A4V9,Ukd9f=Yef1I^e*s.:Hfp(&;V#4K
%K&FaW0X0Qh)(%$uFNlrS?hD1n><(D/$hj"[Tr/W.Za6EG@E3Pi$o#^-2%-mI>tO>hc&SPiKTP=uT]X'1:.lS:R+CZL=/R!No@<)[
%m$&4:(*+;6\BQ>B&-`HaC8\TRrf_2^E#"d-F/?llL<=$8B=""8YuA>BDnAf_6Zogi2g_sh^2=\ObnAY<>GTYm));o+"J&L<'eS66
%#-S52/sf_.[r'BLc$H]gcRC)*%pDi1Dcl=n"_/SL]\7g8Z.@a^]t/c`7HmLeP_o>l'-[P<A3s-Lc]!n*a>Or/M)PPA5(h=!Bjm6(
%/Gih\8"e@.-",\X>30HjUYQbXC/Adrcn@<lDT`Ip3A5W>+CXiM`kkgm@,O4kecSl-NA9d.,[(W,=pH*mXd9VV*jFrCg+&=d5u6fu
%W8MYag[ODOqG]efR=JnK)4U`Q$VWi\!YdUAS/+L+9eU&1:h5M>@$*IU<hbYgp$l#Be=Q/dj\o:(;G_A65.GMP%PnG8eg&,_p_DLm
%Jth4tp+=K"#)m/!A*TPSHc'+k*bspA-EE%R$T3?]U[0082lM9^bf.eBMIRk7Z3b>3Y2M:XZSk]hbSj4:Z>Cj=Li$Z5AD'di/F3,M
%7`J/#oB8@W2kqoPE!&t)X@f34,J0V+!frMPdu#b,$G%NEs+f]%Glh`^>TO];/;(4s5\P!b@jM3&@TRafV&Z82kKqqaN6[Y\lY+ha
%q1hJ>"SP&I'*]LgmTcGjWJ3fj*@?+cD@@B'$?:Y_.;eS8W<Y#W$F98B*R\PbKeIc2+toi?oRtqm(Jba8`C#f_"=#K)Or`A8Wif8B
%S\gM/jTYJt(O?QYOeSKYN\3MoCb)>%VNdgH7]D+uU's=6W8!90VDSZG,U':bVh47M*t^^ZA:Tm`,c=TW@5?3F$q\e^8IVdOUSmDH
%,>YV:Q8II6G#D&X.XLYt7S1dtL.[3/.\m6!f?%N%]VLba'eQPe0_'0>C0D2p\/eUO2WV4pMtf:k`.*?6;oe..XM[/oo*WT!i=0)2
%>qW@Leu\+neDo4.ZaE073f><m[3o"]D3b$W.Ci']d3tda@=-u/EXV+G/\cHMrU#[j8-^KmnWU)J1"KLj(Y5JLArAb`]+4dm!LlSd
%mipe+YKigp1\ag'9dFMK0Ikk+:(Rm45Np:6gcAQ5m!A;RSIm^s5!88j"R]OOCn#'Gl;D3Tpp%5\A+)skj@ZT9U=VVl$S-#e*iqRg
%i+r;-h6l?)nUCmf5i-bakC<0"+908trRPocp46M"r"C1PkXU+$>n<bs#NfCnbs-IECN'7G2njR1f/N^*mB:utp]'oIk5ua7pAR:(
%qhP4M7u)'^pV6V%Isg-oTEBCep!"R"7e>j?_12:BgOTjis6*MpKmn.B_j>lODP.*t+921G[K!"Or6(/X%s6ag-iWth3q/oJIr%9p
%!V<e7EHiLKqi.fiI.QhgnCJb3Qul`?1(`#f6e-dm%]k0XmD3u(_+29:%mTo/5PU`:I/@+QG('8fq<n"W?dsW\28&g%?hj'HI-j`/
%h.M63;kH1NlVjGT^&RSOJ*XlJkTBgS`"9'LdN<u/cT_&+D6($`?rsV??%;hIhYr<1n#IOY&Epppci;`aGbZ,Vn,N(7++<>L?i#b/
%!Vl545Oli+#3Vr`^WN2Fg:+fcCVc;PJ,2,'ofp37#T\0bRrA8UT7,dc!;uC`I,lM:[<Mrt\GPTAp)!blYM9H"0>76!J*HXLLX:T6
%+8O5iqNG8i$c(q4qs]AJ]6"<!=Sn@Jq=?iI`Loj^s5P4!i/c2+63hE.nfPXB\R,VcT^ZG5pqVq28dBh0O1t+=TcJCXqqkO9PR`*/
%o7-Po>JUf^o8l"PlPDe[q*0]!_#JF7*VdP!%a;WXkC<K83q-MUi'U'@#2Fde:HFSZ+R)/>JYWB>#EfQB*Cr5QF<Kg5dXe1r8I(Cg
%,TTE:OE;W05gk4Z"%``\%_V9O)#/hS=9f1gfR_+\]0k:2N9J&cm[T#Uhub'GkMbbJJ*m\Q>IS;?r,=QtJ,,/^%,8FdJ*fTF3ir71
%\&.\@0"q,uIdu5%LX:T6+8O5ir8WkIMM:g&b.mkr_oO"3pM59TQ2gL"_%'`G?[qH%rn5F;FPu+r^A4+FqCdIm/6Dk\2h(W+LQP+!
%kYkjef'!'5Ybc.(qt.Z'c,YUdJ_**[SaUt],a7N5L]6<MroDtL<lMU[k!<7&\$T04aj9s/GV7\'YPdWD^\bG=o^>!BaksAPd.d9$
%8:TfdTDA6]f/Fq[l!F2Y0E1p2rl5QLlZ^)AXTQa_s44Zoo=_o"asXk%Rt(5u#+ACLn<D4RT,;NJmD.1sLENi^l+g`)pO>;=#7gJ/
%LCcgpR!.C0s"\+;\Gss[rSq=/i#f]()o:e6cEFs)G`VZJr`=[mdC&^umMgY*-p7:F++F1_s$b</RXb9GT6om>DgqlOX96,^ZX.!c
%o++%]Y$_O2P^_To^\4p.r:]UWcL2`TG5Wchq/:cBA,kimn(s-.*V_#)r3\W\f,ldIbJ%9sn&+gFCF]SQIh$QC\WSJRP&!l13Z2A/
%<^Psni,]ql3JTTpe31t5C?,bXguDKFY0_Inr#(8bT:j4rTQ;(AYqb#J6,ip8DRip,.b=ZVcASs?-al^Mj)Zg-K3QpY:>;\k1u&!c
%?l$qn*TrB=F1;nL9_6K]5s-Nh_^Ki'dLprVX8e7t?O?U3N)LbF1NGGZ4sC3%Q*F$^fg>^,Sc46/KV/;(]u-H6il)[]a,=f`7N$Lb
%N;!g'l3kEF4:T:4B?u3u=@XaU+>3;3-HsF)mSAP)=Pq$,0GEc!3>lF<I4o6N`9VZdkqEe:"X7C9n1Sh[?hDGoR:apD#=i>@\4if+
%kD3T5T3L^a;S`IHQ8_uJo8-IN^LB?1-`)2\/\th-C@rKXLkbLfC<t;<p<0sj#ouEg?G.Z-Wi.^\d)jhD_2EkoqgS>`3_<5iYH^SF
%3_PA%1)L5>M[DI@9o#oO(Z;H."%>eI(gr@FPp?^J`kWB>>S[dnLVu`akgcB`k#`boRY.$FV6lnPWf,Pa9B\h8hW?*USoW-22$1,S
%\s*cq+pCoF>mq3eR$JR+mStm0^Z:J*@fFIEI]BJ(eZ&YSdt4+@d>JZ$4].krRNA+j7A`Q`d"5W9/UB.MBuuJ7Ch&#I2(mZ1`t*@u
%cu"a[C:@h^H#X/\b)8nLK>c^Ydi&<uV8^bfpQ.$O/PCg1A3C<E(a=KL)*Zo0aV"=kn&7+cT-3U=$js#m`;gA5Wim]Q`cBo:HPt.[
%*DX*r0e@BmjlO*IKU;-[_$gsC2,&'BOQCk?^CKSWZm:JoepH>>+TRa8!q@rS]d?X=!j(REZsr6NTCi38nU[/\"s[turg"B<_g3-c
%@6G!q]O4o`\]49a_g7%C&*k*b)'ghMR-%Kn_tkL*?.L5`;aX[5_B"@ZBu*VoXG:M^<s.$;7i">qZ<d\h&q-j:3Eq\p/MSrFoa]Wt
%H3Wa*_JP.gRbK>GlWk^IXEOt_OLVB#RU^n"lN@'-=V%NehT$184UZHN,,>\(2f[fCG47fK,9*9Y=c\Sh<P/UqS#Z6f@Y$*!?+?6s
%/DOZhdhot][pNJ(]4?/Smukm;ELF_O`WB<*#<5DFO,f3""]>"Mh[?nrJq0:BH'jY#L*?A\O3ZK;f_O,ZSQF0dHGbC4*uJQ)aR\2A
%H[3rS*H!ir3G`3:`Nl']Jn7)<0S@8SNRO72kd!C*^Fni7Z7,er`s[)nYG;n-<P>J8TQ_s2DA$(Q^Xsd0!B/Sg5_BnFn..8^FEu3L
%=l+Ma%QiIs(reQVo.o2L_omFoA-Rh4*2YS/a>,uq@Fr]-rD.M@ZB!f4;"]A?4*lH6lffUd.-cu9^NY2ls5&>(r-JqelC*'gF+JMd
%I/^gPkpSHVrVes3CHPCTfZaFn&TuXai&a2rL[W$,0"qPsjUg/b"2d:FL%EsY^?p@F\aP%dG#1]\_`6orqmfM9BKu6jbO%S^ST@SJ
%0$qdi#O^V9$[;C)1rhAsl'mb2%P9m44+sq2.#6I+(`:GE5ECF<^7Y?VS7)\GGWi.'hQ`^Qe=61'T=Wl#,drd%C!D3S\PL%*jtgD#
%)bs<_gRN`gGjj#<j1Rf:Mo9$7gDgT3\KBaLd*)0gT7OT_EL^@$F,l%BA&%&$qq1AIh]=&OTC-F<JU,o:JA(;^_3?$Z;[hjEIX0W8
%dc"cP9/MRF@1V*4$Y7m3jDiPqpTrb21CTt;YD72K9D5]aHI[K<;]"5A`:h_EXZ8'gq^L1<IKo0._eG"iSC9,5q]._Fm!"7tOZ;]9
%Rq%"#qZAqjHM`0b]5WKJeFiKRNr$kHp/A`[c[OURpY_^i\u.D%kiKP]pC.*1G?@19@sR80bVoM3-,'D!aC^Po$t<FNJa<@>\/b/9
%]`Z'e*L=2F0Z-$)>P8PWj';KWDu8K7r_nU._g`KdjhColnXkLs*20LFXE-Jc@6[,7L]%Y//.RFuDI["GbPi%o#JGRNqcu2!Id-u]
%fMDHW5Po<lg<4rs(&-XZ::mD](Wc0>JU@1\Kf^i*RU_aU]B1%4LD&JE3+T?T*!W[MYs<I4!aK&RhY&qoa5.2<9dOSt8fFf'I81@#
%\b0F`F703rn@k;rOo?<[i-ST=`T5tSj@ZS;^Xc`gRFdt(6LVSdhOf5@H0XJY]78u9]D\&-oBr6!n*>0ab;%V>O1k5Z[m!`sIsg8%
%^\Q,-I,$p"]DU>8^&@%g<r+BA`YZD_bqHc8(/g1+hX`%X7/?(omZ/Ig`I%*8qk*[*r:p9[h<V,s:Z,Gq]fT?AF8am<d%.A%47C'O
%roWALK!41Pb-1g*0$8V.Ih.k:>T`fHFQ_DSfE^r-++0.mpmW?[Q23$*?U#)QkIH'#n!IQ+`]nqI@0Qb7e6fcTIjeFEgFUXer>qs0
%@Jo/@^VJ@pdGK@c(Zi<Sr^*jB%nBOf6(<`Bm(OIM'h7QqIt5T+I8$o\oo.RJIr>#BaK<2d);Ce\0"UYnT>3[IjF)g)bteoXrSkG4
%?gdS?1Z^aNHbP)XqC.U+r>o51MaU2ZHktu,[m+k^pZ:glp'5IqcZS]O?hin&55C$4GiaoDhgYII2f-t:k]bq\l5/<%["i\jW;Z.V
%J*lhL$U.tlNd':XnULBfa*Ol$l^trD26X3rl_e+%\#47cl^tmAGW9ec-!,+5=)oTgE[=e--!,+5=)oTgE[=e--!,+5=)oTgE[=e-
%-!,+5=)oTgE[=e--!,+5f*c]VH0o6NGLEMZ]`,6%q]7-`lL+!<m.L$7Q$^QbGQ5n!_pYnuq:JnYs3bQH,VkVYqQ2E"geK%Ds6c62
%rlV.IpJC8uj\LC%lYjHKP*GZ$b&717Vb,3+VV[Y1b1s[+Iii7NIJ2XfbME'/n%%OB(J/cJ17JpR?';#YP9c:[YC9sTjaQbRQu\eA
%:5KEQS&?2&^=:j8b!i407]41R0P9TdQZCKqU^*>Lqk5)cjZJm#lMCKd<:j8;DRN4'/AC^M45K`0(]iUB^Tc1Xhm\Ma2O!%m?)F.T
%Z;Y%9-cK0orMdQMke?ah]-q;>JJ01;P@U2Xrp>c1<7c?-M2K">)ZK9rG7fSErQMtSbPgWV>GXRWICGa0HKC-q^Ad90Z)u192nnkM
%Dnl*tf[am91OnqS^\IFrJ*$*Ir/9J/k+BCs)pZT=^AR]fIj</uY.aPXmr\,,n%J_,n,4u=e2l79]7$#mrOqXZ$t,9KqOM%$]?-=C
%aYbhTEa%ke:TL;se`Q+QY9?DI#&a'_==-1*2L&IR]sF%-1F\@BOdX$Ir>qD!0SCF88T3tli66.hA'?h$N%mI^<MuT\%hrVNKON2r
%$Jak><)%rejBPE*@h0r&;A?sR21p,L5@'K2#WlCW11g2-CkhPnlTh_1`WSeF08FHY$mEZ0OrJa-J<M/_*5NN&dJkA[Pj[HaSFk*5
%%cWH*GHVSc4eXZVVr'9k$&4O?3pDW0T@6@D"A\4jh!"d>:.fa"Zqbp[0B[IIn@RihKcT4l][Q=HSchF%@@m,2Y)i1M#Qb6W#&a'_
%UaN!#Gc3"'Z^5/b,P^)9KYl%3%,U7C`(tt.jNLDGA+umM;@LB_5D+1V55CD8#WqpInmjDOIn"Ci`u'LP$Q?\,n%kY"6h"bcd`]<D
%%SAGYNs?-Nl1]^)8pBc\:jQb-LP/.d]B9HRSK8]^e*m++"@MY];$u3u)577&fI<Q24+3_G8gt:B,YIOljXedbNq`2/64On+h:Tt,
%UYa(J4mpE2)=?jj;/cBM*r-M_e,OE_hUmWIpW4?omH2L;E1ZeDUl_oRI5c=j)Q>YJ$4bM@:*fMP5J]Y>gSq"*a='#=HT@KNSEI.%
%UYmQfmEeaLC_Rkd]c:;B$%db=[&:f7^!T\rM"Z"BB`ual7n8,-g>gk`hY8KQ8p`VVe.W)k7VQdRS9cEU^aSU?SC7b8a,Z75UU7KT
%:q\S]E0U':%&tZl$BEQ+N^ED.8\n9XgMs/(4HCL/"\39F-`).LUu3Zgl*OE.4;8d54e7u*NKf%T['rt4,IedV;Y#mt?4U$.`(IjS
%g=)aqhO#]N9RAd%eJg+97qo/^X%)S@G-hr'V7iG3lA:l*UU8XZ=1rU9J!fqSri.nd$BETlc<uXiHIm-t2;m*3l-:>PGVACjmTs12
%6/^/1iTdc77_M+hppa91R^uJ%>1:N;/q`lGet*(PBpX&#CSr'hH=NKg_hcs#[gFUG?=jK;1g\SWX6t(8'fDif(Y[!"R"kX'%"L$&
%Jg&h1%dPf)W<NjEQ*_]s=$V)i,1o:ddcoGtE\BEG=&kA(d]A#5Q;P"A!aLn)r/(p6>*9W45GCD=Mj@?+VhDJ%!;brBfTMWQ,QYl,
%L'U_WW!)#c;d9OO;Dh%'#%K2H-!&Kf1F0tLM[+Oi*94-$'U($,)U9M[,*1S38\p<KYV%XuTnnXT6!u[>7A>SV,rG`4l@rHd0HT\.
%#p;,E3:`!ASpSTb.>i+S1'H?p$IQ9`gb^-kOeFGd@rW&A)CRp?_MS$)QV:5h=&B^>CFr(-AfGj$Auo%U713sjK3lh^b9bM5><<R;
%G+mL\PeIWbeS7$;e:ejf)K[?4%$mE1[8CkNR52FeDsnIATp(r.46;Xe1C="opki4\.dOW;]k(b:m<61Or5<@H<Si.jV;SA$U]S`"
%rX/?_r>%QIh&]LdGL+MMH*Rb!]<B0ZJ08B(H's2]Lgbj)F/bm+5+qKc49qZ4XE5'd3,Ze;YkSB-jOc)Xh`5UF&STQbNWVThKd%1#
%=lcODpf_0YML4?og\4-$aJ%##D_o8Jd2\HsCm.Ff\!<s8,c,WNVX)XB6"5>#o+L?$(I_ducA5$(k1100&C_+bEF0OB,ErArBn7)b
%rk4:5]iCBc!rVbQ#W3)#/[uQ`Y`"qR3q%#C]Q/U1h]):[?HIYAY7^L!?@WFI`OG%VF5jR:@Z4X?$W&Os+nl"p?=hlnI^Vmt_1!+O
%*ddMt>\*HQ$YD7c4oP;Yq?GMZ@=[mAUS@rl9aRh'<tHT'IT_in8>&IJUHr5N%TNPun:sYi?Z#ofQT75Qo^Y-]/R2a<iBm!Dk3^":
%(nA$R#tE!a&O_K`=&f-7QhlMT*oX]PbV(5%#J#:=E^/K?,YBg)4V_RG&`bUIkhqYu>GC_=R.Ft*[MZ]t>JniMGl3H!1N.H"'bi)6
%0PI1UI09Sa9c4mXj9s&'A!k6BTounhL.-6dK-*0p&]/sKW>SMT?',QOp!9PAfhA['WEud;nLX+!G%jHHa_hs,7;"X7E`>8uke]L5
%F:&POmnSE>ENgo0Ea/qq*@3_JE1hgV+7s=ZY)tCHY0l3i3^R.\]lCAEr4hoNL]ck\I/Q'U4R3!i)X%kF,f"-!I1cr4di<M)^bQ-[
%Z6+a+A01dp^R]u'Dp9^4L54AD0JM2RjPkc5qJI>Y,c!:"n$bC2"WdJH:']/7S<k&q>4e!EJlFlBnYSnjaf67mN.oZG_RL_@7]d/V
%&;Y`U#<Q@GQfj<c8=adhD5le&d?[mr!T'b!fc6,RStu+"hB<Kt:,;u"pr?9O$m*;Y_&Z1#)hGZX'HOqop2Pol\#SSgL]sL+!qsN3
%,L+F*ec=kR.NpdEJmUQ+5VA1X=:9RLE'[50#QpK4@P/=d?O]Q-Qbko\X"_T<kR*aK<E@);^T)tCLPai1.3e(j]@9>K+2_IYnge*!
%]'qmoKL3]+1YTS%YQZ4UC:&(J1Guq]7#[p[\31Po_(udNf5jk*L*-+C8n]+N.3U,?VaD>U,MNq<ifn(0rFV_feRiPF6HtAP(Ncj4
%q^iCq#lN8*'nKVCfa0B.hS+3]/0W#pW%)3koJ8HP!b,fHKHtl!,SWbW.uqE,m+jrtZDp!=6e>X%OTF--V)V(YE0Xg"iih'UKAD'.
%5GV03"h%PEh:4\GhSYAm+>.je<"?@0"C"]sV'fH>2S1r;;VD+6i`)$B]-7cHQRNoMQO,rK4-jZ-d+\lp!f!6-'h+lAmD@D\.L=[C
%UZHW)O@YUsa-WmH]:hFnk,=@jP01WX]l9KT.-_sp'H7D3B>\Ku#%$atdlLZqp.?W!kE8;ASB/L*[&0hJq[JOl^hY^Y\hI)2MA3$V
%7`$U'H]J5e"A`V]V_\\4*aRg>h.D3rNPp]9E%b!$8b2K"fgLCQg$g[8,4XU<YX!OTMZeY?#?E=3i[kSVXFc_Kj!tKA9nMl)o5k![
%D,f*8>oT+$nr86LlpQ1[31T_IOsi;JL648&fTf%+IuNm.KWm_\m5-?W%YI*Tie_kNRCCcid%61EWKOlr/1?t.^_crg*T\8$qagfN
%MpD3B7A^D-cDhD8L!sa&2`sDGK_n/1P^C3:Fr)D"j%^Rh'<4G)ZKc4W_Ym2E.,S"U!aUe;1O(g+6D;MG:jqpN"UF0BM.qL&cmUl3
%L(So"=<gt3ZD/g',BLLM#Q^U!4Y@T8"US.F[mB2(_/2#e6*T/j!ih,$Z@*+d/f/#i:uu4.m1(%lT]+]m?$\e[#Ht>6qWDYZ]cI#-
%N>=W6`R+#&HF,20ou#/qVnFM[Z^IWD\R0rcdjH1_6Y:m<\e1XZ1d0PAXJ,9'fn\,^g3p1[\8X-kmN\SCXU6s]0RS;QJMm_A_b=L*
%1^7fI&&g./^U%]KM`2ICgf\Np=Dem)f"/4Pc/Ao1@=4aMh"3gPNJ<ZK<"#F.-OE?goo%17]L#bZ_2B#/MBp4XXFMH5G-\$glS9Uk
%HQZij)ZgP/(hL3E'+POtKB14M$rfT:(oH<cEYP291t>f3,TEZ`BA>XV$AV2G;k:W?i,gAXJhqN>*ap0e'GPlp>nZN'#&):NnA;HF
%L5)97Ob.BN=dO4ja<r$?M[6-IK#CSO_+<Q,_UO;;2ObU&kAd4S_"9E^b0Eq)U?Lr^!K.["f0i'8GAh#^oo%6d,Y@&`]:=d%V+9;b
%816EW6O>G[XV1Sjpl*%HraK!K<Qf1o\&4CT3eq5b_4:R)K/;Vr[&,m29d5r6Ps0gEMDAK[5sUPrb[SX]-]pcjipA"14=!oa>h^[*
%jOkLa;4UIq81c]jDEfS_o0fs:MI<*Y3kP'BWnK_&mV3t9_G?=TOWm,B;k^4K2^4(r;,mBOYbihWGJ[!.2'\h\p@(HU!WZnD#%\TA
%_CZ+c5TpDF&^"n!4MYN=*!jmkMa2fM5jYX%Uh)iuJIn782Wc-O.o\aMNh8!f7o9C!TBJ7aY`,522u8dPSDkGJpuK`WL7^Xk',1HC
%jNAT4J=m/]!rB.<?Gq@Xh\?h._O/#n63Q$tG!$Gq,bmtdHt&WaoK<[A\@F`HA6!nHA"W7R:f8oXYqG?'c$i)TP;LP0b_'hOQFVfV
%@`@J]+LrBC_.J#Kfd)JE%[B!+>Z?\JS^j8uY_OY$>p@TclH"B]k%#$JM1Ll3Ph1&i0X--mp8Nn[*Fiis89\8Hj<=(D=mM.qP/INA
%N,$EZN^V3]Oat\Qn_tqG5cZVWIEg%i;pu'VWHS,u.b]_.TWs*4fe8JH@iK*n+u!'IrH$-(i#9^\=buV3GlY:N$'M?f1jKPC/;9u.
%"k4rn3(Cg5Ob"R%jlnK;)NULW5frO=3YVZio7A(u*XIqr3IqPhP=LBKeqT+c?msZcHf"WT-m.p=83iD3E7nVCa5F.`]h;0tdBJlX
%=DG/`*';j@U1afN=Wi=5e8lC9OtJ5Z#6J`Fi0DGqS90lGUnQ@a?Eljm(eE2Sd7+*\DBM4h][nJ#/0<TtAAoQ:>p3!aWQ5_ucY8<Y
%iKX[F<Ai/_dPfHl`sbQ0(.QEfZD)'/@fh%s5kL"l?mc$Y0"M#h^S#!sfgLp%JcVu/&uSWm"N@MS+b`<R>*fAi#7qZO]$5;PPRUi#
%(&Qno<HfJrf4@5k""(oe2jI7,72N,<Ma>]qOhc+%5/OIdP9?5I&'.6n6>dQc8+%d`8!8B^,An!MbUjhGS(JsU@1ZU!J&iN8nMCa;
%#_9l^CBP8r,5]@KL:?K.#3'IECdtMo+6'lGXOs#d+=%0',U_=a(-M%goTK@b?nto@df`n4^_Lh?>^8cD_)bBA&6a`(?F,VT8\mYG
%6'I/Q_97VZU+:eiQ$QbL2U*KZT*PGJ8jVH()P]Po</h$#)U]df!!/YW8;@Z^?M&lDk<+/t!5esD56J`s%;FhoTVlf!+\&13C.hI)
%-(]DY5sZ@S76Bu_'o@Y!];K?+n/2<BNduXU_-2l3/W"/T$Uj<\&38J42?S^uX/'Yd>0ndWf'NPC3h$SCC5)&E"%Vc3"&sD*NGC"X
%(pO-S*Q;>.j97;OLoS]+%!9p%>^<Zlp5$R>TZ8i.0S7+LWlXl@-%tWj%gXo%@7O]V(^*YJaR[&te<]JUH-\JYkmI&':Ji7$]^G.)
%K7p1J<sT,;+U`Brh1;>8>B+`>.@LOHKABhL7iGtn26(b%Op+'r#E%XtZo74sne)oJ]diNW+3n9IV!GdYT\K'#?>6^3`-'daK\V&i
%HU&,-NIrJXm,3&C"X+',=S<?mJr'L?6O\uM9T3=W4^8J)G@s%t^OZj%6QMQTB\N`.gBJo#B]kjI9T1l7aJ,C:<)mbrm"![kK+?X2
%SVpH%Yag$n[p__G;cIbBY$2UOYH-=+A8j:h[XAt9o[QCq&f%(SkQh8J+s,%&7ta9)oPb$1m#l+.3PtjMT!;[Y$3mIs0%3#-)3bF.
%cBj;B8:g0q@Kn1^AD;=E9OD)$$rMKMM`mBucn[45YmNIR-l)l&7KgaJGqmBgI5/C%)s0W@CsKE4NR.g\4u6MXn?[Pgo)`Y'&KDRB
%2Fj<P<k#E1pp<Ac+=FEmEB!^pW)DQJ$P`P)QmuX+6&7p\e7I?FJXY>N"4U2@AN2Z'?>tiK!&UWU"GdLK0ibG>jn;scUJc'nBnd]2
%4*f#$$_6`4'[UGpQpW,$oFSnK:DB<3)3l&9oZXi[LbCZ].)bZ7D9n6=Rc[s$mfDN%8!FanLZ:MU&IW_>(2AVR:F948QDRH4WdZ'8
%D*alfb&4SNqt7cs9_#)V\9<^;!Y@QBdF']EV0r$*JTQu!L@JgSg7asq^I/;U]I_k4N.2hsfiY2ja.GQbK@VJ>S56($BE]3-D?,;B
%#*0QKC`0LAqKO5WBP92NlPQUe6H!P+_-K0mG$h&d^'G=!&L.&q7^O$:(YHHD8IX*+'i2^A?PE_O&9WlkT:q[2%l-rML@o:Ce$R?l
%c$HYD$;SPc!T?(G:XJV6P\:d4!_(dK;F!k`W[aa.3>=Q4BM!%m'/b?9cq0>7]aUCNA^SW;OVMLMGEY6GE7#%-;>QYCr_E,_TMrNm
%Uf1j9LTJ#r:A<5tW.pM#,KjsX'G#01$PXn26?\Ri_LPDS<];ZdD1J6-T_SZg78'QBTFUjkUF;H'<;lKjobpS0Kmq@lfPiCDm%*1W
%Xu>c4S_RGKFPuWY`ZqP:#'n2nH>qPLVmXc$R5K'/C3%MB'(Rf)guQQ4S6;hU@>\c8Q]$%7)aNL9r9Y3-6Z14FF(r6R5_QU.#=)H\
%rt#?24[f&68cLOnn3$[lII-n#rU7HdmX\cL[\$PNOS%3V[JJ>jre2Vfls2ms1sO9OKfL.[b%q9(i/-Q[REa9_NI%L'.[2IIr<T?*
%DVH_o3)YE[M$G_MQT5^cD7+3rGP\KYVmWVZ.Mk6B2=!>)pIZY/;-@ejKb5BW!WZ$]mH[fX%['u3G=b)i2-_6hZugSA2K*GQkIBQm
%\1%Uu<mYn-DO^edj^qT<Ail6[CrNE>HLRXj%2a_a">LAm9\3Pad66qn7]p&JFis)"'"jM(8L2YbmtGgX,_!(2brr=Hb9c^g%kL-G
%,81Qa,;0X!LF/rUpSq6[T[&Xg(e(7&<>/T+f\49pmYe2Q7e&KB'%')b7H0J>LaXE&/S_qkW@7BbgT!@s&<ten/P/C(IQ(G-dDT.J
%4AGbmCFq9lM6Tg7omRcooN3ECM>2T=YfJqQ5_-mu>=IcmBIVKYH*k)])a%6h`(CQDQ%i/bL<!-VM4mZQF^h<DbtoWh/Eja&[Qf%;
%79S"T-7^J^$#c4LkZGj3+rbq)!I'Bk*XXtl7,G;5)!St0-UrF^]P1MJ77"aj=;)-aDBn"7:!:J)#"P+!lGPq8#.g.P`m:mV]7K\I
%O6iHE8!pek]ih\1X_Gu]VUEs\V:*2liUpg:H54+HJo$60&W:gOb(jL#7_)f]@:"Yp+=SL_lT<6tlEn.DoI_MY(M0K-bJYIH/\(o7
%MceIK]Y,/VW&rD9iR'UNS+)T\CH-\UAQ@6J00"t[;5=0K6ZH#8F,8%8L!K;QcaY:-[1f(!n@cBW9rloAS)m-7e5WZrp,6Augdqft
%Cl1t8V<bfAV&.7p$rPNA(n'>;1'=)s#A5B*;3_bM_4$4m!&m!)p3kLeXHooHMJFU'U*flDVsds\/%7_uSN<!IJ^.%A@$'(`)K9`Z
%>ckr?B(jO?>VRa0]58-H<]9g=q:&\.^\Idbk/,hn`'*RKj2Y2X@@Wdt]j5M[oQFS;6bn5)A_gYBlfWP2*raKWkA:>P=dN+u6i+uY
%>m,I:EYBE';Il,.\),nhK^'S6$ga?06Ctju4ou;hMMbnBq.@<;!X3NC&T9IXP%NGuPc[R".10frSYems\n?>?_/EL'YkL/a=dfgA
%Da<3:M!SH)/!s,t9d1#<FCTeQ\P7,]rn0Z%#>2$tXUSRTL]>RrJ:4M+i1*"r^mQ`WNI'@ZaCH#iAdjl&C,?m,4eFD3bt=C9aiekE
%IBd*md^hPZ"&"VoRV(#i@B[*2U'7D">_u?XDUg6k,2<C.J&$nKBnL2g%5>]%Ej\hS&*e,+!\cT1eQT"^2Q^0Q)7S-IQ_:k;[(mB/
%U"cN`J9!nIS^O6g1:Z7>KfBYu>#m4m@??rG2"/rZ`LV=Q%;>'u7U3;>Pn#)G*L*`qQPDX]m9/*/DpP.O*s<*k.npDdTThh/b0>Lk
%QlG-Z\a@&q8!S2<_+`rNB@`ZAX]:FD&:&rncmgVNS*aFWgSB1:$Z=G@MH-_5BlJb5HH;icP(GdEk0UKua,?m"Z<H"CG[c6`Y$3$'
%*CdJ"'p^rK#)lUO.eKF!5i3@%g/c8LZ8f'ocA6h(]jBRLp/%g:g[g^,L0;')2*."'8.T_-)taD>QPl=D_JLo,.6"aUFY70bB8Cg'
%gnr!(+t?p#,@BD0OH(o+ZkY@]Cm>2FIq2LtaJuY"CgehN0f*I6J0tVc"n\4j,40foSq1$aCa.Z',nKmGB6c6a)!R@`$rLrtkSaQA
%R7fK)(:c!?`(1X5\g\86LjIc`65N[4To-l*>h1$!Sat^GgBBAbVQus:RYFQdl.n/Hb_?i6BkoN."qD1t#FhAd\CH=:[$n+$<jQ'a
%RMDIVmo&0Y9RP1P[C0"(#iU;4Bq\S/F@m=eRV4[5;A.Cdp&tisB%:]&/:+PqNVr0aWP*`%6427S9UlI]ogO\.;=Fs^]hu&oFGWgX
%=)G=:jfD(.Os,"JK?&J`Cb4.qAuOC=Y/3<Pem#pYD^ST1-V/P\KS;!%LSObcZ:tTVVphg?I8pqo27]o*=t$.leIm)XQqF3okc:/Z
%]@IZWM=sqB%[H6a[<T;a>f&a8h+@<FN:N[ZRI;s^?lI`7;^H3r!uAp4Kt3po&(/:ed:>\)=8,>]G[:YgI8i??2]/GC?=QjLfX%<X
%gPYQ>.nY@)O(:hll#u6le]u0H]n.:p,mC3h#i(mB:QN6<4su<.D,1;ig<rS0iF-L]>rLHmP$&4^10`sc\HY?."DqtkS$hgfIU4c'
%b?eQ,k?QOVc[p5LK*F-dehl:VgiZX!f&n.u%@cj8BUkQne(LQ<i]SH7ctsmbX^mkpdriE+Xi_rr%1Su`X+FI&_?FWGLsdEJ<c]GQ
%.EgS_JUBH,FGNGe1>\`3;)/CHW#7pba/t#nW`$!&>RRb)daF$@GfqTkD)X#Y?B1U@?UlijgoF8^h7G4]d632]"?F`)Gt&0b1(/e2
%V*]q=]IDpJ_qg\#DaXF:E4lYugn6!sF\F'>gnOJ[@QZ:.A;fcS&G0INEN*7O&$3)0G.V(?#T*[Re@0uKqA+k<\%$#7e'l]N>?\ZH
%\0Dt)(uSJrPo:@(JPJ/I)kFDn'!.`G%[qf\Kdg*Y/ltY>bJ+HODkfO6f3t/;XL6WOR*F2B7S;==:RGS+2d-dsCT]+oHdhQb*-kS%
%PjoZR&;O3";D<0&HATHj[eP:Yna;79_8I:Jcq;!]K2uYp&4qfJVbl`N&OL\2`#J"tROM][7\%jHpu(mb'[An!D\c1&i=L#tB<fp;
%fk(N6hgp[Kfp7I1bg;eA(n15_H5Lr1*?)Bc*%b0.D*AsAq&TQ0hEh8,OVrKP]m&:/%I.1gO*eMo*tkV;,DZ]aPGVutBR2Q^1o^-G
%K"]6OMAD7_O_0q"$M"nFpOI,8/)i9SgL_8J#>L[$Rmp;aJ`BlIatG]s>NK$>)M=<0`gOVCEjab<(9K,k;qa0_GuOjab:@Z*F@2uc
%4#b=tX(uFQ@'IV*636kCgE$FNAol.1doAX);TBVb"tL^j[044AdAYT^d$gE:Y8W%%h?lUn),oQ!I)XKbC4F`6LQ,>cn#6PQajOiR
%qOFk/6!R3*XZ+tqCAE/!Pousr:sdhK45$QSR[GYLG4CMJ>C9O$lnO)mFi,[\jDlcq3gsMeOVt)R,.'7soe!P':js%<:/C\Zn\][a
%)2GhOigm?0U._qc_$M\\eZm]fe"PtqeS:R"ZYf+tB8eutAt5`k`mRGUZjiI8T6fuET"n8:d,*S)X&SLdR9[l2SqI,1i9"'@]4Ppf
%Ca*i#mcG=+jVlEAXLH>IY$UQ$74tpn.oV\cJO[c*B^7[2[[u=AA9PErA&J\>3BLaAH=Y#@+h)f,2hr*4?1t0pC5Tb38P>Vf75?<u
%SkMa?d.jo[c[<XdB+@a*bH-"JdCl&9\0>&8lpP>gIKFg%%<_5R?)p1oXJT]`Bq7@)'NqfjBVrn+6U36U@]agm0%O^#HBs4><D\_`
%UE@&uUn&kHr>kAYTBKuLWZ9<X8QVufIpSnb""!M7L>,d8P'WfJlPieZo%#,rBo1Sh`oW]O-PdX(q!0_H.d6i-h:lZ;6Yj<jkfmri
%/ln2'KqY<].)bI->T!K;)4Q,9RBRcRiGMj=Za\('X$4-phZ3]AIKW`0oh*3?@d>mG>mH:LiHKf8BEQ*a?0l9RF0fF<,da`#B=W`,
%S15AU3[:MUW1G6a@=?2c@a.fWjjfhSl2V^M"1L\&Y8@jGCMC2&2epoYln^,B2@75qXlp1"<u]IdIC6nKE[5Z5^D2?8Q5EL.&@Lkh
%R&;>WVV^Ng'+3>1X_t9#&uA@,'#f1k&h#3O%(EsbP/V_V1ql\IU3[NUPUUTMQnl(b>e,,M?)61!Y$i#,Wc&GKB;IDCqbFs:HS%).
%phs/VdLEE:jk=<*jqTC@<fj)6:pr7HmI#RbHItU5MTo&1hF'#O$;:Bl\*S?")u(ku*Yc)Ra%"mOW;,,eIT"89,JcQ]V71deK'lX_
%L/Uq,,E'!fB#TX7n4=-+[Yg&:nQ@daKaSW2X_skg$FS%lcf8Wbm-*"Jb^Zesl,g>>1i@mPDV(B(]8@SG)!%iZ*g*<*e"RI99;8^G
%.j:gNSLqH]-;sr?R$#<'RpE->0!g+l%c`oXZaEYJ=3[<BnagE5B!\BiBJRp(Ftk^*Z(]:n9lUR^7$eZCDQMS.UNF*uQOj6k<i`l5
%@sb4FU90m/SQ>c]BR2h$+<-F(`fF$;mfA>&9Hc?1m<#>E=PFZP]/'h'CiqYIC,jF92/CBO]B`$cQqEW5F0k;VJ.KQ+;+;-jpD,8G
%&Z:P2087R,V66u-!%nOuA'N+Q#WJ;NY-i,4XJWrJ&6]K&AW07td4!5l^4KP@PQIG.pR+2=EF<.YAi&^<a`&V]8UqS@Ln\*^32?E6
%*oR,5>8F9c]$7WR8Vq_Mf=Y2Z4Q0BN*Uo:('hT#5:<Uf3M`A?'o3;9E2A[s3A8"[i,2_5jqD6:sm"tltdquoE\CqP/R'<&[!5s@$
%Lq1iDL9\^g9.H2JK@pB'[b7tO:%toYB`ARQQ!bK=]#R[H,^jEr/KNBjekWaV5$i(R-:JVmp_[A@D_-G%bDn8F\-R^V+9-KWH3H7P
%LCW`7I=8(t/(m]jqh:TG7'tMh)IYmlCZ.e!"1>dY&_ZB[0iBSmCOJF+m0N,pc"u1l#04c57j78T+Npi-3&p;r)>92ufkd&`G%NV@
%Yb3Ll&FL/pK4Q6l9$ML;Q-7kRe=?s`V#9TM-0&7HS7nM?Y&5kO01tE1VGb[nHtlQnFT(4PjbmuN>ZeT3>[P4ofe,tD0/fCdJ"B8,
%5Kp$'VbW8K;H&q&!3NCTc7M8)05)[Y?>NqP&E(`g-Mi!4UYXh-^mBmnn7PFecX+!@8WP4-;$#e<Xo"0WiQK?,pugGMikf:!o,Rat
%Q1T,NUS#`*n;UM,B@5$LrgD0;8IbGM2274-PgNPRD8NdHoB>?HBP.6S3cbLSS3j'lY0To1>a=7%RB*:_>cukn0oLM?Xt'8>opHSC
%R1\rE6I'=07R(gcT/1O!00Ggm?VL6)-s:P:UPXI5C(0<qW`7dUL"thho?YrgeAh4;`XRBun5?ua8P=spT9?Ld1Fnk4O'<9O\a1aW
%pcWbLDWA[g]D9^8QR;9)3mn,S29\i&d,P]tSJb4?MtmNj8^*g:H^9/+9=Y!!q./MRo:i6k/oR^JB(!;UcD>-YZeO"<Vs0R6Fn?1c
%BJbB$2shbN[IX_+13ZMNJNMn%LtAQV0b@=ipgkT@jHTrMh^R$k@qX1#/[*'_L$NW32(UT;CTB,Sd_2\q@6T&$Q0Xk(V3`R9F0jm^
%ma5![lg]VVq$T:Ik9fM1Vrk>[e;)_JZ_]Go+5\M[)2WC]/gGX/Ql-[(-?gMDWqEJhiMFE.ZDq4[hTD,0?TNO[DJ;tXq"WsFG'\&2
%E)i/uFGeD:cgG&POue#bh:-6neLmK=XIct)bE]P/k_pC]HLF0]Dm`p&k$H^lA1sOfqIjO8b3!D@X54S/qYIO?DP;2eH#A7!e&bk*
%1VO1Uq<2pD`jg1N^JJ)n$0\[[M\R[F;'n1XD76i$AX^RAiUi.M+">@b[EHqj@Qh'O8St*FcAA%^)50'3qI8mR7Rj"AO6&<5mRd6@
%daA=!^tL%0*"2B0eG-C)P8X[m+uNE4oI-!Ihj-QQS%2M`ji_MjdkQ3bVGH"i92/c!H^m->ei8A;SW#08Z*ef@55I-CR&]KMF7o6#
%jn-OCoTkMTboe0*9r>oWn"3=6T?1G7SIeS8Ua@qFilUf8$IXNiBDMAQeB=,hWTgtDHKs"FF6V3=CLc&IR9L2>V.T/?4\DP0Au8M5
%>NPH*^:J>:-+#KZ-&oB0Unl:125O!\F?-1h)1RarK_8qL^UPPcN.QF+FnTG460_\e^O\1`Ie'q5\o?X!EpDajkI4>*CVo=8p?\c+
%.X-)a4Z,1O4HV+p4MI2o1srh">$,[$Vln6c19!]`@Qel,jjV\XPt?*AF_r@%:9?-"af1d-g<J-LcD.Yo>5cZMlBV&6gSgNeCH&ZN
%K56a!WJ<Es1T?@<f2knI[Dn'QB'I0AC:eAl;`g3@V,[-SS]@`+EdBqB\9RmjWdR@L1mV<!4(I<1m*aNsG'n=HC4#@1f]h27r7F\Y
%io(`hA=aa(KV^.T1T!8qH[/<"H?*cegtCDpYmVr(Qc:X9mlVZ7D-pWj.m1<cO"K-oW/N=b]<j]/>[!<2Y#hdV`br5'h&*cA"/:.1
%b1PACC2/05UC'_6Sm)cHau9>eFhD^DXKeKQTOun*DlVi-X3D=<POcoOj4!+LgZ()jlD8Jd\tb<:PLA]8]kY!q?[?s7F8Y%j8$@m7
%Y?kNV^U2-"`YWR^S0)+KG>0-nn`]nppmps>PN2Cs`n7f3@Q)9/Xju_3,Oro$BP+o#4h!T2R`oT=(gDH7o>Ja,\ZHOC+3\Yqi6P\S
%F@&RTXI_-6XZo!hiCY>;,*s*@T"$%WAkjnJ^9*p8I\q8e`9m3Mq%NL7DloN`c]6mGZ+4sfqo$dt<p)lG4eJ<:Sa2f$AgSkVXtEJ>
%m[UpK+^?m?'5BUMHK(d%P8>ROr9!:_r:[PcM5;`cV^GNQoYlYKA*p[\#F1k#';\31FlLgF_j-(uB!FCb.[fkgadpkfan0,O0e$mJ
%k9eNX#^7XLQ8;IdbiHE_lcS;:g.lMU`oNQZPHS5\hj?7rZ95[/.<d.Tq:k/UcHPqJPEW-'1FHh:fsR%7Xo%@HkH:AfG;=NA/tZBN
%?7h^Q\Td#oPIJ_6NKXl6gIinQeN9[)<YlS':UYI"^5T/PaU@91;s@"dD+Z\8ZW$$/l0YI\_R[(R-*WM12eoCW;to^J`Mq;I`o9rD
%bH"S/m$4j?P?FqG4e"OH19E,\?C63;5q>)]s#Ao)?:jUMVUmH`DGNKuVli^[0AJh;9L#]Db,L6qj3spSPBY&CWV?"F:VD-IhDo^M
%3anSj2H_t7h5OTh:4[>.n'k,.rnUN?qYK$se'hOq:Q'OIrUdWn@iM?;&,FK!=3oqXVf+5j2,B]OXbkMfQLsh6p=OKsRQ3135+Xn^
%()F'EH"j.)pWQmC:d23jClP'tF+6V>;g^"<SZ-Mngn#Cah:S-`RCI3^7QW\qRE8]^I!b!JA[=RA9=ZFp4M5lbBkA`@I=%itoa7<T
%S\;Y"<[TgUl&4:*e4f_]Xf:(>>Dk/*8=N[u?:n9Of.++:Q_g$\B<GV!R+4jib&"5%l+u`WfsWa7b0A*?AjIE%fuGTR2Ya8NbY,Tj
%F*ram=YU<^jn?hVIqpQaS):_&.=;RC(+'fo(82U3\2lc'S6qiD()BSm8[qpT6t&I(eV2_RQ!<7dj)RU'c_!<O?Du1M`%/A'GJpmf
%l$9OEX_QkU`UT/?FFLVEWUf[K.Ao;@.BR::bL1h!`'rq<ig)3Xh-T6;)0rZ]4"[(S8Xkqth`3hHYFR`%QE<4r>&m7sd8Ea.S8'Ro
%D/Dt7cfHL<S$U;e8o\I$=!!toV5^@fARAJ\iSc)jOI]ZWDd6XT=#VU-(%nhOB2Ug6:KB>_\l:pNh#)dTCYGluif7&Sek^"^&t3X&
%rdXY@X"1>!=W<(`pDEiNON.[PoU14@Kp)NDiFP<"&6>1ddl60&s5JmVS5hhJ,o*J)mr=A2^LOr*C.?pun/46u&r0i-3fVVK@lAcS
%)1!+nVanM"#IC0dl0[a0C$bB\BptOH)c#;!+4A8l_u55$q]Fu*#H."I,PLfijl"2H^!jgr`TIoac-XAm_il6*rc2ae@cGN*d,N!q
%RA$aJ2c#/\euP(pWr%>d*Zb9p5Q#tKoC_U!r6dD!A*;=Mk>,H4*.L0#]@HNNh>6!jo<m\8e'ChI3&B"_Er'V5q8C;)Oa#9fY=I/-
%]`e_$SF3"5Ie!'ppq_lNG@t8ibb!+mJ$D2f5Omb"F?PUIRsk*KZk:NGd=q!YpI;WP%Sdu;<kf\4bkgN$`oP^kh8[V*b"h!oPP)Vo
%-c62Ha3rc)dFe)*FZ-Zhp@?&Pl.KYjFYc5NY1JUkoZYDO_SsK`nXYZ+b7bCN>]*8hfluTmDe94Y-GHYL2'u)5]j7"Qp3:+tE\-qX
%9J1b(f9k@^4o./2AEE^aeBkP82"bb`?tj@cp>Z#3]tp<'0AY*eqXSdT4*:)bl_D_607WWeS@trNo_>JDpLa`753u"(]K5=@gjS"n
%3'HiDdF7^cp!W$Jn^l[IbHj,jQhoO-OmNC%D\a,_^:r9)hB&*QT)F%#rVY.0nh_4<M4!K*`CtJ<q`+1p9qu+RbefQ5n''YZkO3>9
%e@jtQ,Pu!2D\nc6p"SqF6hfI1L#'Fd%6s[ah26RKmbQ:[Q\jCH[o5Z#'<@CirI"XNJ+gqD_3=V>DuINLf.XjC^0eKS]pQG+Fm!ct
%:7^14Rn__"W11>g52S0RrTnqis2'-oo?6[WMts,l95bT;D*M?1Gkl0)@psMgkB-7Nr@`SWEUh$;iqpR[fu;d*SW0K&c/f1'A"TY(
%QTd![c7PS=%NR+4e`U]CmG>q=jdjGUhcG-D(+aU7db*AY>58jSh-W1s)4CE\?[_nP@CE@dkeli)gWbe-h]@N5'47(a5(<I3j/77i
%q`CDSpL[`Z>3m=nq/eIH1\4c:SG.K(2S6#^[oPFW^@XPF]_?"8dJg$s?T(YL^>A`Jn<gf_3qR</j6P.K_T^Vq`P\opfDU?PfmB?7
%<qeuMdb;LbdcB-JDAC_\5OA&kl`mWH^Ps>9K5[f_0/hE(^>AXjraKtpAc:*Aqh=^dfC.l\L?@C.hcS`=I_TmR].q&<hd%d32k(3<
%lLX/[o]u0%hnT&:CMpI>gH&O;gp:kT<,VU3o1rlNLZ:bn46G(Sc(3OQ&!o?_4/6E>B_-OoG2_uFm_S_@]fe/q4LFk^g!TBIiPF4#
%^AZJ9Zp2#Vpj)o7h$b"Hn,E:JlgG3gqMr:^m_4.!O<,K]*@suC_SQ'Be+LW;aglZknPX3Gh>_FNE\ohiE-/IeVqrCXktY$7-_I=j
%a.(DTk9p4:i8WhB/$j9%[kTXcWiOeXVsbGQ^7Ckfh0VNFr.s6"glI`PlhA`nR=Xb3d=JLEB5>3>ja#1ISb2q$Bt=r2=LJm5^@Y'9
%S*nTSD\R<$PT[Y<:`[H"5;BPmFkBMhiqO].%[c]\%eo:V:jYDPg]2$HmE+n?k2+e5dItN#^Q.Eqjpg36>DMB[PV9X[$9Wi:-a.*L
%:b7[YApjPV9'5MZs3)3`)L?\;rpTBS-[G,P2KO5cBe/IEVZ3u/3?S1MDRI2ijdN^(I^r9KA)jA.d/P*_lC`&<qqi7_oR=.;g.rOM
%g5'Zi10qfrC#P6K8)YqOUX4*uYZC^eVACjDcF5I(:6%!i&NoodIWB_gJ%$E1T-KFH:.2[BmBHS+=?4K@Z)'/;YE1VBD>dpjEUWI3
%j*6"PnGF(\ptAkag#&D2n@doG]Nm``=M/q2jsOfV9rXGn4>T\]C8JXOVYAXjh%Jd#Ll5pC8!qatCKcjDIsF9piUUe6MtL!WN:%V$
%/ITVKZZNq+X1d.(F)RCOdMu-=Z:hZMcpF=*Uqs7)[N"e5PEYihMqZh@frkJa59"HO8-jF1?QX:B85`TV\gltuX>q<6e'm^!+>q?#
%QfCQME+X@U@m?$dfB8&oo]p*1:A<`hM7tV%"C2gjgKcg2Y3WaM]DC.9p2S]peB(lYmXfuU@D&=/YV*51NZY+E4EXQRe/dIFAJa.@
%\_pb-ptmHc?)JsD]2"Bu[RK-F0Vm*%]T'.F/9kGPZFR`.3j'D]VFBd]3'fp$gKj]HK"Tr_\1W%+7R^ZfF"WT1$F/c\RsQ"Alf/9]
%m5GuJSo]Cgfp=P\PF^idp<U?'Nt5(6IGbmsWJ0h#ch:07.MR/^JEHkU$_Vl@63<,,r0J@/4Ln>Cp==0&r[PR+Q0.h%IhnHSAI`Ec
%/))#dqqM/IKs(l^r"X@TLmQ-7YH[rj"g`Zt$l1JHO11Q8H%5O%k##ACmfqhI's4gIH$6KuIPJ2.n*RHrR.Xf&<Vls<T+qu^\'W4"
%eRuTB)rfJM2?-,akr"HTI[=gP/[D*f4MR`tc@h]3X+RA6?RMXeeE>oen6-@jmpV7TAb*[>W%I#Kre/4YQ;r9+bl1Sj#51j"qk)8Z
%4-QhD?a=G2/(q/sg>Mmo5coGhqtP6inB1>M6gGijhjDHj:WGrN?68JCmN1841Nfn9qoSX4qS;no^[u9h58YAGH9(QI^)3C9o&T3%
%g#Zh5Rac99,A$7pW]HdI5-`jL4WGJG*U"LamQWiV4eL<OW122.R<rT.X#Ci)]<C@/7YgC)_YF-%Oj/`6JLA&gqO6+680*GAWCMU"
%e'!Z+mpF-%Vl0KQUQ_,;`p8>:]tP*Yi,WSL5$T!&Ie[H-\s_3MhJBQ9m9rOI@<q;4QcA%[_"-m+[XL11F`dCdlKdZlq7okb7/s%*
%WU?*W44F_Cf@2`WO!]%aXou]!4q-k<m9P\>Khq!VML9b5Z)M>aN"3UIZ6Bb*T[1Y[G?7T(YK&j=]=U#q1k'r,=Es]#=9e;(II!'-
%8`./W2CCH>>ke#b>oO]"4>Mup`npB<6dT^bC4,oaG@^NoK>!u'c1M2:[GNpR1UAH7X6SAa388rXD/b!tc.:P+UDH^tT(RNBCs4Fm
%rdbCJN"3PS6a5/Q/UndX*,e#$l?iMRkZKnAnpLI0!-(ic9l<_=3FAYK$W"4KMQ+#gpW&o.djD-)cb#hCDiYonpI?uoO#)hda'T?A
%=IJMO%WT7?f:W"oOYD6ig,H[Wom'AP4S[(dNZ:9X.?4,Z#M>?gI`9VRA#Vr;%XS'%9VBR51R7h5i9eIhp#3qip\I(ETc9%7<k/tE
%KY"-@m_?4.O1paUiV_<sb2fpW5MeX#9j6!fokU;[%oqN.aCN&WGd7-.2mi.'G\HF?]2d_4HGn=im$K<ZcrX^ql61Ol%RG5%T>t$f
%Q=94<fYe[]2r_L$J+DJU)iGBeq^-KX:&gSc?[qWcb\o&WV>$$7/2_%[a50VY/F<BRrUG#L(Em)]EH+\goTS2/1qBL[QH/?I`pD3n
%pQ`/VrU9a=d*C%6h5Tq8?:AWhnh#OjXcm@PET+scFCTKkGC""uB5:[OVl[9G!Kb+9l+gQ]MrjUR18PR)f11T30CCb7hcsFCSD:Nk
%D-;_$)'@/lQ)5>\"O2rOO?32Old;m72Z.$YReedSQk"kc%8T\0NV)r=NLclqlhbgIEEbB2Cke%tMnS^T?73soFfF6A]PO[_;+rpd
%IA]HiVRguK#9).^i[<RRE-58PEcjhKja>dRl@+-71VW&8%jq0c#,[j]9'>-m#rA')aXn(h.%RN9a#(=34la/$PNQ@fF(r?#53\?u
%qsaU8iUW8Rn%YB?g:rd(D+cqBSfXeI)N/OCqM<g`Uku@ENsG'lbFc4jp[VhHTu/[c/,do1]h(C(n#(Kg*tD">\50\SjQ/>5bL2n!
%c"hB5C3%1F1&l?=R<d,/HF;PS]hU]eG1o%OrF5)+m-o8qUp7H(i?>T`h,cOS3n]#R:/=$%)Ep+BGP7U>g=OAT^2IU:Zd'VfSTl(A
%ae#`TalO&:$:h!8VS=aPWR9Pb+2I?[9l/IqQ,_7Ic1A!n4`8IsIQi_J&"a=fGAG>)FOU0Gj@qKoG0kZK5;i@:FgnUO:\29cXij&:
%V1j&mC?'??qtZ;<VW>;].gW``,4*_X[hiq0&ARlI]ft<srk8-CNN(+=c]*WsDoVCPWUXhIpso->II_6Cpqb271%jdOXg)iUBUcd-
%a5CY73>t'8*.0;Aep:/bI2m\j4+813GBUUK`p-I>4MLQ/&u7[n?B3?jiieL0btI`Bg>3ZoU&)CA?du<B-3eVAr05%mk8=!R3+MMD
%rPFMb_lqAi^%<ugfU0%s(k+L\gs_+*^%U]4&t]U(a7q$6FnGaTnC>-_6dcE)]\:A=4oCE\@u*@cE8L2Rl3TCo,RC2TVD;cm/%gB)
%FqLr%DQVS$[rHh]b+Ps4b5\Qt>:A=Wk_q?O%sT9OR]FQfo)N>FO*?BAl:"h5-*=cs^:&G4JZHE5Aq)npN,(LP\e-3h=0ln<#VX`Y
%'m\*rCAsE$X1Ni6Ae:a)B/B,1gEM:4^Zm/Bf;nocg41<UNBD*T%=C9:c`9VjD:a\q!(#LIYNIZH5!`aKSi:;AO([4Lla7sAYMo)c
%B\-k=b;+=MN>GZO1L>8WUj]@Hrj[7M5g[b-]<\gh:#b:'Yo&HY7qS\@iqo1(#c[A*KaVk3^VAPg-Q6<6?:\tE:g,quaHN[NkjK+Y
%CeK2B1@+!ucMOPdB)++5!_e9&O8jU=WY>(a(71q[Vad:p09R?[UKchMC)iH0gmsl0p@dP)e@j]>Lc%jX((K3d6dfTo%RsM@/FAJd
%YHEj[DBA_#/@)BHa)Dj`D`;lDFcjBQ2KrQ2?+"p%W"Zd=HX;M'q#5E^Q_r-A@ZOM"7[K`hVt%IDq+h[Qdm(iUV_kijh3^EuQlTI7
%4ko`:k:7UQX53EQBefCc3a<VQqJGNYqQJ65pO";TFnp-"Z[_MuR.&X&>>.[I[]qp!h)kG4WH,6Fp#\"ef-Y9G?fGm[Fk<WrOSoLg
%3#tbbm"jA=UO`rAd%6gkHTV8(JUp+<,$j&R\r6+L$^M/N:j4a&I_g%Rl<m>b:GFjaXKPaIWs;?,-6<Ye]up5Vo]REu9cr5NZ%h"<
%Wb,30Y;8;nhC]SqX"P.8A,Zf-d'GGb2u:(/D!o^&$W`P/2+!e/C,K"YqFCJU^r5R-@D03l0KcRaGmbP2YJTkhb[P(*Bq!,7NiCB=
%F!S6J*3u@bhY5Uai8rUbhu1d-!HljJ%rMl"HZnE1_4tj.B61t0Ir*P?r>.+_mr,#O2e:fOD0P+X)eSk:Ai;:]$\tL*KYI=ND9fn`
%eY>e3;Dr/(Had_&%d[O^#P=pH#NL/<mL@U#f@C98Hl\jd%tG%H*PCba6fn9,XUiPsm"X&q"9&.(o7rdsX21p5_[9W@k)(JPa/4S=
%^C8VoKW3M*]apteO"YK8oqQUCKtdC*55Q>;k00="\bDjE4['q#b<ru@po#qADIFD0H21n1]?/6Do!f#3QQ,CoRF?`)Qfk^0B@j^I
%a7EL'Is9Mo9hh$SUM"4d96Tglap[WGW-U2j%0ka8[?JU;[kp9q3qd=4?B/$cJ*HmfQ$rG?g.4T[:[9)<m>lhsL0/5TrM+$"hn5EC
%mHM*u\lQlPlJFWLEA]s<[FTD;%s'V'_],YsUFUD6NsGFU(A:<<VXI4H/\Lq7X5haZM)T(\h_M%aUml^p,P#PsP-;7dCWBQS`a]d@
%m'HMgPAH\:b+Bd9QBC)BPI5Y@1VS@Qn(I[/o^dJ'B(F";[3gC>)pm%$gcZ;4jVSq7C8MO;P<frP_'593q=sr`1&Xsda^.0'I^_2>
%Fd2_1$$P2RF8eTc1&gHh#cFRJpI5A*@3FF8Q03%(qqL/u]Mu)k58u[(Qrhf$_D1@#e;a+rDCL%*>[)XKR>/J'DtM*&C3M8Hp1ik;
%*pat4U;][,+bOqc2kGHO^T,s@s8L4hIMUlu]250;b1kC!X7BLZ%DuduHZF7P@uW=2+n2(oT#o6kl:]$<V`A4?.oGqkgqS+g3rEIO
%n\jagrQetkq85I-Y4qm4@t(ZnL<%J-0>E7H"1<:&WkaF@H2_X>p#h`LBHZpE$1[<>Km(@pMiSr49W^I&r,H2$Q>GnA54"nde(rKt
%.Sl69Y^3SOk^Y'+h&k?r\?OS^=%d"Frd;#TfC-)h47(S`g=Y]So#$BD]'C6fk1tC`@V0?r"RQs0SmM6[ah@!4kEj)sNEYDK?h`s^
%SXmUq-Za2tfB[?K9mh?=gMV%5^2q@c*Vt*Qq9.*u>4)jg2MYnJI581Cg2k&Y\&!:#6i3)G-_D*X8Z*I7DX-Q2UPmtVq!NLRCi7VJ
%K6*2-DtcZ5H/V!#*.Ko]r8JWGjOhN+^!EKPs-T^T*rXK\2Wgm:!F"Fs]EQRMP;`:l5R2Gcqr^mB?4B[McFBa'S2YK]_7b\rKl8@!
%qtD0nU2N-J3$*?ndZ0E6Da8ZU-_%$umERN<QlV]e*ZZ.\D,ndNfS7".c^q",E9P\=pq$-9@OHSN2Yh(aipjE&:#F9g/<VWiqQY%G
%2qs6Z]1Oid(<-=OdMtF[lc&0*;AjcJ9fjgr#E?jE7S*-P:TdFYbah*l$eNJ[IJ$u_]^^,gC4(,IrmepLl?+=74(u#$Us]'fFF!EL
%qUG#Q7E]Y+00cs23k2K/3uUo@f%?8@VAli:H?m8]QJV*/l<HdX]@tEsbJUeZI3[_4/'+2%T8#P\]4He6:7fAB5=[R$rUK+BcJiD.
%j!4QJji"t4el09eetT_(Ihr"]WT3Lg\uF$CNs;)`@n.dTYAD%=_e4>NX5D'?DqihXGr9q/nS7apI%l+#C3$iIiM.]naH&R*Nb1f:
%9qn&f:ZCa!'.ZmHWgfBII7--Oij4K4`A=e)X.?#OU\O]`laN4AVX@0>Sip2hR+ODZ)e_UJM<*l<%t[.jVT*gdR-$+Qp'ij5!;EUo
%?;hA!I,D-744p$I3V$jQoT&"OF1]!\l+CnXBWCt&ed;i40AmTf-FS\2@7XYs2/U8m9OrI]H_NS@=s7JAjnHcr)Dbo`^Gm&N*]\Yq
%H74\p7"9&:CK\aD]`40;=gF5#pN1]k/46i0L;2`AY"n6#[R09YeBIIDVE:ZXT+:M#=g'34Yjcgnp>P'/`^s[<qj),5or$heD01t>
%<UC:1m5$"l(E_Q3V'C>@qX`S!FoZ9lI<@irH1ACAknd9>6sAKJaj#lZDIW7gl&YCTrs9B&0@]Xbj6.YA+,e:hp\`:62_>D*@d*.1
%@2OF6Q:;@?H:0)Hmj2)Vr8?%piNmj5XhK\%YBm4R_o'rAfBiDN8o#%#)j;5kn<6oO4u_`fLW8<L2I[R8&F?A7o-Z=1'E,7%[Yb-/
%E*3_KMS.nc*`$\1pKu%j\T]qh)<Y@4f0FetR\+#0H>)L*nRJlm^\amce4(s59Dj-WJ2\J(r'\pL>++`HIF:W$\GGi1hi5:Fo/Q]1
%\t0gRf/7\LpV&CDHoT[*Wh<^;D;k0jLpR"hr7to[`WE#UjSVqk1.ncGbj'KJ>gGoB0^kV#58YBc\o.=YC@1MY-\gjr8&L,<a[UZ'
%IXsc\e#Dao:RB,Pda@m;p>FsURe;&(CY'dqN``u*%fKjXq^UpECrD=^h%g=5m.\uaqC>GF:TC+ZbO)Y%N;02mi`QXY*Fi^(JX>DP
%8dhGR02,*"mLlcX>V9pm2&UbLN-Q^W-+kNB>1'.A%)4B\LjP2dFMfpr\TrIM9eQ($Wp$Vu)9Jf:m4isl[H3aA^+RIq@f4dOhWM$<
%0Z!1<%aUQnM<X9`qfU]i3Z@XtWV+;qUI/CT80\RbI?j7#Yt7XhdfG<aS^YUVTj,(EP1MpWT(dWB5;E,V&G87)4)N#D9+o&;:LS81
%nec8VKa6Ya-[)&q5MUbaA`&RHka`tTWV=H_nC2%sb*lD^CoX_;bgXkDc11dQht,67ItEjrBI$s*_nt!H0N@_oLT=4?*mqg+Xj+gN
%^#&X8m-puXI/2aMLL]&-Mm9/Z:Hj'5\oBb'mH`jThnE^_l033fU?0X5h=0\2(\[G8lXs!pB_Rk))oio0k;AmDdc@Dl@]A"C[rJ8#
%A^Y?q051k[4sCb$GM2mO;qaiRE@EFsQS0A<I\3=U+0AdfF(1u\XcUafXj.m9n@R-b7k1^ofTY:5M;J2DS&>1HVoK^\s#&MW]T:b8
%WNGihgK)(*:fdNA8]Mb(Cs5Yh6JQ_X,?@-<):RAhOql`DLXoO%E4L2Pg#Vlt;j6HVIrb5"h@f@MV]XZ@s334AIf>q,c-4\(>8s4"
%\JRAqh"3aIltoPEIQ2d>f>e*mFZ9"6klPe$Se+mdr&"6AA)&*2/*:OR$1+khmktq/c?oMNl1Gk=ab&q-lYBU.mBCK)(\*ugNPU81
%'4:Ju5%l+K\fj!38Hp3keqTS3h](Bt3q<&cI-$e8;!GMD&#Qq9a!16>rMTXYQ6j'#62*6tfS>IO-8u\f?'@uhl1u'XM-!pJkq:8G
%:Pmm\Ce:+2l`,GHE,tp3p\r2&MgOoj^3+qU3##^HhV?kbRKG+#YH8;JSp`Kb#<sbVctp.gZL16dQheXj$4^P/Im)<!QW?>c++3SN
%Qa2o^>3hZ*gR%-rp%?d:>!/G4*-jtI/Nl:GR$K'`5>8[>YbYuLYMdkO=D]VWD-gV7=7;'\3SEVbjUC5AeuN99bp7/J^-f<>'D_'B
%:$1"R>-]VF\6=6Xos:\X&*i>;fDiD[p@@]^s7C9BENN28?/aoAZbEC5d\_DSCUjb\s8QmW'&(Y)NOh0l35&@"k&gR3/s+aXSYQ/D
%K>[;=J^'M$%GE2,jq#cscZ[T_>Up*PqY6_!B)heg=tQC&4'hf,G!g,$$M0?k]/FrI<D]sVE4-=6Vp8YZ[B],TrF8SXrl>&;0)8jC
%s20=Rl;BZdC$4\%%a^W'J,E)$J)-rI\n6tJfkC!2]dU5ZH@hG[^0[S<A[^,-ID444C=MsfC['g#UXqa-E-_J2J)bMF.KYoDm2u@,
%FZ&Z\&-'LrBCVTDcO^'QYRZK3YRgcR^Y[=Eh[0"[/ld&-mJ?aglIu(>rA[R\<)oqk?<fSga8aXBapDUU'bUWl#Zq"&^>6>BmB-Q&
%fCoLTBn%eeO*@ci703/lSW&99p!`<E_,osC>DLsGXmbE/B^59\5M$G?\#qSd2bnjsDCb[9CK?(?W\B7D`#Cp$45N05$W_EK5!n"B
%kL[3:0@-+ps6bhpYF!OHU,s?ariNI(H7uC11EDM#r79NEoi$59CV5,oYPl''Ek,P#mBbEbq^@prGI`_8D07o<[H@Ro+g&*c&\Mtf
%%67#U`hlA;[5G[XCPO!)a"F<AR%jQDf,sS8/^O?#qsIJMFhaUhkP5#Pg%s+l/O*V(DO2sTY8X&TK*JN^##qU]A\L'1S<)OR+/ql;
%ZLgX\1hG"WcWT70b'W,@Zjm20F:GH4B?bs%-FAAqXTiU!O^Z`FX[\X5@3@OmquTfO38>jS)a0:]<ru<m"4=\4VrN<8!XStc-r6KC
%aIs_XUc&4@^c!lNAT4sQV$]$c!EFl'"g!RiX&>[H]OPcC##b"0C'+YHCf_@=$;ND$)O3TgF>@_B;T6R^5N#M:09$i'<D[u%Oo?\0
%*8pM7kU?hLeH8\713+$[%Gca>A"Cdnkn9G,NmLKM"4AH.JaW1rcs#VhBmj]T]Gp?3aeo>!2[#m%2%JqQ`C*3^>=L""9I;K?F>OMC
%Q*t9ifdJQ>]s9KiBP=/'%mEBJM)+k%BI#_8.ej#X8?$VdN(R+@.IC:q^<>!LK(5P-3urk>.lZCnFkfnQTP<t&?I9NkDfbB5p4csC
%0uhq!:@#m_RRXBdb.TkT8XH@20M+O:Yk/`oc%%UuM5PK?+Ykf-"E+?[0WgZOL6.6IA+&*P!TRl0hE"h"_r&!qP1g2Q1UM!6J*Qr^
%f$ol'mhHKoog52^'maeSAus;AZ&63^T!j8@0"o_e'9SQX!=(,:N8?'A)4BPj6-l+B31s5m\T?e@([X.YAF:E(&FoQa4O49B>?Wpr
%R+a]#UnRfu0Pr\<frdRZ7$PdYB%;E4/eT_`m`9r)g@[?Y`R2f*V%ur_[+1:6I*f6!Pq3QMTh.N$*c8N@:(,2-L7!i*gq07iBBb=^
%BHp5D\Td.LE3p6#o"'$!(8*bK,"/!4GHK7Sm6ui:E5Y.l7J\APm=D($+j`FYLc$m.">$tnima8BM)qOT,0JqcdPU1;VQN2)!p'ap
%UhC?ROVp1+_,5s];E:6dgD-I%;.drt.b0RQ.a[lW/R/MDFP%G$cD"B,`Pc_)j_0suku9h`kT!KSINW`:Y_dc04"<V@Y,$,BG/EU'
%oS8EkFJS0&cn$@um58tDMDgRALgbB752gcZPpIo`#[LpQNgljC:KVJH4-KA4,oR\mGU?KSL6=$jKTmII!TJJ=66K.c":>5jJ6g))
%BsKdpK(T0["A0(C:`>b"M+--OBS>"\'EW9c8-a`KV\`lJH!W6k,>BCAWG&Aqc7kr[r*dB'!(m;8qFH30HNhO1h3-\,nsK[i"NVEs
%\5s;"7R4mbAB5U[92&j6IS"o5RN&A/OBnP7q`oL_q%EGEIFp"T2D'jk)s6Z=9dA][,EW=pa$S4%To[i."quTi1S#D=24'o0-#hA@
%nL=3+kCa[%_2'[F-LQbqM/7i5+?$loLk23$3ERK0?o-I]Lq-X`>.,$NOLU*5T/9e+7uO<7@>@+S6l,\Loh#)d-?#X$:sbcmH.*(q
%A#@DBdBqG0Ht'C+Tts`h[K1$!E9c;fP(QKL0R?qu!_GoY'H<0&BG%@mV*,i8BFe99Pb9)=iGo\R9)&Gt1i7Z6rNRPcM('mX<cAf-
%0qGjNW8qnP"7iNn<$[NE&AY2Ka?5:hLF4?FP__"]g_$tj:08E0Y'2A%.SCbkMn,Y6Z#lSM@>7Br<''b[\4Qpb(K0[*6!RkH;CWZT
%GT"Ug3d?p2gn:KT99fbqiqmg)\Skr0L*Qbp6a3kZZrfAPXG.]$:1Up\hW"_V&gtad,Wu5,hg5ue0hY.X(haX>9Y!tE'71N-#R6E-
%Q;*CnA>s62mr9I>3iARpK-HmlYU^;1*\.t9+$Gp[^n/!NAMHM,3T9%GiohqL7=;E[^p9R\9.2$81"$[,FEg@%RB1X8d'"fhUj7b[
%!$s9RXg4*%KTeo#-\0JTPS%@i7Ie_MqH.[@\T=E6&OL`FLt9j^IDhm\<e^+D5jsj!"^2SeB.2sd4BB%,:P/q)Lh2@A$Z2`'_\Y$<
%g1f8a+qg/@[MY0LmYS5;I>2q.6(![UaAA4+hfN6R:`*p*C,K5HNQ?$gfSI\MV2"8+LRH6.V62>+qb8)\S/i/6iXbjh7Ea?6h:)%*
%74\agP]UM45egq(>=$XE,R)hj@*5r9(k[Es^ks^/,hN3'(g8_@.6;N2M/)9WV%>$q*847f^sRXr#)QD-9=m[;<J.8^Ci;_B-N6Np
%h.JED2aH4FRmDEa!Me&sg^C+:\mS`F:4de*[>_5HcS/j"#mDk,k"gMA.uGd1)5EKn$&c<9(M6#a9[#l%^25d16B1DeO(-daFCjYG
%V\(FQRV0=N*_k)Y[,QmNoMg+0/t<!@F77':`HG)'$@RG(?m?6MUaTglkfdUZ_NGmLCP3-53pcJf)$)SZ9Uit.B^B8F\0PfMSL++j
%RhKn.AaEEkV1igH=NY9W$f$F=YHMWk`%f9q`14c9#]rK+aWMbNm"6YD.UhB$?/_Ts[S-EXfK*%mOp:4c2GUs735L`M$KRrhj+2Fp
%1o-()didofD?qk%<?\[ZCPVsQD%Z"r2Y.(*E#K:%i];oaV:A2k"SFGm81Ea8_o3mqBFb:eKQ@ci$aA;Hm8$EmMh)p[ja82A,RVjF
%;b3)b61tG@Y,WA&#D8"0Emct.73r>.khnoBh#Zh:@#r!?PmDu_#FAg>MKn++e5J7R&j2Q#Cn`.FU5nl,bg%=:87s'-=@'#E+cs'k
%A/pCg6*5njT9:>4"qtp/Y97DU7UhEX&Q7X\%n["2LMT`tlcV=CXeB2EJbC:!&9Y-iBYf;[7-=TZo@]XaINu^r3]@YA@k4XJ%MkoD
%N#@d`@UN;AF<c*@JBU]a(er-WW%<$g.p5I_KdM5,1`g,T1-lbJn8Y\H6u4_kD1L\2G*c;Q#p[jjn,T,5dQrIR7o9J@:)^]WCG5ga
%-lieh'2f43R9!d]JfH#B?;`g@+&lVQ-$Fb@]-:f7GHS'&W^n(;`@fZE*(WSPfhfY(T+H;_>==*8UtT?'XbXWDi@WIo]G^$2VEZZ3
%S1)fQajeYfKS?HlZpL]E&`s5W\O\E.4TRT\:(kGQfHt0^,!p#&j]$%F6+)L68X(HADFi65F<hK"+J\f^8hr@B.2j'tHUaPn--c-%
%]E7^U5i*5P!pe.QZt_MnXWTqI3=7Da)!kCU9U44]kUtS*P7X^*Di"Ng,r3;QLfY;h**+Vf*NE4&&`+:3_!A).PNb>[Y`%*fM2;Xh
%+%qJ;-_:kVZ5)dA8R8@%VZeO^<)a\RUf!F`oL<!?mj'sskDIRfB6.'D&:,/=O[`!Njt`ncd_;+"8BQW[PI*p03QP+A+Z&&*%Yb/c
%DDG4=BN@gjAB*3QUp/$&JXN-1G1nW,MR*sG)(2e>P"p,Aa:_R_TJJOf6V926`;hYE`r_b.`lXpIK,a$mZ`QO\LpMc]X6_M_#!tG+
%VeNsLN+IJ@WSb,/9mS8[Qf?R=`@HO*R6)!.dUJO3:=GOd?rHVqk"[aA_n=6M8H`QPl>0N=3+-"R=Un=`crSMn]@+0@%tY:R;43:"
%6jR-G(@8A9J439#jRH\#&t;XXj7!5_m(<JaJgJ5QSJF9`GXr-`A=p/_M8Vt_\ZLL+NDQ6X*s15H_Gsb0A>1FLR+1%H#Uj2:<_43D
%GR>V;]WQ!cU-eC0Z$X8t&JreB`1p2;.!.k3/4mMj,sJPUc=[hX=,_"agfabH3%$@GQUG4M3a!7=J2*fh(91hG(a96Vjh3#kB:#>C
%$4L`j,%%8[`6M=_26^%r<^:p#$GdIn5!dUgMHrhiD;eSA@u,rX'VDLZa-!bOpk$G]U%OIgP.DY1N(hHDH`S?SVkf%"!F:Cq<R<@f
%XOU_+K4@ucp-IL&`9&T0hlnpOM\t/P:neQ8%h'Xd$OQ7%`.$dG<37k/b-K_lX6-^68[L-c,LNF^;.U3cJE)cS5N#gEelf+nVs</W
%<=g^h=;Z6<15Mk1e%RU,g_)Ya%&aDc"^);S<(Q%"T2m'b9I3a!Uk_*JnuQ[V/4U<*<:Eo*7^7df0I]!Nf[?LFe1*Y?N*^)a\UdFb
%1D4*D=#GK-[@jj6VS*4.)-+7>7(EJl\<+sC&"A,7Q1ZGbM:*MD:&.Co'*Y0'@ZS;fWh#<OK@;SJ%[^WY[(%#qK4MgAG*AlqZ&G2h
%?Qp6hXYlB?X:WDP;2&NfG.-3I*VSDYl'uR-64^<fR=>jYKgJ,tL:/#RGZX6>c=7+XMi.X)j>Ft*@$bF$b!6$FEaTVQ^/I``+*N)S
%4$;;Lj8f&ZS<*uS5I';MI7MoQ/dZlUcRMo54L9i>d1Ak-dA;$t4bic'b]]t;\g/iD,^>bemQJAEl`h=HieoN[Hm3R__.@`@l!B#d
%o=SldJ=XJ'i'El)(CS?9c[!P@!sV%WWrsBe*A<p-65nMsFiZ`u>/Xg"*Oofjd$:R*ZlRkY,Yaq@3-RnQLR>i0+3$q*+iiRZgKG2C
%`.4'g3=ZR/YQusCp_dX.0SV,?a[ih+nK>CgIP-q++VnjJ<&>F+<nLZC86WoOctJk60\q+-5mNa)PDHlI.L.!"]*OF_$J;eM:gZ[&
%]Oq7+IrXMq,TPPP[#_J85T,r'X=FENTV6a6U3k;HUK&,\c"#9SBH(?SUAj(`g.YCP.L7b[iD1%8XOdSVU.QnTHiea[;sY_L,&@KP
%Z,GL?'f:>?U(04Gmtc3&p6RqU<oc(!6#0&fL?\PdX_$c0i[_XX_$]BGP3,8MO963\*0k&;6hIAGgh#Y5RFFtI$"bjCF2V+8gX!_R
%U/<&qi4WgN(:%;(PlXlC88+4JG@`cs!ABtE-+$ED0I_=T4[K@cc_<S-a52Z;,q];^b)Um#916GGJ6M2"&5(La@0R[eL;&h9@lh`Z
%ZUI/A'uUr@A,o05LBZE_nNHsnZR;@-9;4NmKPG'Qn0ra,J8%s"P079a#X]bjfG(&Y>0tAlc7im%P]Jd_Hq&F>X;h'=<=XdM*+4V;
%3gEeN###coSnG6&Boo`]*;jbb44Auoe5'DmQktbS!E^C&7(2_]r%<ag@"8#^l&sJPrC5j3'Lt,e]Eiu=A;gF]R\[#'A40<a"fLBh
%fW8%LFqH&FSJI67YX9GL#5,[^[*Wb;fK_4IO>5VrqDBHl6*$:E6L(YjATVGrn3N`m=UEi'a<gmO^u:,Z#)[u#pmdI[WI*7MS>RU"
%EnK,TeY?c@KN>(^_s*7B%Y':"KbEfZp*@G3Cl93L&XS5"_.J0RnL*?.H=<_BGd@sl=#kqaJ:PdnE*?GH(RPu[V3Dj^Jtn,1/u55/
%JtD"c"tha;jPWKoi.Xrn-o#dITg>'#PoMr_ZkNlQc9mkb*j%I+GJHu7#R$I4,=i3g@3qBNlRb]8$ka[SJdA`&(W"p@K0lSqiu?Pr
%A4k(.JHQ-_U3mM:AE&NmMtqDg6c%h5fae@[6_8!hh\b)TGCo$'rCO4DEJq,Y9XQj%(9r"LL/mW,Ue-B=5Rc&^JV:tZ<dAM7X>sB6
%X<iNaCfTY=&33;LJq`0NeSpnuYR<!p!r/jNOHG\cr1W1B.Ah$M;]dPYU\Lr_:E`Tf"jKH)XK]K*,I%Y'``6.Jf?fgPM4s'a$DQ3@
%;GjKr(F<]emtmKd$K\:hf'?f-5hVl[MRdeO*'!;<bN_hjoYbhG,?1C`MB=;5Dr;8&9I$27R0=tC8SmQTCCV=I@ENZ!dd9Gm,5tI$
%T&:gqf0fIgX>/2SWlO#Hq#=7n%*qh5k@l*3>W+4m23Ihc?l0k`-)rU8MP9VPK0tQ&Y)':8Pd5:[<$^-AP&M=ef3).;GaU*6jskC4
%Q'O*9UE^u.ecEE5m,8&6PZrP#i>8c\;rU%NF2Eh9;`aA%^m-LbF-)p>`GG[D_[5LDZ3<ZNlYMSJcp5"W>3O9LiUfVS6KNK5"Jlr>
%646')^/6GP0rbXG36PMG>omX1^lKIhE)mAq?tU/0ER\,jFHRj`F;`^DRaVHH#$V0!2.AO7!lW5(C*mA2#Lup]'qh)4@o)%5^:*;.
%kS*b#<pUCGF#[MS7j5h>U>Rc6.S(+;Z"-c!F<gZ#3DDQtGQD$8S0j4PY@8Gr,S_H+8ZIS"SSP(SH_GM2$g:?--I8(a<Qr.?o`V]i
%IjE\k%9&u6haquX_1o7!\1pY`g)H;[L^,a1OJSB-^c"%%MUqrne3lD/q)Yqe+\6%'fV4(]F:s7'5-qd&-_a*Z2"qIGS<$,8Ik[.l
%T*XJA3&sC0%YZ,2c=nJKZPcbE3<i;7n(5,1!&"Ut'hJ-5e5R!ELd2)A@R6eTMh8&B<Y?F("GZ$6+O4"!R0YNtJ2sA(Q$@Ksm/CNg
%r1V:$8Xb6b`lVQ%lnOBRgei\>iBn3j^]n:Wac49cBmK1K-:qE43LG`=%9dk8#JN\%-DrYNEq5U%iqSa]JZO7p1g:ZM5SPk-EEZpA
%;[ga9bGe8k@N5V'fEb/>oL"&#,=(QA?7=gI0t<b#"MlBZ3AP&;`OR:&mP9$1mjUhA,25<roN3l;.O5NsX2K9k&0bD69]+iSKEQs$
%g12.bYfZeT>n\iJdP[HdcnmV#Fefu;W^P%uE0X@]O:ddp2D)]fCi)Bc6lTNf>?OV'AqX20'L<sSJ:P/Oa[L11.bP7l>RGa7E%,Fl
%0_$+h.sPTP8iR%-en+fM1iO1f77IV@9FK.3-uNYB.Z,tPY)FEB,QM)M&sM'rnT+e5<h3V1SiVV&$k'Hd%<.,tE.RfB7H[HfOs7_/
%V'<fNG%LfAZ;H@-MY@6WZ@T%Y'=+kmk%"Y5-[MTQR*lF@>.-$p_=qN62O+i0Qr)0+@EV-K+nO1cZ5LWoTVLXJdEnT<_r=LX(bs)p
%@7pnN.Jj)b/<417Z2bIm*/UM`D,DsKH4[-.%17.I:1CXgLLaXJ/hBma7/M\(JF'Ou23jo0F$pGD?9&>8!F:U?`j*ls2N<OFZhjgE
%a,2#@>ouN[EiY"@9CFU#gaZLm*!?M1-%Wos!1PDi+Adf7XT2@qUu'*2(Pg*uIhnB.LFEYW_7>n8moCF[J6Xt"(U<"\,9XpbZ;2b-
%o`EmJZI04S%K5-u8JfV'5)3KIY_qEM?P+2fQC7?jco7K5@'7N4mr0[qC)%_9ik7bC%Z3*u4s:.T'%C;B+V:rs9<*6ZR8o=n.V98(
%i7*IoTd=%Q!m*NaCp4-*Zfoe?Jpf2!U:A,b3&i0*&TZ>h77YK)`*!Ig2GDb'&4Icd'@l.T8/C5^q)P0EkJ9g>40V^5WE%#6<Olb'
%'GE.fQS-[rg!KmF*]#S2M,j'XZH0:RhU>W:lsb'*Ij(@%L)<kq-cZOnL@JCX6edD@FlAO7e(,a-R'O#Lr)08<O*!]1CNO2_M1I'`
%##IuCA@Aa8jJ"0<K<7Cc8eM8=FBqeF85G/sduHkPD\t;XH++-P!sMse,3gA@!+LgDB&*nI6DV>,:!0bWR2pjQ%OMH?^6F`b&+)?S
%7Q[7B(+%F\krFdf2\f+hj4e8F^D"Yt]Gf.I?(j6l5VgT27,&Pj*G>Sq-deIP6Ad[W&2m#m(TPi%5*\V>c3[B>\]:!kaOOWe(mk_)
%`oN=\AK;3;OFoWr1Vj(oR#A?s)RgV%(<^?f1,X7)[PV_R,_e<h1Q3)KY]HBF+%mj3eGuM[cH(E&[$kDa'm.<YZ)=*u<?[b^V^MWe
%>f^<07g#(JLbr@OBJL`C;d`!P,16MCg%L.r&)mUDPNPO#e-a.*neM)!"ZH\$&DD3%Rog!@^t;Kfjtb07ltU'MetsIX/[B89U5FuT
%;NFcr37(=V6H,JA!6\T@2AHHHZ/m67D66Hp:b`C%7X(-9OZO%`:>%6c%LrfiA8o]%G7"g+bR""o)<,1gbZ"sjalJ.WZ4^dpK:umI
%NZG&2%Ipre_nK&d9.)oj)Ei=F^d/6dQ8SOd!+Rr/a.>Z_4_1+LIA^(FH7,s3peqiJ$V]?\Q;bOS9GDMtI<O3r3$eJ[88@]1R,lAU
%-3`/@dB$Qm`3<>s7ken>7Q[8jNNBJd'>d2g$PF0JK>;6n;c1e1(K%o*dDqdV%<.9Np!hDen6un0L/8gsdF;CZ,Yl//VQ-!3_]At4
%kLmsP>#?eE1TohU;m!F,hI*X@6n>[Rm`B17&!Z*07]3O@!!P41e7BfF,7!>4cS,H$QAIS.-Nd%H=,qfOZ2PGZ%[_,dOsY<C@%enl
%SXgLC>]`[q$7Rip1U5)hb'5pHTrPT"$C,P$^NuE814l&(ENrk8o'rif2PS!BW?j`Z$uSCq*'f7I-J4RfHlH2!hIqH=S>eK!GU'[)
%pMLNi#QcnV8X^?1X=>p"QigCPL9f"TQ^EU%V9u(uq2#QV:gb7NJt=34>7@i@"bp<ODslR&?598WpgXX>9GH)88?ZtMVTK&XJ?)Yr
%'d@jP746-8Du5)[+\=e3BH/C="kuHPqJ)tg;6Go>bX'%'.CVqq)T8kMAM7GdCTrt^PY3kpCi=m8)O.c6?Tb<#A<H8JYHdj@L82`H
%o$Y!IH/3F0-.QdAo4=>_</lk$nc]s!b7IsiaqEZs.r@>ba`8Y2Ea2jNidPB>Q'F@]'rJd7^Su*-nEh5!e*<cOi&It7U8o[0o%cbn
%!eW#`,eGDnVdAe5#V6:nY6W"t4>O>[ZUMY871i4kH9_Th$ra%[#d6!^n2M?#V,^3[I/p^15r8V>Q"h<NUVjN8Wh'jEe`1D*X'l$f
%_Lp1QH80Id%+c<$dgTV2G.s:,lMYj5'HHLs9u>>YTGqfag-VY`a6R378J=]Q_s2q3VM+Hs37'Of8&"3jVQ\.JCX&PK3*XO<[*O$R
%OD8Cn6\Y"T_lEQ(.L:O6?&YtJF3Hb`F6or$]L"M+Hm?b&RNYXXcjX/O[W&/Znkh-'m^`TIZP5*Yl;*O[+>@YIQraIIb9[Q$4"m5;
%_TDrH1PTF)-#Um`P;>oaW3dBs8EI/L6m)g<N'/#OHtQ>gMIRl'+u+`/JcmXc<$9+kOM8N7.OV6lJbmA(WC!k%\;K*Fa=_@R<.RsK
%<n'H2"B;Os)jBA?m`4=9*ak/;aY7W:]tPEc/NREa=SR.pEo%^B5%MVdMOFs@M70)CSBf%1C]OVhk>^Ci=r@nb<uIfDM%HX7f3&+)
%;=]GA[X:tlZ*'ZoKifL+FbW\F&%rHS(Kgh]PU+BnU;W5Q5!U_%8$u:H=p!JR[LRK8]L[iDV')C2[;4P_$3OnR/kqf$=CJG5>GVd(
%nnDZM(i'U&B3:Gc3&1^'hT8NThVkfX5\hGM5QN>+!"g#I).p"r:.Pr+.Mku6/ibUZS+<OEV?C9jV/jPofR2*aD!NT(=Di\$HM<62
%8FKjt>o9HFcK()-A4uA+iY6oWDp!2>O"g`;"]m>9(mCAoj3&.]gF(@n!7RopWc;I7@>0T0kkj$6S''Lu^#llCIT4QB5=&])q@]dg
%1(5$`((1:sA^Ht-3)fX;P]&3/Q'HaO]M%QuA7p#u)9G@p?/]E3^.BQ0c)dKb(^<R`hIE*:NI_luIp/h75mFk%O9p1mi7b9tWLGG;
%(#M=Oq9s_G9\/P)G$_,pF.i^@X/Z;Z4jnl].hP/PNY2&!R.;Qte!R.)=2>\pc"[VoVI3Ibb5bOFa=CB2VI'#>q@\btS,re[.M68f
%X<;81CWL%R<Fse?ZF&_.P(nD-YVI5YTkT7D?<fOp>WFIq&#pI&Uom6a;:kMpLO5CsKgWaR>UVLpU]e+\/7/CsAZA^G8<)+CL:L9t
%;b#Ak&%+HZ9)oAt[^[+oe3/ANU<]g(Z`jG4Emc)iXYCp+ODeN0\W"L$4,:iO!Y3&d`Fkg5A3[t?MW,(]%<,plped_>YWe-G_n)?@
%Ejq-*AAr5\pb#V<dV(3%AUIWHU#8E!+\Cd5<J"BSQkHfo@F.L^(*uQVR*MiK!h5]UPoQ9m!4eW?"ck[R7cY\W3::c&1M2(EE))=T
%/"2&2[4*,A?XQ'qDE);<VP'iKb(=l*b/hZnj[849aJ`(#_`*+6I-hk*H>s6H\3_m"X#KeTZUn>B3AV'dT9V$ZlhbW:(-=cF8'M%?
%:jW2#25Jn'nC%1(+^`*;CIVB*l,I\F)%>i:2TBBhM&ekS&:*X\-4VJU5o#"Gk:.li-W*-5^-nb[]Ah5GjJgg3A(-!HH?t_abuoDe
%X&R?Xq'qiCDcFEP9%TXUCONn&`e[j=WDr=;.tE-r@r#PqN&7!_(1t,jO.QTP()Z:/idihIXj!"JC1iH=N\eLs_7l@1QX*;Em'JP*
%!fJqID;H@B-`4\BY$j4I=bn2Yfn(:2@nKWt5'?[q$Xh9'fL_D_2^5;Kl6P;.ob#t%^qF:P$MjPhU^"_LT2:fq9`n<l"9HfY\,a/-
%(/i`7T5pJ'\<$4:RDatUm4.+Y"W<iK/&VX6@65rcMSr`AQ#0K$PlXXZ#4!6XFir<)E,>5R3TJ6hHfo-&=30"U&f`j`Yu<)WDQ$UT
%KrU-^b<U;C<OK/5Qa/jWlFV:AF81Q"LAd[W`/Y[H?0u>]b*Uj*`4lK3fN;kl)<Jh7AYLX2)-<ehm[BcZ.eb!aHD'-XhP5uTd34t4
%:R12g7IdX&Q'@G,Sm=r.4tYY<S[+^m(To'uQf%m@ifUBQVW'",b3YtMBs,O.Es5]:<>+>Nia[i20Y/B2EDiQJ:+65*bOmYVF4r7^
%!J+U4=]<5r7UT?_`924u5_H6:iHQ,G0h@Bbn]_)kP>o,r%:rhFUDfEBZ3!&D6+leh:+&h/Ju9%#ah`M\iXCShA4tT&(S#lQ.URL7
%Ig<l5>oh'l?_cq7Pna<U@8_KRW>)eh.AJt3Qc7r^=W-&kjD(ocR#28/\p/mH#*Urp;JiY-%=@rdQ9oP#@u\aXbG4lsMtNA@\9#cs
%ed0oFIm7,KXT*?7FA%)H4ME-:SO^0mrsgb9C#BIuY1u;*E@s)pH))s#G96(m%<NZY63DFfG6,Bo`%1l7C!6tKGD^]<"*]QJTn,9o
%^8->*@pd$d9CtmHmh#M^#!.fq!WPnL0PR3O.%&rM+V#iSisq2*BqY'"=?2om8&N\=]6IEemkc4X%CD1QaU`TOMFdo@a2J2]%ZrJ\
%i(gO3_7r?Z9H*+W5*k_#NfX;A%P]_)^I+5Z)Rr/)$k:u<;C;0_Lm:O6GDMQYJ\/kDJ:FJQR5E99bY7LfO.$+L/o`\`^I.&j%GWCU
%-4P&64VQm<`6ZfG>p<s6Itnl01iS3u)B-+a*).@84H_&dGDN)hJ\+>!"TJu%1hkkX&N+9qo9^HTh^tiT%GW,0-4S`RZ6g%9+h!+0
%mM&rj#4<%0P6UFd@?UmVO0K#j*MRA\J^3:ldQluX2SniEecu%67GFVh42fmLJNH9TEW_lPgbO3=;)d_3D<#O/i@^6Oi4"]ZiJ0K`
%hkYhKj)9O!LBsD,cuBI(<oRDZE.Zt]*)<_"Nl2[a<2Zu\_='K)QT\09a5b*hFGG[B1sgMA/pi[@O31#rGDOH(#!.gh8HX0mc"/8'
%kKu;(T_%q`G(OiXTp#]K&>Kmde/b9*d_Hm_FOEFpOh0mJlTA47]k*a(lNFomGb*c:*jHCV42gJ28of]c?#H>,\=GHqLWEb]JTVsE
%HaNM@7IM;"/`AoGOh)jOqpsR_4ur&*6dp@fX]PKdeMVpX^ma=WrENP?"kVGnkjhG,%0jmThE3A/Shr."*m463&ocrQ@Kh5b8`HKH
%ehpkrSKgR7%oEEc#>T(lj\ER1\b7O18uY7Di'i.tNUg7Qc'e?9-,W\&4uDAM%`%W\#o#_Dmjm=fXYEP"2mhA]jW<\@6HIhu3)l.n
%WjY3))P3!lOU,4.->G@,^GQd2@;@h0(NRQ!BHLL^,<4k'%aHdS8C;ekc05jY;_cgj)9&r"Y>R?BSQmaD?nnlXd9N9#O&;If'M:e6
%BVAUO<u..N':3Ip(&,:EXc5'u7Z^C4K.XQJ/VdJ*(=\!m9BWgh047d/D"!P/\R.4]c`orI(JXb+aIEB%NI/..#fgUQmQJ[_jfGs/
%QJ.UWpB7A+._8\]<%"/n8FSB7[>ks6Lt?1,&i5f?B[+>Xe+LsU;sK*H4]N!U#$khTfoOQnci7KPrnaIjOoBOu@b^XYRu`0$Y/^"N
%IcGBsrL=)]G5Gb;AEu9>j&&9O5K.lR'7$ZVh=a:l/%J&5*i_'`KRd-_ppJ-C%k]/nIk"R&0\C9W#AI'6L:L)H(ru5p"q9SX3<4*,
%SO*25;rS&m)9**EZ<[H%g&f1%paokpB#!Gr/eG7D@lM=<)8nr_!OAFl0T_jb!#ioi#-lI8\7bm\r!\0_`1SRbV?ABDK:=[YDGcIJ
%6"F4-5Uc^:08u'f>`T%b%u6X%#RqIj$a5r)?Y,</UAj7\K0\+pGP+=WoF1i3%'$BCrfPk`?32bAB&pkN0,G4V+8V'FL)<]a4seMj
%22caR&DX+udfG#dM>Mg+&hj^#OVh(kBfAM8SY)E;4eBh?>oSeM,p8+l_Z96(3=Nc=-X5H=>V;7kQ.49S&ZCW8$.Rr$.L%>9YS)R)
%+=U^?TY,!!I7<rn@c0WkNq5)J*sO2Z5QN/^(o4M(&5^QX)A7BoW>3Skq>&8\J5C1)EZp#ijN<>DA@ZB5Nu;];8#T)'4u<H]SO)r4
%Wa*[M:sT0l"A^US4oe^qgb=Pnc(T`jacNUd!3!`b"c<XI!%ErG0F3,JJ1@_s-QmEW=beO$ck..QnkB)f/o2%0(JOtP)_cX?3E'l;
%f2rS48U,bFb*YIW$h0:YDQ^#:eY_HGa<,HUPgV4`O$+b""dF[4)6/lR:nRMMY,58c?9mAt?_pS<SSSnA@-./N,KCTC&/?ZOWt<D`
%8LY'5/*A\$<-[17jIB,]PpgFg+B,5=JocumU"H/-),X.\BBLfZ($n;'Z[XKh???@9.pE=J<\Els)FmgnfKOg2)1k.P;HeT"'VOJ;
%T+!S71hH#q!trN%p(3+_K`!A2![eL41bi'Q>c!]tJoVH^$j[k)!$XWQ`K4?1&^\I&7ts>2AWRYdZP*:JO9cKKSBp_KlVZ/f\M0Z^
%4TNE=!XK(B!!$0)#7aQ=^;dSYnd7bC9EE4GbZGeTncg)ce8[?X2!)W*=^03jHJ&^Y;?d]scimsVIZ6U0W1j%!Qnef*s"PqE&i7TD
%<,n]A2"5]ogbV<lZt?i7LOacgPS["1Le9c0aZG^qJcTMp8rkQ2.IlLSPb2+#:imX&cR"46Ars<qDGFY+Q7EBqP6JG#/G"7W)OsA!
%\Pt4I%R:'[6Tm@BNX&,'',fj6_KEihZ3O`5-!JXA#X6&g(+Q(KbRG[n`Bk<&qILu)UMMp4[K:"0Z<O1>VJNorB$+3.@g-Q(K!A!p
%87McNKehWjkHIC493"`@'0G)lhMcCq\Ar=M!/7Em+,pn>!6I<T-q'uP_RDgfgKU<V<&08&82:I9P5sUp$6WRp3hr.fCD!*B0qs]$
%Fp3O3ZiJ2U'*.iqffl(cjWb\Z=94;Vb2Wj87PQ<Z4GiuJMFHW?AMZ"`^B1'UN#b;u@Yd.a#uGfh$;f:V,s"UJAWX5Ua@g"q0.&I*
%o"b];&jHMV6o>0gV.U!$Be=!1E=VF.)O2RF'W=HO*E!@OWnaSkE<\ZIPJ7G"BfA;f[^&.1-"9\%NCE=HPbd>-;F$BP"k2S<_5eIX
%dg%%>,eZ2=KhPjP,?`R1##9@CPb!@*`Cp8N($6)A6WG#bj:,JE+&N(u#h3Q8!'F.XjU\'M1FPn,]_/(061nL)S"Z9P(`=O7Glp:p
%`t0mJ5KI&4))ZAa:d?n\2_iAf#[X*48B@>?<LJG1U-]7;_=4fT5D7"K!';/C*JC-'#:T+J5l'(;JN@+I'Z-)WJr:#j9Q9Q;PCT0_
%"kQeL84BMobTL1Vg1k=3V2I)WB%81M<$5_1f)gT_9%Hr#a)-H<&1]<5Og&_bEDrum.?l5mOB5Rr;F204$=JZJWZH3?Jl2YE))]",
%0khSD#,U+DcK35dJ-.uG4j$i"5Buh;1_is0+=XJ7qR)Gb8;>imd;XMY#5P!W^cfi%BX4@NZh"`)VbR/NR&/dQ*@HlPSU_+O#4X4i
%!0qlQJ?j5Aq4&#<&6BQ'efbmK8\)3[:s!N>'tp#B+4`3[OCWT.Ho:s>>7Bc/fg5klg&,9[o'dj</]f-=1Ti,TaHY)TM&UkoifRpU
%V;)B(5o>hc!BFL?Emc;h@nK2c0ZblQ,]PPllg(i.AmH'-MKOLu"1VPF/7bM-<(p3ZUPk[7m*Lt+690?]26_f*GG61sraP`b17_!%
%SF0<0"7m)";,t9'E6GlKRQ#WhJg?(*LdZ]nEV"&b(n<d>.$VS/eODh%q>rq%B>#L"h]5($:q>JF;-bRpnL:70Q<nFNhka:!X(9.D
%&gHocB99;C(\7TRp)lcA4tYA6a*L'1_^:#C9U889,S&G@B#E7n)0CJI3M=>Dp3<<q5=I%7c6Ff$MK$MU7#&BtlqmujYD2jP%.0]j
%T>CDLGSP4qR,9b8Pp43@Y&]/`q2447o!o8W#m,Vq@CZ7-3Et3LJD]2b`$4/jD/Tnj1<@XcH[nR^>_Y^&['Oob&-=1pUo,OfT2Gpa
%c27uHA8;5,36a'1kGSO8C6u\U7b7inF3(HF_7o*!Bei(QX2H:+TMVCa[Y^G`aAl5aM\H3c!cUCPK7%On-ftmIp"@(Bd\nobY[GL)
%J!];t-Ebi_Qg+?_c0*)_A,uCn0&M>f5Bm=KQ\@a0=glBH%8YY4-g&,%#;185A$WM1*Qh,l9TlO@Pe4&lbJpmN'+X8(*$P5TJGB,*
%=lH\]*SF$naQ;$mbk;q66Et^/30ta(;>s`MjkPL+%3IKb`RkXtBR6`hAW\2gNg&,YL(ek:UrCD5@]f`r]c[<4lt>8u`Psf:V#msU
%T4NBZC>s!R,>>0k./?\\[KqLnIkjPG3)Mj(+_O!X-)*]4Q;`f!8?m;lg>a[D*blDo2.>TS=HNc;G`M,E#W\Fa1'L(h?_]Z%\?TKX
%j[0so_[&kkT?m))%tM0-F2g*8p^TZ&8RZiN=]dWhP^ljM"Fcr>FqH3.)Dm#YR[d<@5t$?V5s[VZW9C7f@E4XgI=\+(-A06'#DeqM
%Gk\Da+2sVLI1us!QTmi?e$5taU^X8jOF;R-!heJ"._%D5%!BW2#08d_Ad6Q"-r*[8EXu=gO1".E<<fH7"]Y_ma/AE],(j-c-\3YM
%$YmX@W.7pSaS`8`Q4O?Z%rZ:tAKPMVIRFptQrnmFOTSSg`DE>2!*:W#%.[k)"tbnaA6ba+r_S@uSTo-@15JMdZ^kP0jYGVA3`3.)
%bYnGe)O@498L=HU@13JlNO@MDSpCFei%QlVN"LU06jSE#4i.S1cW9W^*D'StPnE>\o62+X.gG+DFA&N(4Mi7+2@NF$(C1"]`^rE=
%76*UJ?II8E0I$>p%6f8S9=+e(\MjU557KG4jbmn"@fKC$8_XG[1:X*@9ZHHN-mQg(L1N,`7tI(egL4cmm^]+N9UU$9i>H$I*2!=Q
%`uu?fDB#A`G_]]G61-R+"74<#28JWB=<lH=L2-q&dsqn33tL!MG,IVF_<s-r!s7gOE$O!UL2I.)e)1\>3tC-REeaZ86,"5RWSnj#
%E<s$j(am3_$KMJ1VkG)<G94s?m*<I.K%k!)#M:&PF9K.\TT7rR)V,Me:'3SnmQ@j$fGt0?"M)G>%Zia_n-F2m+W`u<4NIWcNl*u2
%ghEEOYWE9d!4gQdO5P1"mLedq"$V=l=i^iXSHaKF\'qRB@!<Oa!HuMW+$o<Kp`mkNKms67df9r`3tD>uG,IVK_<s,g,hO+AJhhA%
%Tcd`e*Xi\J%`:SaghB#EYWE7"$$(ee+[PNQ/<mD$$k*GcLS:E#ggP.-fU[bP12_jJU5[o:LoBt%8W]mp\[*te4rp0tMI;gZ#o*Kr
%ENi!8o:+^5iX4m#?mOAFL5a(3mke]'fU[bV"M;ReOW\id3m-<6%YI9'h-'MD%/s!(8D2qi/;,:iSHY.o4ROn^PR[?3!_F9?_bcM(
%G8a/t:4Wnm8`CfX0VB]4SVE@3]>L;)+En`)!d;V8,sgrUZm=:p#+#J)_sig3G8aj%06F*8-Gf+,a<]CYL7&1T_a%/o]lt0*'&667
%9dOi/8\""t2^!T3i:Pp:!bq2[Bsn4.SjPAUN<mK_apnTQo8]jq,*QGm-L&F7D4qU\SJ)JR?^h93n%Z3qK1i5cjoFX_\c,8P*Mf31
%N"U8Bf&4.caqX(jXL"U$U/*dQ&[JC0F4!pjAs-D8eY6H1`VD3uee8u2bU@@&p?rG.o!LuE/VuZLfM[uF8J,*gd3,gWKHk0hK,e'8
%_Lc(EbZjQ87,b'QX`Td-K$U!,GtZBi6Td@J%m![iC^6:5'Dm>jEH&5iF7R9\m9#e)1:g<DCJkZ2SX4V@QjF8K*%PPA-#:+BADWtR
%c3T.H6#;$_SoAR,PTqnc\p05]^hq&a#r1$fWi;CH'LjITS"tpj(%IMC.n!]s2Ch1<WedcT<]G[?+re&%>N.[k;.NC$fp_/;Wb$),
%$M2XX@.`-\6X_70\\cmfrQg1fHZ-U.Giqoss6WIBeC!O<E^MTsppYKD'<"_Onnk%TJ3o$%VepuSNP]UMs5L^o/hP`X+tC\F]!alo
%E&A&m_lHW/!_K_:kp5akd'fud1^173AW-f8/]-.^nHq<FWHM?(BnGnh\A]@i7XfRs>#2EkUq%$q<c#+T6ehJ"/AI0^RD!Wh<+6QS
%h?nj%[m7LeW\BqENEk)"%9h8:72WTNKVC[+@@it8_lHT^e"j^eG(Sn99ipXg"L<;qg]BlbL@<*j!(hZ0oLQB5ciRr"hbE=n<G7e,
%9-7^WDQ_sC[D)%1h^Y7ghgall%Sf$qT'0.*#)]cm'M[!-8\F/$F7Degok<_(:I2lA+uQm?oTma0Uo-c61:V:#9$K_<<Oi:9dM`r<
%o8R`L,]hW.-C@l^45N5?_/jlVhh@YL/g1Q4'&:8DJlM"9(=4BLIL^L;g&aG@(p@c!HsrqJVTE9DAN7?-)3<?d=YBQErIWE-m?\5G
%ghG07JbI9A+7?FRO4J2O3rI?Jn_,W(s)?bne]+&:TuKPD:nt8S0UuW^,s<T*bu`;fGT[])O,uD/W!A.C\)$75Yr=$d,F%GhU.fX^
%8/\[1%$6ZsPUq2UZ5Ho+d]kTi<$rM/Yn]CMIL%`HW9'>=@di%\<bUJ&_aTW'#MabV1H0Ku[q.TA`jO!T1f/iYeiY-Kog/;mR91Ob
%.i%&J^g<_aQ5"@ljUMMQEt4G?P/9Ua&#aLgg[s.l349os*64OYb7o>FFG/"iI-@<l#i#*%PNI;,MTF>J:q<uC_QJi/"bt+U_k+&n
%QkA#SMk]WYfc#i,.[[KgE_IigIXuPCco#>>(GQ73MMo?,5t2C1+rtqgk;XoP9NdIBn62u&lMulAP2'+SdO1_!dL9+?Elc`c0MS9O
%(Nb'u7FLR"a@$uc7?*EbSPLK^\tNX3OZl0U0Z00U/!QKUH%Js^A$qIY"MFpBT!,Z(>B,nDPQ+E%/6Ag@'hGuj`ooa<I0+SN7KkH+
%Li.7d/E47>Qlj'r&9Aa']N(O;R?XJMaBYMAKF4Q<<K7qd05f4R7:pSi0Yr/X:r_"`*6mO'W'R1*A^&h4-:e>50Q>^!P5dp><EJZp
%0dqZ:r&GoElUkfJ:]']Z-p2?$S&3g5KEiie(dTPN7BOt;VWM&,3=OSFGTRCXRS2'sa`4XmD.r((jm4\;KbjK66SX(tet2"FXkeQn
%+Hnj`3sc,i''7N=m:hVVri]4l0TSunO0C^D5[*3nBonGF5_W)hr)`+Od9:lhU_\EE(9d8L+I"6c@)j1&0a1ilGGG;FE*6*t9fu`a
%i:?bi$%[/O+bViXii//gLKk98/+0qt3J[&c<\-fP%(%'Z]9s(e]N:Ut8aG>4Yh&!&FX["gLa7$b:ohQ#"#*5Ai;jItX3I"rnr^%k
%jL])!=#GG^Vh@tH/rW5E9NiRZ.H\1`Es>"%,NI'/eI$J%/lc!(E[X\*"W$$g'.pj3Cq83fiAIPX@8#m*91PpA'bLF[),h"!]J>*X
%Hmfr;m8^BC($i&He,kdFZ*hp]k0Y8WKpI!B4)(ifRh`%W\b==7B<?]eBCASJk-m9FcF10j`6H`D^-=SJTSrL'h8AUqh[eX$qu>GX
%fNUSr*ZTR8I_9g5IJ.RWBKJ:hrj(Y]mDJT)C>i?kF_C@0alW%.rNQ'8FJ3`mh="+aNn+_Z7iOZQ45N05"&bDH@"XXgGrEFNIWu7;
%r;,"Dj`qO$[qF5W?QIB_G</"fqZG?=%+')W5kFjT/1@Oag"=D<S$*>u2@oepIpQgAA=)AbcX%^^?gOs<c<[SkSZNu@jGu0b#JY*u
%/,NNeHhkkMQ>[[^emsR^JIm5<\'AgepgX-eA,b8)Ahoqiq:X@A9&li`8DL3C\$*77GPB7]L2J",pZlJX8*@AZI+:mEC5TI_qXd.%
%^5jB(`;.eG45PGrrqkLNb$8-G5HMKB,lk1(aagG]hj4DGlhl>Gp`$dC+#a.Sc2V5Ds5.8VD7rXafMSe<&;a?&:efe\%\bt4Q8@YO
%"cQ18MAA(N--Lt6s26LJK_kd1aqKo(Ar1Nm<+7Vke5\iG?7o*8piD*#N!:NA*gS&)Hu$[[C!:u)#B,se1(2^)%lpne*<Fr)b"lF9
%<L1eM#]]T(P-^Fdk@(nJ]A0mB\BWKVBrL5fWdg2pcY/#)W\5!kO:2P-!0<.b8a;.qT]-Y<T(%Ll.1baQbo6R9"Zht^TK%AcC&<6g
%`,G;@hiSMc0u3gLN;/A5r^UN&SnitnjqhP2=Nt]qs/M_gnFD,Hr0!^,La44/oiD9ME<@7"-N>eddEV8.@J$U',d!A">H%UI)nA4[
%6KaL4hV34Z!V"C2"0gP$#E6$"$%^d=P7[r4K9Z.@.f9k\J&K,E1%9Z_%(+46E-P&Vb=bbKEa*S^!)M_H"_(X[/PhBHMG4\G]F(Jd
%?J^OWrV43RQ"+n:\%`p>cD]f@%)jkX98[CL+V5-hON=A>KCLWGr'k3m_R3]EHl>\eb)'R3[8nh"Dt0?<NsE\!PRN,qb%3L5Eg=$\
%pBUrFX_m,Nj"<-/G[")E+tiLAF&0ZpOe]')*2/M$atYe:+etQ$>U.R]TAZBA-0,_!:$eLI4EuW"eMa@m2QQYo@/(rqr^_qH<MpJp
%"]XH!Q5#H;fPcs<f-NjPWk?*+qd5O$QBY9ggN`bQ#"*_<+hDY4&KrL@*J=Ppq0$3kC]5=]$F+PfM@.-\(D_\[<a5WR(P2+sG5*9o
%r^_],'&ikN6tg?taE,rQd`'H:guO4W!<5^5msZ`#fALunNpk0r#n$8;n#jhO>X-HYfP.>Ei=)<fjnJ'0TUj9P'B(*--dTflF`VJ\
%fFCIFX#NRRTpcgu4Q7YebLq.<i#SsA-=h)#*s^-VU'r(^%k)[8o$nY2iapef#`3IPigis-_)o<Mc>U<BG!6Lq;kS!Q!e`ch8YIAa
%]J(Q`Y+hj10);55Y,*I`:u\c@0)d)5?9*:h3pM9P2!/rhqT"!I>Zfo):#)E??]c,=e(K4@>l;kQs#]f2G=M?L'c7-NOP_CpY/q%f
%DYrp,Ct`Q-M>fqN'6,7mjkdQaf4*4M+g,^H>CVjPTS][U^:Ds46F<'mpn=gcTHESI.psg5Pns/R%e9\069C#I2FOGu""@2dV$;CY
%PMGqC7Jm`+Ig!Y2_=2qI0XS/3Hkcl9?!]DOWnM8[Qs=F3$"cO+&Rl\__9N\&<MAK2.RT2$JYBGS^2M@"Nl8B>$.<Q%*0QQ4D!?fP
%DrOtqoq6'PB'Tk?kTTAKT_K,6O'[IP6=kRjcF\2J$7fWGX!LJZRDIi>E1Ul=:\CHh=k,af`#XM#KaKKB)<H@Wd,<2eAI8AQKZ7p]
%a+$Zor5K$BUI#&Q+*Gm/[Og$d6r0Y.29Rid<2<n$P/,G_>10MjZ2]s0%.0HIXFmtJ+4e9!"99?R.fumQd")aASP-"#^kMDB#m)s1
%<YSg9iO=NW*u!TD\,XA5s)@l8[6"i&j\>nq6K?q1%_,Gc[:3"UcT,uZ)M_dP`9dVH^`7]>>-%)pNCP6V=$nFEGK:soJS;%'PABUe
%`egBjC[^$]4)%\.T=.X_-.gs=:G*J5aHGkld()S&>Ls5BdN!8BTe=13Z9'+MVtjX_NQ[u<1dg$!_I:%`.IC2pIV??"7#UG6N./:k
%R\>;@X+h_aZu.9Ed<=X@6bBaA^FG"A[^Dkm0&KQ,GS(*<lOD]Oi/H`aN*NFBb&i0!MtiV;XaIbW";(fPD(ZS?iL`4FBMbPX2(b]m
%EWIg.Ph2ST.d[iUGj![\BO[M2!3!']0aT*V+QXF[Kkjte0IBD@4-\V3S/Z>7p7'Q7#Lmb4B>`"k@,aTgY5)HFWiH?<LFJMT%#mq3
%ibP2S.261ND$Y_2PWF!cC(XOH1jB*HqC_OjQ'=SCE/]P,>SmbB=W`>Q%C&k=aA6t]IRXV,HGFJH3>Y(a%b2i_bH*1r[Z#7NGi6N6
%W()U=AJIr3d=mk+,:$N\)_Y<YJg3Zt8jEurIJt\`!ZgB2-9R>c5r#/Ijp*=h.O4>3DY^73cL@d.\3[>$Pn[(kGd0QsEc]\?Ip,TF
%E>AJqr^PS]Fu:%.BgnaIMpapUBtStHHXP]1+BTR4-K5%nRr(F$W&>7gWL0^IC)BR2@(k[4$1Ek`>LJ%<3PRt[%/Z<RNVUg)LI?BB
%(VE*1aQ.XTpfl23_$]\I(I6CFN*8Y%W3OeH4U`FB,Sue*nbK;Tb%Rb+,VPD(IX;5E*#S6;$5__9Lp#XcZB`)g_k\Kq?3%sq!p!=+
%Qn+mP(P?bQ=U0PAZ(V"eGqlEF`HrrL9R3nH64$YBCjB5\4!Ti&b;oPXEfdaUWaCe"s/2j4f>UfW!CZla5pVc*')<t?S3oD/'hrt2
%0/3^idoo#nX.#_=hr1p4?)Ves)_So0LbI*N.="UL4-25"\?LP52Bu$OUkDp!)B@.G@5M8WU^qk94F29>%i$gO._LT+DDTd%VTaQ]
%8d5HZTC>!?jsAs(O<8a)b(`S%"qUOjdH"Kj1)2C9#s-Da7o7j_2>rT"7,-^aR7LekG_`:c3/KUM8AZ:07d!+^7fGZ\)88d:+MMQY
%aTb/mM>JTj2OTV:,YMi0g<tPf:GWTI^;mR8LJiIl5p;?6^.LiaL*ht*`_&*9V$)%<iL-=A<!;=^9nt*Jj't(Nc'6E%&p&s^qhYF5
%V&l'?lF6;H<=[^p^YFZi&nP@OcfsX@o2g/R:_EacMCONVLoWro8Zj0W9TWZDc'JAGf*.5e.F<YWa`*N>8nf!+QBG_r`Kr(rT'/aD
%WLOd#c"s'"UL^]ondcWRnNEMAp:K4*lKoMhO0?Y)SbgKQ.'$V)MQ/Wc0(aqj*[P0O0>Br!E)ihHSj`0ITQp!<.4)0FEmCkO5dRaU
%/%?.g=YBit6i%,L`CgJf.o]RIGa-]YG-T2N=42Obbn$ZS?\0dSJFPh@Ti;kNnmF3hUfYtG&VN`W77:et+oDJ#$6P-?6JPlUg@/C]
%+E+8&+cd&+Y'/!/ZZIjPr,%e(g`F,5J4Pg:b7[Dc7%6V5c'5Z[-k=H?$Rt3.DD!4>fP]Ak!l)p1?F.[M9.eE'aVaUa$I<e82N-:A
%8QZLdckVo:1O(,o(I,o3ZZ*,Ce]L^=:*)9qnE,E_ifSqoq35\$P+"3D3e@3"6OO/(s%OnF6lrjn]%DW&a^3pEqoF<.o.R3gcpZ#.
%ekh&%W7I6n`lZp":n!j5/%>cH%4W:eUIP[[Q(^ZR$ODgCjX=UPWaYZ>)7X)rCTg)sY;,ra:P!g"on&N3F&d%!"iMk_Hm,p%MC<d!
%7Au^&J.d7Z,"bQJSfrR4AMT"hmgH(Qr$mrO#]5H+7H@O3SM(?bUW\_))X*Ak6]2ELIDuUi'bZ4_Yu9+UYB5DB<UrUcY5<FqQIl[?
%Ps;3K%aQ.\Yu'X!qL_ch3Bu%ZZYB^_`2nrV>0c]FAPNRNX3e*0;MLkK$;d#_W*?J?;Unu;]H1<J\-7bqjY23tY!Xd<=\Bh@e"jn/
%17/-cb:YGW28@&hEW:O^hR1Ce/%ZGkDF"4F^Bi0pgth/lkkW^X%5;:fKpe51O'rk,>tmks.nQ.<9@1FtXN->?Gr(B'8nO,p6P@`o
%Xum:Tc9AF[p1*KXY:mL3r6Z&7Ji+Ggq"PiBoL(o`mI$NM5$W>/5BgH5N,_BcdBB3(HtT09VT`$(cp.W>a]W^N`ujIbe6nd@TP"?q
%IEoYJjqTJg:4qAq@di8@PiKY3]Jl07C+'9Q-0B+T6"im6ciIu_C:QZ;ZQCLc)qn.7nG52qFuaaEkBd<)O'52sP%i5\67$%MHpKJ6
%I``+?Im6K,JQasmpS`aIWH$7bW*bS,+*S3.iQ'SQP:`^t-,BljP/f?+E.0p)&?r)NE2"5?A8>l`gea56.6%hV5&=ppY;OQa,3B("
%&Q&q<L"D'M+c_(6Y/JX0Sdp3-cn9\(olV9$i6&C`28j.$(9e(tX^T+A4R9YR$1eM7^QcTlL27q"d8Pk$n9tuAoC;VRnDE&Vha;h[
%<Ri_$bbZcMH/Y,ae$fr3C)sb"lnD?P]S-4tJZM5TWlOM1_)/PIlG>=I'Id`X(0AaX@5aU2I"6Aa(E7)15>:AgM`e6_'.P^)+&e\J
%k_?WJ\'120HHkpJC=f/6^=IRKm(L+08<nHp!:Y*F-A(:0?5:><.(uekijDOqF<Xh$rI8-eSp0)3WM/cA5H>!*qV=Y)^3Y3QI/ES*
%[^6j;')g1HD^6E2^XPE\I]9XgG<q/=(G&N8I!g(U4T:9SoAPrL,C@9*O;up1rQ5(YN8D#slsh*Ybl=S8'V<\u$P'lkU^p7UZfD`Q
%Y[7'\Tc>Ga2U8Ipdi2sT1_<Lc+CVtkX5M,$QM:2gK'*30Y;dfkC7toL)MJ7$kS`'P8D0$dEFL<?&<nGmnJ)JiZ;7ckC@<<h5-)Ks
%7bu7bE;DnP6b4.V`iYQ"URV+K!WuM^O6iGC"lJ(03tm9.kg%oHKuED5q\.9FQ\0C]V.3D;k-%.p9b_fLG&i3s[Jt8V=H18imI;Ok
%FMPST8BF:0C-[an[L#s`/la]1Xq4b=5';obhjtu6*H*qBC9g5[iIZYm&8eGt&=!_jopG&X1]%;@@6_+c'69OMFKSaG1Z!?roBej2
%Cga>J-m-+bYc]E>[B4hWi)!JH@,MY%XItlu1YKGUo1qPoIr't$?`GIA0sM5AaQl*^KOs$B"k5HD6%C'u67)H\@D7/_`rfU\8,bE>
%<1/Dj;CXBjX&Z_`U^nC9j5PV3@92QsKMWPI<r@[?g0)=r;MWK'R$o&9e>gp=@E-htW/2!8;@</!:^a,de;Ca%"$/>8mB_RkRoO,^
%(>Yb4Uscd:+"j_[b\F!2M<h]ShmBb02-tC7@EUnZmjFlE?U,a7`bmRnZ<V?;)X!ka[5rlIh7VK!e4p0HF[0hXL\3rmkcNOYQCVO^
%`_&V#Zg./A!6:H2O0,F%*;3:^&#j/#H6MgM%HUbc$r&BSHr3#.2pM4sH%[=5#HVCD<<HpN8&C<Y;?([3k\b>8)Hatf-WNYW)*iJH
%p=_r;G=$_=Fd1kU9O-C%75,^5OPri:<ts"96p%WEKln.J(7%tJ'6)2Ja;kK7E+!rAL(W\O7'1Xd)%S9n:=TTsjch&[+i/i0Rni.s
%8KX4:3^`e;dE&pr;L(oCW/Gt;-^ulo#^sWq=2em11)Ek.k-9TuQVb#&Lc''7M!1eQoqa<))Hn9cXjiA+Yn/[p@s.3dg"f<sD%#Zk
%;X;4-fHK^dQ$(='RJ.FC[00Q`0^]amb5(h&GmA'2kb5QtoF4X#%-@Rk;=mr7G.]P<U\/<Fj<7n?p)'mM$Ecc)XC;aC>b].lWji%E
%=n/b5=%`tQ=>aF=i$8N8BLj@+ERRlK<Fe_+;f415>juLMr`#\t4::JX6jG&<8mo'/r`jOuV>MB-%29ha9IrJ00=?HG[_6!U@QC%t
%[_XRZ+XGU(f,AaWL(B(VA8G*MNh56s;TDs>],Z\aaOE5TO(kX=caXU0?)Kb#\9=YPa)#0R@TGAD%6Y4O&<[_H/Zi]oXJ^ZDKgpTP
%dQ,r`&Pu^M0QB>c[9_UE)fWh8-D*:5W?-I:frGPX73BpJL?N2V%2SY!WSIsW9re]'+F4"OORs#`1R<U&^n'i[olM]^@E*n%\&WL*
%IamC\I.Ra,ZHWT!oY2590O(KDf'RIBR:*,l+K=MN@oFm3F8G0'=?$lFV]2'2TV4]]i4Z<_dU"_M<&]D2pd&#B.:/E=U`NY&$;F;f
%jE>A&"OdKlD9SL0FqN1P,I6c8SNM?Gj8gX<aD[53ocgkl&\lM'2O2&BP64&L,e/l@=*m!![Y3u\fLq2=Dap\nA"=Y^&1>`^j?NuV
%L7[#V/35W3o&++76HB+?/&Il^9fnRN$fJ-82(CF2'`]aDG9T-+Q>/-q)cJ=k[MljcJub-DQOe0shA@d&"M0'C\:g+P[:0b(M2uaO
%64\:nd?W+-ffn?E;KQOpFq`MAj+YkJjnlK-%-CM<UG+Nl2@sQ)jamOPWh'P'"qNtI`3X5s*uG<lj/^N5B,7/aqse9p^J(H#m'gQe
%If$@JD>2Za4d0;E<*0np2cpb(BL3Sn/T=8MI@U21#H36?alp!-Um!XcGNBTr.j/'D)9+7I`b[(2ULQ3-os\J]TQ#rJO&G11g7U*n
%\s)BjX=1SVFO*`D?(Q^%Mp*SnoVoG=W_t]Ae:\*mHCbZ7N/9[*6(KSbHhK(jDJI[ks$"g*&(2ttfQ66GY@C^Lo"o-PY`rmF9D\EO
%Yc4V-Ea!*+#Q0-<M^?JIb.\TJCmmm;qI8+h[c6S@99m:WB_uV39>]6@;-499*ES#ubu9)*X/,/OqR0<0jdCl_Q3q\i\%58%YS/=I
%UKt`"*E3(l*bE/MDf^!>Nfg:tA/%GY`>0YgK@!lF]2+2'i/q/29[E);7i=$:]5tY;f$V^+AWaUaJ-M`f!?Lacd4.%[)#^Bi*9a9I
%,a2lOl:21JE7Kgn)p+k_+/+1j=8*u::tBW'Wh*-8Bo?bZ5(]i>m\K\#X/HaY?1D<2Umkg$!$D)+^;@[klKT!da7Z$+P)]bUotD:i
%"4+4diegPpB!#XsKmBo^_?eEl2Ts:jBZoPjJNJ_<I]OZqV?>[D\mpIY"ab,SK]?ac18[%8SpEKQGsrl9gA,Wrh8.t&)2^$%"dd;a
%28sa9oNSW2I?6it)UYCgD"TsLBc@b4MW0'"\eMr\m-_jjVPVg>^K\/XQl3J*X+SZE?;Nu!KsW@(n%ascrd5P<E_'+S!lFrIE1Ahl
%E@@o*Z)6E2g.C%ND:f%tN.BESj2R:Kf,(G&2MhV3/L],a`c.jrX&=+M]?5TEG/Noa_:+\ZDg:`%eZ=*:Do0!s,DU:)L0%1P\!ECH
%\a>bcWU:?3-k0J(%euDMK:Q1Ue2u(6anS"7>/edaC"8Y/Af>f#_j=@]?smM30\0sG5sW/%&AZ/)E59/nluHk1.`0V?;9aM,)G;aM
%^4%aL[!A3R7sZ/=ZG;>?.H.-e%J#05O?L8G5o0iS+Z>/AKo]ge2\[!n[T6h(69ommq`fP+d4E7[-O(+.#DoBPmZ"-SNKqlWRQI)p
%W;r3lgN0(%Pjd@-(q)?)V1oi3-+sAa@pB*?<n[l=p]m&(%cJd?CH5'B0PWcn?/LVWf?NMa@tT+RgW>V4*Fm/9blLWQk>\,c/"@;O
%9N*#5d7pQfG\l\p%`*_;PU"Ot4_-*ABe``%BK[I,Tas#X(8n%k:m"kLoZHR57n%g:I3f;@dY>iVZ$VfIAPWqh>8u47Fdr-B]9i-$
%S7`,6d#h4g6!V&i:>8'Q0[GU'"7+J)OKl-10#-8hZ_Na+@VO0qJ/t7'@_jopX^[N*U/q,MQ6V%%CkY4.^(p^-rj^m0X:nb'&?^QQ
%A72YUYaGh5_kS`[)<$V)$<UF]hM;QDR`SM5bIcrcbn%kBoX,46]pIq+Z:MJcHd5uPFt_`3/Mko5m4p#m+L'je3_J#,R]eEMFLH#<
%%D*h`"&%?r\s%Dm<cedQo2^D_Jcrb\-.Hiue$*4&s1Di3/'.VX5g=Ii<Cc(8_5=AFLDqGe#"7>`SXA+ic_9VYTjYNCq@QCposQ)?
%]s=uoZ?J\U=#t^323r;t`?,9D:36h_UJ):N?0g`%\X,X3O#7--J>%g+&-=P3d+YS/pD#$@qh^:`D#3IK'm!&l&;q!m:"-TF*^>js
%Yr6/*0!s9q_!`]Jh1?I1(hDGtOUpQ[N7Ts)To_igMnuU==]i4KG<e6/(@d<MmLsM%'Fn!'ot#eFGn#Y!mERs!(_ldC%!Kemrc5(T
%I8iQOkNGsakm]2)nNq?l;L[@m4-i3r.fh\/%2'jucLQ8a$nV-q@`W<bQIbkV>HU0@O-Po1k^@U3TK"WO<3-Hc.",dldi[`Il%f_u
%'=Yr0A)a'^[^TcLh&?A@9N=_9o_-7C&S@o"HFEDKSqXoGi&HHJ6c3I6<fLI$2=$O.l$@AXcB8:AGE%Y:GrS[H-_n9aT+E]qY<3WW
%]p.F=3,:IRj_=2f>\:O`<4R:^%"kafZ:`'2*!:4&B.;Sjd=&^HV/)FmV;qEK"!D106=KDlYHYnf.:Z@X@%TC#X:$\;4;tk7#D@Uq
%6)AP]$3T/2<jIi2/[!9rLcF.hQ(I.-O0FA%>3T1)K'*;J8&,+B..t6(*#it7Fo#]0;p4oE]9i$AQ<D)[l]r8[C-L#,9^<#f4)R8=
%0Z5FP/*GsC/sMAX[C4D7g6Oer,%RJ.G.JaEC7QL]C\Kg8>+/N^U5,_7AOlToo*nlXN.OTRe7"S_*RSJh)g#)#i^RPN&mn<sc'Gb?
%&#iJ3384a&AZ@3=YsYB.a4R(Na8Ds)d6+bhD"e"CQgMCiaVm9X>VX=lh+^7kBV?k&>JS0T4u'(k<FpFb2+JbI:s_4_SDh?C'-)6W
%>%RnU\K/<(h5L/W"Cm`!A_Ib_kbI&f\c]a-0d%5).X`YH`eACj/H*3,G&t^sK5O`+*NC?f)F]+,L*NtgQ*P3H(^t9#YlVm:>C6"A
%+D(LKn?gYD9F4@S3aINl<He+GITongK=m(1et&j5fQpc;]LdFdnA+2B$:0f`a5Q[iW5hPoK%=X1S[qJ*aoTra'e=u]R[9Sm6IItM
%$=9DsiePYL;/iqFjF@oOMuu/-4lt3c<MTZMFr$gCK1^*fX=7JE&W"=$P&2,2=Kl(nA39!cD2cJWAEk.(2EAE9Sj[:jQuWXj2tUj%
%WVBQRh95V"<nfMQm4f%m_!0Bm84AtCTU`t>:hF;Uc-5VC&Qm@:-?eXb_BGBed9OJ-eUS-sN4MDaqY>AN_fd4@CDA_\BjC;D)A?/O
%&QB[gP;N-/Za&P<+2iP9Z<8ZT3Gg:fUVgu/qas41E>`/_:CWfB4J%MA.<2C@jm7A!q7K_jQD.:[UW^2hp@FO(]o:i\"KD/ep&V62
%nCTrC[QY6VXTN^;)#PbgQ&aVZL^":Rd+1cO@#)fYN&FW4,$TJ;gFJHRFCQ_"`1po8i@$+MdUKEj)%XUgG>hZuQZjF(X3%@X[gBKY
%,=ZIiZ3&U;3b8,XXi(_ZfX01&AsEC<L^e%=pX0I86@PL),\6gfrX>ZOafn[eXEG959.@W6c?N%&-Lm3n-3auHI%GtFJMeAoJ<b"G
%S3+OW%RD8PYSfS^6E,pCl5kjf1*+n]k,4,H6%&Yfo,8taZ@M;,U&n^A=N2)Z;ZSkbBcTP0jRO(;:rKWaG+n@@q5jf:.Ha.B]<L==
%.FUoCkMpVfO+db8XSDe^Zn6%+F[oLhl?H2gDJe2;mp=:X>AOS;o=87hTdR`\GG0P</\=)p;(HO?9>!EJ/@COb]PRh;U&4$nYiA^2
%_143a\i\86p)mHP=t2JKK1nu2]/VLV,<XA>=6t4^pi%7@L3eeE<u<f!=Uh(iWJ/m,1N)IL_`Lng)GRWgr<em[dB#]%acI!%!hSIK
%Jg%D;N(_V<1%GM97!C<GGHljPn_E9P6T/nj58c)U?=@6PV\<Q>$eSm8<7C9lCc,tuVT0s"1_C.#="r5>\RH+ok,49:;KiGa(V*3'
%^f]9m.d3:/9Z4Ku`*F%co8R<G#dnfd5E9/7\Su.6iD?8$KUEBPWSl2l`.Qdon9u*f&*W4^mG%]==:P=lh#m)/XRBFO4a43D(\?C!
%Ba`BA2O=G/a\s%6ll\#VS!&hV?tG1&V\Molg9a?VG+L8NE(e?d!L+RCNjH@`Kt47f:p^f[nNhaY<mE2tP?MLbeDf%"QKCWh%P&l]
%;S>p0%+l'-/_Wp9N?^dqXG3]P!%WE80-+]ZHr)od/:^>C\!TJWm!>ctC7u$e'l_cIFIcL>X5r]&r#SK?^"3g(,$37h+K8[^H,-4m
%CA#NBq43t8C1,9u9,)i7)p^oQ3a%n^gr8+U%NdV[`\L)83-;A`KEHc>.$$^</n)*J'o=JMBn]i>J7\u;R\t:O[UGUZ3%mcYV&ffA
%Lt.O"#162N>r1%Cc0uk\?M[d!Pt_13"&:AB2aL0Te[sQDd63idRo\3-#)MWK\6Cj];%6Vao+_G9<f[XS&fhW+`pr]VNh[LH_4H\u
%6q7>p7CkDF^c4I/CrI@BFstlalpLMHB;)^nQKiu@T%m]^L6m9QWu9koc#@k-X6K8Uf'I@U!U!+4QaVcuid_UtLDP$?V,oE\ob[1-
%Aq*]Wr2dX)fJB()ekAN*mUPbf.orroU3e?MG<+"]4t2+!Af.$O:PP'5C;W1/CHJe%KWQEp'JTDKThTd3JSoC=W=;SWM2<3u?$]i7
%dHnC3a=)WJf-kY3/^$H/\9-D*`4L)V$(;!'^UW((@HegG*nquV,OdUPgEi?7!JDitOq0q/YdLscgEjJ(mNUf3kZ\j.6oM6V\O1c&
%l&e$6qOQtZMYV)o)V>+<8<KV!ej!o9Kf`\6U!r]Rpf!u;PbdCGaL'1<.sBIK)G"kGboA3iqqJc9Tj8cUOc:D6A_YtFQ$O:qZ]4+S
%hA7'SO6%=(QI]K"`Xpq,3RbHucCCc9dYp>2(oMN1RZ<<*]G4uS&lt;W`M9%eQfufO[aH/b3ml2/6RX3kXa@n?bP5Ag1YdQKQ>a?]
%4rMWU1bqb92`iQ?"8RW#Boc[9($%kJSs*XfOS-cPB.pl5;8!Wl1q#0U=V]%%j>;cFq&HSgB@:[c$&)MC#$FcrO\LLJfX&Vr#-g0G
%dF%AA?%TgI=[t_F.l::7fs_a:&n<u-h>-iOTb*`8Bo_Cj$7jAoh1%ln),r<R`-EN<HSN9LV+kXU<kaU[hG-s6Ao^5T%0dTj/hjkG
%-:<U8a,u5S;3*ZJXH3e4J;X`acPcd-.ra*P],CV,?L:6E,i5sV$^,D6nppf`>*/jh?s19o4(5(mgD*`qm+-s1MhBj=Y+C<ILXm)h
%!t/P),[oN#)@.L:56^GoMMSJpP4n3uoH\qNSp$pS/05%?FQ/m:@+j/bX6f8nr%<nEK46b2^OkC^-c+9b;ZRPQNYnu_Mch'9BN9?N
%&VQ7rq8-NT*F2(?V:SXoJ^%6_l=lSl1)5=m[C-]3HeJHA"\/tr(^h^m>`pof`Wg'TLSpr?mCHpEClP>r=V0["N7KFdb1^:9)1(H#
%^A)4/[1t1AL@bCAE.f#m!82EKGn",7G;&-gXgY6*f4SXXLeiVDc1;9`gZ[\9@OKmqp37#Z@RP!lE-`KC@+@a/Lb77/PEsA8f%6cM
%jW:Ql?U(<qOG)oX=qSjZCBc\ffbqg\L_dp#T56_r=f\)I2V*\YRaWLf**<@PiR@kQQ9s'%h:/S@_%,$2Yu$AQl[%]tTUUQrc,`ae
%m9Xi-6@P!'`dh"VpT3V@,Kof5eb0_i_YooNVSkF;Y8JJc"fVun']MrsVh/$*7*C:sWc>6oA0e.BT8&58j)JWQ8n?S^QI#L%*V%$M
%iQ_#foggc1N0T0&.mf<E/Ah7PerASh[3+&H.=PqQ-G]#o/BA*KJ8qHV_65<L*HVB>+u:o<8K#Iek57PhpL8T@?`h,;&BAYhL[:45
%-V"?agu4\sXCJ7dK^&2TBkK3lTdYlH"]B>@piO/mQE-FuFB:tEB6FUa`h9:W;?B`[?&l94s+:.hZbfs8_>m)a%sXU%?JCqdgNdRf
%,pZ.F8"*DTb67LgHi0&P-+;87(3r??6eU_&aIVVT#A'\tNLh=9$f,!ejEokAbP>HAC@l:2:?]c1L0M$]F3Y@%<m(cMPDfWW6pFa<
%&"ZFa12B@NC1Ak4U?0CNN7;)QQ[ISt,^iL!kC/=k<@SGiF.]pleaD4c2K69+]]qU(#aX71,Ls,#^.#)?^ThkW_X?&TUgU%3*36Xq
%%4k9g0NVKeEqJL=9omZ\jksor;EQ0;[Y5N<],1"l/H+fAR``hhCCsc5,AbIUYRpn6-q0K/_e<tLB@Gni6t`a@bs<_O)*l!d]BH=a
%WtN'*.m)l3nm=DOL.XkV6b,EkM9(3CVd;q,KX&u5&(VVFP7Z@9;%Bha8&Q5*cIa(*m[`<.N([fq)Yo`+N\fJDRnP.DH%`"11Q>ql
%RkZHWQ/(iIFt_fu>%:.J$HN[VB$J0IViTn,\O:$=.*&>ZapfQ.r]C;W752!>6oQ]o`ir9)+:<O9/#E[hA/(X+l&)hl'pC*&@2CTX
%b^f\Phr-&d8g:UjNH+i0XKtp.Xeo4$M'K(C0AH6jDeq0IW"gE9jY!/kq_XZ!X(sm8<\s+KC,b'W?R(3r,-2SYII!o5<'qh)%NWBD
%l8Xm["kBmqeIWD5kuU*A[J9pUH.p1;[Kn"CSYR,2^;QiJRPiVcUbV]5"-JN,I837Va1fS:A:UY%NC0O2(Sqn7cc^`4FX,ORSPJcN
%D@)t]-7u'(iqk[g)LC47g^5FsEU=O90BSY@"6UGnc^5AhO4=aZ,H(!@FXP[_>"=2]7T-"W<TC%C]C--]F\=HR[O4o;fpkkF0ieeA
%3=?bok)blcPib24>X<4K`XLM!@cPY&<D$:n[#ISUbiGk=4d<\/'sMp*X#]6L1$V/d*/al.EG9l1;Bcr1q@Y")"K1OqjeDBEU`#.J
%lmqD/4LCC@C(]qaN9Q@=)I7GmXZK,1M=bYC#TW9Vc9u5W'0sX<fP_mFe7eiY7/JC0e#m=Xl.4ijlHV6S#V=N_gdHP#):.Yp=/O(T
%C5RgB:t8*2^q93+m5"BW^1o;pha9LuGJ5Q;'bt@)jrh%rB5Q/TPOj2-):srh27A!FCN$$7J?K&@P&GaXR_a/C-:716gU<XMjdQPr
%4J>6Y9']f^mh4L)Om)7Zerou>#[42^YD=Zh/K$n""(_XRIPmd9-Q#0[8rf/j'J*1G('e<=OqQkkM3Tg,ofPX;0$Y$\LVVhWQb9@e
%i.fp?OuOdEBK!'`fMdpaZ*iIh"ju"':h](s>3D!FTIsh5a*lRA[\,e/][=#p\YWl`(XP!JTeC$Q@A;n2@GONJXg&k6nW/c07F*!s
%OX=RU"!s1H5bsHn\YU'_SC_<F0DN,K)r,C6c>;.HXaiTfUVg7ZEOmJQ4@&+5</m]XRkZrrSjCg"b4O\V@jh^'Lut@W`eOsXW+0Xu
%V@V,"\_G!YPK4\#@J<r_i#R`MS;>l,V/H>(lpcTGj&$rJ.[2loBG<mL4d4Bd8DhD2F\I?$r+&@^GVZ5g<e8\?5Z\5bdKD-L@O%`*
%L>5N/@i(RXOJ/WZcoSUX*3a<\">uRM*<OTa$Zn?_B*82o;BCQV-nFfG-K`Lt@o^rV"IHjJ.lJk;SH%Y3J/&EK5(J1u%<6R.*5s6C
%8s!'0HoJ5'Z_3SJ*KIS:b'&P5<a(7b)K1eMQg!3%=U7C"a>1Uc>f!E5?8!_M,cqd-S4X,;.3<=h+u=C8VR9'm?pMX3@lU^@B,V+Z
%fM-*=%&FH/7:aA<6VsrH'oqpVV9X^j"IdF526l\FUgZ\c'El-qPd&[ta(9U_+t[2?ed>'.8,p`+bYtPhUr)TbLl@n:pSSb-X.@2!
%g"k\N$MTpTm'!^@0%5#J5gr,%j>)X&>NB@/=.$=/SLcW3M8-u62^S:"qb`Cj'3p)GNJq3mO&o*MR];.$._F[!5C*GrLuOhU&80K[
%Xj&C/%X/dbb_M.P\%)#b`*37t$<Na/)P"&Lfi4Jt,jkjH1L%6ldoEcr,V$5DK7PC=ZGVWCJWgTSY#8IGYJRl;le>l&P$!4%L(Wc#
%!(Bg!-mr%%HCE59!AUX$,`[iC9a0reZ)DSqcb!`?#b+L7E?/5RXHkr<jUcdpVWb&7>[@Xr7hB]PL/_YCb[lBp`*cnPdu1<"N-J9^
%%uP',/[W%t&;J^X\!aD;2mON2eVj[eD6#`b4,(/u2M7O"GDEYmFd:JbRD+SlWdt5p*&B$*X9f[&[;I*!k%g&_$-mn-iHn8d4finG
%'ed9I7qOK#6omCV3#R1tW0tAVIN8cMC^7\O;UUUm)m#b`$4(fqH-N/X%E1rg(Y$!%fI@ktn759QA=>(JR(gf\dP%V[+k"1f?H:8?
%:e7+mJB4aY@ZBEr!QZV,MkHZbo52Z`KegD6c!7#g>]-BD:jT$0-j[1&_D/aM7hLYq^V"q/5j)`=haC;n&CdS8\BUK%>g5/V$jLhM
%IQk1L4p+:#A.(mX?.(<m1N['3)B,!?)MW'NNXMDk]%th(#s\,7IT5*aC_\3U\XKr@M$9mRX%DIJ.!55d"@E3N[e7h0pRSDRK_d;/
%W8:(7i?i]i5N$W1QOsFfauhD3qI#B::'V#)SFV`C_r1b(4Asd3e;)L*O%#o*H`T#-/NGHa"&&M=.9<o0Ql'%?1a:pfGk.BkX<8/V
%;K$Ehc&CGDjS+dlOJC_QD3_fPXbNJe#-!0#DE\^FHNYcA#d-Wu7W/XHA+@2nM;8R6D<hMkr=2kAORG:<D/n>=AZ4FlR@/2A'Z!]@
%q(U!o3rCTjU]?q7n7&VjX8*&7KCXpFqJ9b57"X5T&H9i7*H'h``uHt_3*`1F71]8ebFIJk<lrG5U=DF8cJ$'b`1sE)1>A#ocL%S4
%Of@Z>_'\;4rrFcSO7-u>4?A;Sajq#BZ.kGg/>_,.m7t7]['3R[O_%ge3F)m,)Y^n]S7U!h#?FtH'-D$\.YSdLS@/&uE?^GVYi5Xt
%&7c6*G1J/;,CFHWS]**^9C!B<'qM48a'M\J0X)`l6=X!@bhe>QmSQD8g3GnNb_@T$PMWXUTQ!&.@Tc@Pc%>/$V)]`]ZR.O5Mr>tD
%ZT)TRgf.D]YH!UFQef?BhmUJ=nM*CgN)t0b=`Rtu^r4)a1?F)M<3tU)=HC..@)8D*=Rtig](I(me4C;Tg+@0N)68(Uj5j(Z@X@TY
%Xe&=<)RK[N'UKTV,fWkVkBctD`u&I9btL9jH#kPp?0.l4G-q0j<>G$bc[+?8cOpeJ_Y<3J7uQVTSBB"eG,a=kmU"!'Z..]BES<+G
%MOai+Olpa[=/B^5bPfB%(,dC')C\sl9ZB?!n@9")r\+h_T<uTE7t]O'i/aG@3':o21-kJqW+>QL[#ZWc_%JbYedS.m_T6P,ODVC=
%jfAU[/#8f!J!,pG#d;eW"$1bYZV?/@G$!`iKY"QscS`9XdZ*<$mQ'L4(p4_;!\RB_(\$2=P$k1/6'g96bN6Of;K"r2J5tHRhO%gk
%E(@h,q0:tZ,)"&-H6d$O@K4-_5"U0`.@c6sP0O`pR2(td\<TZ8[uoAs#Qo,'-#(sF[lrT(2up;Z\4esfGs[F)n]J4$/pd^ODr"Xd
%>:g)'bRqlAE>Cum18k6r%At*WWUu=g+I.,`Qe]99hdqp%o=<4CK*:ZkTsaQA5lm7=%5ld4$)r),+P9:<-+Q2T]^&SG>WM[?;I1,C
%bu#D"Y.6uV*SNer.oA[2L.;s@*4,i6[8N>2b=mdD%T^".NL7.^hW\tr16)P9PVS%n?bq8l'tQjtABB!M8b6>2eSVg4*`i"NYBfoq
%E\FLUWP3(T/JnSiD:Pb8"'euV(,qJ>$9/)22;fZO;EUG=8:tsW&dV1[\F'F@^"]L!l2"qkC&6AbSWpO6bmC8u]POa*X1h;T4'9N(
%crAtq".DnjKRpb$)Qg[FdAEQ6`e:XTJ6Lg<k;&nF:m'QFbJ0ET!8cJ=h3/8Iogb]YFj;<O*n<Ij.t91S41W)K;F7bVn6KPa@.@.K
%U,=i"`+1NJ0FSRpM6fp9h$3dma^d&_RPUg@ha%RTH+R?3YA$$8`HGVl=;6H*=6RCR<-F2J4.eD'pM+m(Z_/\bh<W=@5@^YU?R34N
%WXYS%Ma.]J@]<?1'*K164<@PkH1-o>$H\@%[oo96/l]s&^KFSjAGW`gKU@J[bMoZ_.)?s$UZr(]c70H#&RpVA,e2mf[Hb;aG#A(2
%!fL@IXBI&fOu-,m;60-M,8%s$REoUm!*p.s&oa#Os$/)Tjg5f'9`p*6hMZr5/R"QM"V/Z:7luY[.(kgE640TFWg@Rj$l<'4cW.@G
%F>jCp>J5o[r"cmmmgRQ>4e&LRmY(EXWsE!*T"-06(<a.q)[\!]lkiTd:n-$4q%5p37*4pSOUFTn!FBKim\(Q8=hc'.7Sb593,,$D
%ST`eqP(`c^F<qR2+"0eVFI&bcOV#NCm&DUD;sN%.B-W'lkWXPt$A<>JVAOt5Cp6L7)^Cq[VThG_O1W2f'f`l)_Hs+E8+6^AoGMQA
%X0A0'ohDImd/uOW%k'>;luY;\";49dOIQI()GfM[0HP1QCIXJN&(>lt:++![@67pCfm'(Rr]u.Ca6Cs/G'DI3AjraPFO3b`,>p0l
%R1D4n:?ap:Oj+TE(s.#R8Fm6S+uWEKQbcLf@3SXNmKfX-55&JU,h869;_6-,#bc2_>Xmu$cG%M/a)bBH([8O_+fLIF<r,cJeLTr6
%(DK[d-[QSl`=NP&#9S=.bAfYs:.j$-,"E=@'2tCJp"geG9#r/.N>.,3<0_QiG%\PVoLfpC70tU3]UKWtm:Mn3"p@=`A@F=h,stV"
%?^SWcblLp0G"'hVZ;l,IXhO.C=\,n>mK]/h+-#!0!WNQ=60,i4Hmc!WWP7aJ_ED8o-7!@eCiV*BBY:$l;KM*FUG&+`W7>l^]=Kc=
%JpF^`/o39('-<+pi`"8=fOu0Q`P1`alF8aScCE2VN4m6)cqlY4d->V4<D]ASkZJf)>;_+H*,+.gbdUt7!p%dq3^>KpC/Z;I(0XCs
%lKU9+pSLHS78!d>_oMpPIC)(Mh21f1<YEhW8!m,!Eojl$[sl$-`3StU$;8T`b3Z^7@TLCk_Q.Cp'Qpo8c"NJMVQrOn(0otWmPO3N
%heY6PCn,D&@QAFL3A8#j^Z30:9/Sa#\n(9:/[`bVE$L]oCSN-R^`r(g0qrMJW*PB4>Ub'j."#Z"l<KPsr[>:Ghgopg&<j=ppaDJU
%l.laDD6"%^fR-/lj*q"R\<Sk#SM4\\5O1s"E-cK+Xj[PGSqE)MguKE1P_Y.4q6jL\PAeILYh9nS9o@.S*lcG7]1t4-RnjKZ=I_oe
%.B*Lfj%@F'0[CB34$:h;HWO"d&$+1K;!]]K4;IT5[2WNX,@a71at*=K^_!]VTSGp8,i4dZ8bI?DgqA[(A$*R@[a,:=F5&hg\=D$5
%0X0?XBEG&r!^!cp1Ie%,%LJJ[A:lhl%<ntTkQS-iRbZE\[-][h!H:`VBrCGQ[aietE<\``hIRo^Z:7ds9m4V-:^KCq1;c'ZhILtQ
%-Tr3GN)RST9A;%&kug\Y7o>pMmQ(eRjO8Dh4Dr-##*&I1kETA0m9[YJdfWH_.(ONG+_beNW.m:+\/!E:djOdG=]so(l0[Z?a[o#/
%e()F"M(H1$ltH\>TJBa`3-U(bi_hA'&cS4C_P'E#"[k)0mO/=kSjRaSMqdg"V#aJ:7rm@)W=NU^XGG"!ZO<G#-oP*Gl47XZD=1tt
%'@2qKAlLIA!Xit.SMcO!`T7Nk=KCa_;Kj=5QR0W903oBNL0=.ZoXqsN"Z2Hh_,u@7W/p4:aLMt%GTD4[.@[>#6HscE_Y;?_DDpL9
%a=Y5B2H#R9FgoWT;.q6p0@1%I$:$rnZTA&@PL.n9;C`KZ:Jge@hq4$:"fNnEVmFTcIW-gONr-.?*tVg2?dBqf&JJtMpF8WDIG(['
%4(6r:oe!5#PGlP68P1"<ks1H\'*@8PS\l)CeE3.Q-#;[5&ke7eAWW_lBHaK=QBRgH"8c0KlNU,p>$8H]`@,i>p(-!U\8/,N&($Ri
%OMRZ5KAt+/&r+^G#:P;?BgcF2G)jjfMqp]3S-*:Ok5aAT>Vobs:cAOKMfZZWKYarR1rsQ3#QjD)KV3\e5sViZWsi>IlT;2DO[(aq
%]]3XL:nNF'1&D+X`7,2]&3(ifLCr6:/Y6t="XiY&kRCVPK7c^,IrHW"Fm2^@:^0p_C4ZOZ>96Vm#KE#GlYf$%lO"m%b(KuK4Rq*^
%hnl\&__96\mKO';%S&K9&0&6H".+b$_Lk;BVn93kLo,_aY^,b2#b\S][lPgX-djq*,G_]KDBg$%&>+oQ;9M?.2)u*_N4]Lk8EaIl
%dZu^&Lg\MYhhiT41-Q<h\1=RZ<0=?A7f4B#k4@$9*%VN*N:$,b%O2FU^4n<?/=o.ib>-2\;tC-g,YRYH_8cbU1f_pirPm\8eEF`'
%=BuRo+4=,e/iTl5:I-^lim6JS^&d:[Wf*hDAGRpV&WZi=-FTs*\?iR5($*rI(_f5\)tIs"*:#_F[YiefiBZd^bkbUA@udC+TUZ1I
%PmYJ$,V/T#0KeGo)ciumfBGUTg=bO=@0p]9=1Qpr1L"[<CIPjp&;ZI1]WO'nfHRl=dAdRgaSt]iZlT-G<BAG2d;iWb.mQs!W+Fim
%l;"!j4c&5_'.T?9$+L3j`@"JKcK7IUAJp/I5G)eMB;*?+:eI)iQ;sg0D4>Cr'@:LJW1+AenNjH[/.=ie8!_mFB^>4ETo'Vo,Fg+P
%%%Dp8PX>*[Lfl$e"J@;[cceXkZn?$cbWokZ?s6Yb6HH+Mcrp3g!+8;_0V=5J7Z\e:q$u!-*;N?5G@GueK*_,]Po%idB`025/%`V?
%OCU"JL<YC%Nq1;R@@okbAla38E<#+XSKiQ>fk"u"okY@m]D"APOc0?C)&DXLL!q#]bEZ]H;Ko*.@+f+.@J#Y^NNttQ%W+oG+\.AM
%5V!TL"S8D=b)L"5Zk5>XF7V=D1[+sP\=bkfRLMNajuYlb$1r)T&=>NMREMEdUVRB83A)^'<^\-b!!bcsa0WTb_u3f.0o0%!6cRC*
%).#`\HYV*EX44\mpG4]B6A!<Q[/tVkLjoDU4^5s]\=.t&.Y\R;EX3U5]P*sk$Z@DKf>K!>U_F8%=ZtAh)NA^P3sl8b+^#&DiI-Ec
%ZH)Np8l.@Ce]^R44(WO^eG%MT&F_^6]e1,b7@,6MidRcJ!Qs_7QU?EIQ((V3&7(2cI8T)1j:Ka"<Om![drSM!)/#Adr`&!@k(ee?
%e)].pN]U5N]Rc?slVuu-R+?PuT;ilUInQ2R\f?;4S^i#7jT[mH='b5DWB67A9O/-*`EB1e(L8Z?M_55?&W7H2%U6nGrD&\hb/B`M
%>u$kb]BXE1^Sq$)QUCI=Mm59b3Fo/*icNT0:tZ(c[u2k/l9?S,?Z\:R^*J`WWQ]MU"72L4#M-Y$L#o2UJZ(`>IAb;_cg\s0Pe!ir
%mY(F3DH_<j&D?Nq/&8^d'd^d2&_r8Pglk,"EGeNHdD5]MrX!Bq1hSF5h4#(WL=msrc/$od2`6=>=f4g<J5_%g-oPb)LOHIL;A0&*
%+fhQWTr7:<X\<oBWu1Yg0';Y>f#mQE*5eRbCJLH-a5LPr3'sP65'L-k0j'sr]d'TEU7-'TX626dRrp?YL'$Hp,i9uE4EU_$=ZQQ:
%"e``&cUE]q]F&]9OMoZYS^,0`oOZ'Tf!^ABA.4APR?1L\_cB>FOI$k[FRlb9)+V7VdZQ%rKeK[\>VRe9%_o9V/Vi[j(*ltaOBLn[
%]Pf_'To9N%l/j\9RpuKXj))rNd?<)678A'tI$`"fDr4]]LP0/57S?E(dF<^sJ<\'BGY-8Hq%6GalO`uXYmVj=Ps?J-qZ/$&N\*1>
%JsnhpK+8u@&ZnX[@;fQt@%a1#Um=XpYDpE!4C"fm;jCsi3"S)6IUP\[3M<P?bmh(Q>CLOl-AV\*+*=W#.udYYcAMct`V+bLf!OC5
%g]pn`h$Nak.gUUFjaA>J9'DHJbt8i]ZnoU\k6@Sk5=!NWZbc=H=&`Q44Y.YJB7YmXJB$[.^k\n!^O`tia5Cc7Ibs"T`]_1_O@5Zs
%THe@a"`9QY=FuE24bYRHAhE]nSYZGtn6R@+QP\Z+c*ekR,)li8W^;`(B+A_SP%PZf\+'7Kg-0<HXPs\JL<#VKKQSZmpK0p3W@I<h
%=Q2+gPLgUU^(`.<0JToL!^g!/Y[M!T?r]Z4^ic"H'[A_+I1%6BMP1%UR%"7[EKPg6pi!\I;'O2jg+7&R0-XI.?@YD`dJUZ@+57sR
%__+kCnS*9Drb4dq2j$0'CW-e(VSj"SCW=FUcYp\](t#*=*9gI"Ch,t!Z%!N/$h]57mY1S9KiK%K9_d3flmJPS4bGh3,qAcq(hdhK
%Wa<<EDrE0$#@`r?8aq=g%%&k,<??hGeaBMs>uo3)=>RJD:c62@X9AgWA[H;p$Y%"N@TE\Wl.06"dr8r3!:Lc+kt9=U$P1m1WJ^jG
%,Supb3F";NP1),mKD_H6ZT,E+4kVj<.;hPQ!HWe-<HNFOIZJV@ehNL%0.JFJ,WJ:?9Z+dg+TRI8_pGX4l3[r)"-?GJ&n_Y_8ntTG
%LAg[s6id,#m0FlaA'">0&al9D,Aq=QY@Pk/'!D&M\WaW2&VO-gBkLCp*95UFCHj'9Vk;1Sn-oDV)Dbdn6_o=fN?GfC+Q*JrADXgS
%M_jSdI=4P^)U"K-7i`CbQ/0-@hmCg>-#qHr:e8GMqBWT&[&u*ejq%u0,j@T0fQBC7&?Ye+O6<HH$_%<'QK-n"VC6Tt0M/7s3N_I@
%`@[+$1I^nT4EimCE`Yd8@&0T,X^pe&b#X)W_0s3U#f8m7F5?"QQMl&D-FYC0+4Q%Hgsh/A\q;>NC_n),?Fo1g93O?Q:eE`M/K7&V
%BT&>H??Z'PIZMGP;GFole>YeVG*$J8YR23MRbME?CK!NA&T)9gUJ0Y97L?6B*8KJ9l8*ZW>lg[o`'Q=-B:_C@Spd"Sqq)h'XI>5\
%?rjo([$1WGT1.CuG&1T^Z/4M->[b1NdjK]PioEj?X=Ji7g.R&gW`K=IW*N65Z:)P7$)DLAFKj/1GqB?#)SJ2=e&pC-26Asn]bL(-
%(0b?f?dNjI=9hNR=D(uBQrlu,H0=KQbM*%"W=!3h"$$Mm3jUMjXl^+'M6]BXQZZ,,cM];=QuWKKoH'`XX3Hp]QP-$><([b"C2jsm
%<L5I14+!>lF42qG0L+3t"hdsQ4Zp&W\RYY)JK0k1<cWQ^9=p%c^]iC\Hp:81e=h,T43?:dq-EX5/kt>M/aKJSD3WQH>R85$<<Cdf
%"#`JsF0uZheV%3V:9C94`)<+A:^UKrTee'p4K+ZC7@(0#:juuKZapM&>0F(]G=sEYF!8pb/dG_J98,?OAbi'H[W<F9c"C?C9;c6s
%Y%5!nrhVr1&@L94H;jAI2'#c@5[E5TM@c_U;;$O`GghOJI3H7M3PS:B]Fd9$H<E*U+*k6B^;AmWmQnJ!&To??m1u5ba+cBf4PG?]
%VQu"J4,D[7@Z,.$,^`sr2Q/#BUk9-L(e9q0?bpjIdSS1>[$>BN2TE&-^d^(>5+,f)N#)kK$eBT%ZO4YW>E#LI4')YQq90[.>h%d!
%7rb54dV.h-!3Pdcd@U;CFSA[^Qc3"T%o'0[43WoHk41n@"0523"\)fU(<TH-+u"cQ!Hu"'<g+ge3#kXEYfb+ICo/K8=B-%LK#l1f
%N^+#>pF'GBWb8_qbi&fq]j`T%:.$^_iK%uZ^d#<PApi-f+qfeK(K$-#YLk6Z6fup:a+g$ghLj>@;G1I.5,tO8FMf5.jV=M?T&YOk
%m`#+4[FRcmif,4q\jp0QCVRa)ndJ2k0"<7;oC4h7$AXVfU;9]f=ua<Te`2OubofL7L7)M_99.p`;pd!W6`Q&k?p+:2Y%$2g>-:PL
%EtLtd(kQ"8X^j4dnj)grNgmUSRGUYo(Qqj[Xe`ga,(H"S"?U"8_$ZFIM[LePcl/NPJf7t_SWeGdgqAf!g/>Q^qnHJ:SK<64s7pU5
%F;s!4J?=+6RZ<3mNRT?jX\S@(-'m">`pU@F*=Bj*T.3t:->*?k7!^9VP(1K$rD1JKriZG$Vh^c`ro](:rVoD!^\a5TO2(W,d;VjK
%9b8K_LFK:%.M`bJGnAGSq@aG]-5do@lBYS>MUB/&>%I8g_p8-m@'F,!n@WO_]QNiY-[1<I%=JH)X<6$YatQC.8$Q5B=]iWr3jS5I
%BnL"Kf/2hT-3d(kVPl#5O:".lMgc_>'>#fme(ik8MJ=@V=Y67PQd2KGl#ZLroPZo<7Ju+E3T:Q699Of$2kQ5onV>_mH2QWDH/aZ^
%-&Oqb*17k=HsNbUbDUlF()-_oIe2rNh`d8_St/Zeh&S_7M,*2t7,kR`CHki>=8"6WU71/S3-K^P/8iWSGr`r@<J09=lIV46JrsdN
%s5;Wqq>-C$U3?#o_:Gnf(KYCT*$Ig@;scef:b2ht0-PQTHY3+@[OiQ@,7%<1[;&_6Dn[;TM%oU9aM7$0kS>D4X<%Z4lt"L[Lo!rq
%J(p9d4Nqd22)ms*Z%`0V0JO[D7q>M/qt$8j\1tEqDO<$$:>.TsX1t&DIiRm[92LQ+:]KQY^\Rka^\HsO&)Vd/m8r3Fo>@b_rE3T?
%>i,MKiE(O%_tW&9qmR)cp?-r)Ru\Y@s7G(7IeX7es4tTmLmJ&As7=ng00fBsn)N>QqdeotmrjV!0Cq>=crDn-[8,eHcr;kIp*,,S
%KU*:VFb7O35oL^qVM.QW(%JNKWMVpI[Ti6&@fU.VFsf'<ON'+T8lF_UPsWhOM`uQN.t@,4S$u+;bj;!Qe]Q0<O?j]92TQ]YL)ISJ
%bMI^GOeMX%Mm<0ERpZ3l5CWJ$c/8Q=f9bFuqY8<"If3>tpXS/NrTdhjVm!i5h5@Hks3%U;^@k+3GS(?LA>Ph-^\[?L?[[71^A6Bq
%rp]Ti5CEG.s5p4L7BupGh`p#l^U\3-[EX3sk3N'BmI,MqmGEBhq@C"2Wuo(PreG:4r:$aOs6dK8^\[3,O8nr=IIdus$JB=#^@FL:
%rQX7!h%,"6ec5Kjmsb&DgCO;HDh#94n=RJok(dlhqXe-Es4-SPs6A?`?W+\rCN#0>FR@5#GVN1tjf@jbHMWECr7URd/_K\Z$PrGX
%`H\,kA[W<ma.HVLn7iDY$_Zj/HP\1gkUU\-QD6D(o);h!pk4JZ"d,.a`^PiFK/rR?=6P"o($rSVQEe-A-K7KZ^&!`g4a'5O[c'>e
%&Do,0THK):J<C-qM*rMN2n_P`V.NOp+aO>jpR]G+)'<VHCrM3Ob/:In'c%JNF@hl13;eXbi]Sk8-"Y_"aO2Wi&J^/-$Ai?D+t<WH
%N8,c!>n:[3-X.U!(P=_`Vh./A&V0ii\65KWUK-A(XS>X>B/u]cJGk<hR]Bq;Qn6EVX2X$U$qp8*$HWRu9WQ24.T\alGBaHNQuDlT
%d2[(U"@ED:+>fom:+B"jcmjc,_jPImgC-OY`^FP<YG,XkLT"AXOuhg!L3$rgc(cR4iWE.&nH`JYTV9.Mer:;A;mS1Ll6W%hC\uWO
%ZUeY?IM8`s,0U8/T-WHW:2'KfPtV6Jh7]XPEFe>?(bh,\+I#Jtc$12o0Qom\fc68S=EFQKC<N1_'.s_Z]lf+1Y]c4[\"/)3$!0Y_
%eH(#-3YV.5*e3tT<Hr1@a6EIW=5j&6fO,(iid:*4d$3!F5*R/H1C9GA:ejHQp7f).LkSR6';]0HO\?+XfI^5[X?_.$NnNVbNqF`Y
%'&a93Z<n/.U6rpr95Z9T]YPe6pfUb,@)#f9!!C?(2'^Ul@l?0YGd&Y=>nod_$D!#q073RNmTAqbIpT<nYK@XUS#(Hor-%o$Qes9$
%4T0F@o=jlm,(=NKqs4-;f70^+"8fU\i]pb*_0Q`_Vb`D-/ZL-PM5aW+$Nietg/=Ib8dusWi)jlU(>2jhZHWinCfeS$1tlZ=g:M]1
%AZ6d*W"`W0_IjabP>Y3XH&%,';roD--H8OuHuaK+CfU=,)DdHm5pt#dVP=9@l0;Aka;fCtR^l)_QG$q\+G/?iqH-jfDTRh;d-?gh
%/DYK5fUdj=oQF2Gd=OYXBuj/VI8i&AWpPRC`o`>mdU/OO_V[0dnEAV>".&4Vk6%<(o8LK&Dk.Q)elubjSppRLpfF^^?&T9^H+l49
%1bd(YkL2to<f?j5*KV^#F:WX+oS,6M`7;BFA>rV6a=QEu^_Z+[X1F(=d[R#2P4I0bC\d(2`Jb^K-5erd'G8UC3&sg8Fr!RUk%VEc
%JoZ'oLW6=&\/Gp;H:D/F*mi*Ur_\aNf0g#Ec,/"(h^Denr+5uqFFU?Is+T(N?U+:'gaiJ];M5T3h"E,h7YFo%kkPN.0^t@tXY^e6
%\!\r(/QUY<[SCjfn'UN'PeAnR']+'(;:H@q:.b"Z5q/6@,*=VT4YE[[3MQUP3'48u*N>93"Ko"$G6X5H41.sClj2p0)lckE[<aAt
%ea2lB[j;mr<*)t9*+gUL%6_a+W,ECNF=B'%NIhPKDIiB!cb:XhpQNrYSNq\[,8K4c[j]]jKZC*>#T)-jXW,0sY[4&r'K'?+IMB8(
%otfbd!_euX,8Itn/<3:?)grmb!a8[0Ur0e78SCtm$'O.;EZNdH)80=k8F[ti8GPF`YuA6(l\U$FWcS?9#dG_P@SWjaNt[J6ZfIU1
%c>OCCZ05,%M)S054+i;&*%7nK-h\0LhQEg.WoW?"@"`R#:2<@fa])_KOSul:lB`2rK/X"^?Xf-Y=JP^"RSK60]e(>cG&b`jrC02V
%WCdE$rmtBectj0m*5T.\1^4#Db8&O3^3u3[6)J8(E^':o^3=6DUp),?$TJ3pi3C;.%!p=sCn@5'`T&1!a7f)IUkZ?qVDMVT_"+e$
%I?quCp2WIb;#%`j3-hCB'Iup>cWm_R\"nIHo_>g@`nugR;-hR"(#!/o2_6;/AIkY(i(A[,<]hi=*er0_Rq*XMjWL7W4_DMXNQ+q/
%9?\Ed[(+@;=rTJmMIM2B$QIPf1JPdmIA_-,j/:j/rhQZ.Mf9Ka[d@PYZ\\sA7<bSB[CB8KTEdf`[F_1V&*g9F&t3q_NMM^Ipu\<0
%`524M?38l;7]l$`a*6_p)7>bX#4`t]M&$juVp0o!-t1$9bM1Mn3>,#%i[Em]AiUuL2jY/7nrOh(r.<*!@R5e_TsQt8=M=!b.Ignc
%$s7\mYrgL.I_=WeU:!\m`&(?6lB3!bmY'-pBAFr/I7AM&@gM%i5o&U"$=s@$TQ%qS5&qAWm[0(l]sCIu>59FCS5g6uZg]atL>f^a
%0l>BiQACBqZ`ZJqJh?WZKW7G+l^6MmXK9&B823p$I+bs0-KXHiU;L[eXOT\1HON'=aYq<WX=b\IP0,i'ZgS(mjj'a\If8elYN3Rq
%)=F@dqp#0:&)Vg3r=AX@3St<ram["Ch=6:#je)(g*57KKr9jH[Y<IC6Yn,`?s6\Fqs,;`]l,ouefu96Jidp!9ot,-krsuS/^:77j
%IV\qYhg/4nb$.*7I(:rR><]:*o`ONH9<c.m8%c:Eo-DnFqsVu"FU'$jiM"K/rZP@H@Zh,qonLfjSLLmihQ\kaVL/'_fd]aZ+);nb
%fd]maf:+sFQ+kpQH$"+er):*$dkCO2-:`(4`W>P_r1,V$*2Tf)hbYu;[>(-8/-s**hb;XDZj5E'+/FN'^C]#1geWo+SA(q<baPKO
%o2n*d)QZ)35Fh80L_ZncSf(<TaoZ^\N4;%01l6n*1l<h^1QQKm/r!AXUPq#;:r]TB<i>8Ami]7ACG"NlTQD$%5bjE'>,^f2!qn98
%pu)b;#eoY]^G?;4(b_9_?B1EB2ia;Ds"?l:DMU63)]jH>jCBK_j4MIOpN#nZ^N'1#g]6l@)VRgd`&3.79[j?@Km#Zm/0cA@Q848E
%2u^WIK6"Q9R95?PknUYIVbfj\BtEkMf(Fd(R!@_&NHAo:M@0MZ!,ct8d[P#Wf_,^i!34J7_5AI&q,<[EV("<&7oZ3Jo%eF_(bKEG
%mH/<0_>0"ZT+j.g<npJWo]F[P`Rjs6^p!GMptP]5a`u_70L`aYn!K';p&;@j]o4;nQU%jcn,/!,jO3rpcD3[(JX>CH$gUR"_T258
%"gm(XMU#,`R0HVu[&F95)BEEIk.q1L0dLmpN2:1Vj6L(Apr[9"k"GaHDa*cp`ufcUfA[$BrSH/@jRL4aN6>BoPt8(1^3?4"C\bKJ
%UKfok-?)\uhNL3(n1r(+1mFPAic-S>+X0^6S'i9P(g&4ERPOj^=Cu_=Z/M3J`8'LS=S,&)boA9/.k,i=%R)LIr<e`M`gInkJ@c%U
%l8<6f/oZOCkLo_D8s0"gZ_'/Li=*)Bf(;hDP5[+Q5aG2C9'r>b@34&tTe?BA<]Q)cOK6Cn(.b9$o,8`n[H8#96MfA5T1YM<&VWn[
%AM>fLhb:9'PZh`7feXV\h-Z,hrIFm#"GsV3Uh@R9\31.9f`B\ZSBq?j,EM%E@)[sF/>8kT3oH6eb<eN`E.oJ`]Tt@`48\PIB>erE
%jei=bOX"*NA>oZXTkgm[-iujajA%1)#tugC_)$^HVFl)!cl.^J7d[@j+UgY'^eSE_jYR%/9&K^b*0O_1/ThsT<.uLRW6:kC<.)o[
%nSB^J0gTIe,+&TUO%Q%\G)mKIJV9Vo.!\X)0!SIfj;p?L"VtR01*G:54!0A\o=?-mgT8f.Jl5cLl,rr)oib7r38im"NFFh^Cq@3q
%d?/Wn>_Vrt'm7?GAOcpM0Ka,",o<>G<5aYECFLg+<Ip$.f'&sf:RM$ioqU"2hnM[77.759(:i*5<mN.)F)3X8(aYF<M1I#Sf]k)G
%J4(NX4>ubFlD:;q;\g-8f&mGoN5Pu[DQtK[$7sbA!nM68"WY2U[#67pdn_[MnkAn8k,F+H,r99HUm52h(cn8S&&PI-/Be,A/nGqV
%$5":)8Wdd4^td7.X3`nl!t%L"X)N\LfPYducf!8L,6>aBXOET"V\l65^_-*&U+`Y"&73_eF?ERK&KrA47VVVnCcl#A3R*ogn/'5C
%an;_E3`g%Y^eP\([6pKL3e(:Y0Ht<9pH?7i%d=Z,ri]\-fp[qNTnp!jN`N5jl-Cn".hY^15XZEGLo2jj<"XZ7E`KZ/RnIfi<BE[f
%3eKP[e]SG9R2'mVEK;lZWC?'X2I,e`^/u^aX!j+DVCoBD*90muYJHK^dWQ@1Uo9-u$\cf:A>_*2Y5uYsZ'B=CL.\?A*kY'#9%9s\
%qKb1#7?af6[40Tm^InfCV.nVTP+u>Eb38C9KN+goAm&=sA3@tKL9]AS;i1I%FKUf3E?cr?L"]&oN2PM^jMKo.,Nqe?$u4kGEl,oZ
%?cB\!ZdPt+*HsoZG/UhD\O*-H(:eMPRA9TE[su7o"(QN30!(/n:j`nEjAld*oer.M@p.BX#auqV>Kh*:4ot8cS>c@4eO"eado;mJ
%n[#5C]St+\[::4q'q&'?;&D1&80`!IgJ5o9H4Y%Zmc;urb(?9sK_2UIWi-_Lg6#6`jd'(7$bE_\-0GX+YQ=D0%,#L&lm(M![qd=M
%&OdVSmQSmb]c&F.XM#GsR#\^:#dJEI.)3+S&5EE4\ZuA@O<9Gt/Nu]Ef=&ea!W1OM]GRX6]UMn_V>,@lUL'&^Q)!D019ko@lqk>J
%A`Cr,QZ)Zco\n<iE>q3ffR0gCe_0KsV:)6@IgBKf#:"?h*'r!f^-`n?$15[%<lh0/-nr,>_pP0IJXidYYA-"*"u#C#,c,5ol5N?i
%:Gp@kfWdCL\N8]SD2(+,EdkIgZif$BrJh=g@h9G!d)LUS<;Im=PeEZ'bV%@>hD'nq)!Lo1\2H&L#k_l@T]06#K[<i)HA9:^akmXq
%)'fKK*jmB%f0Ys-D/Lh!B$0J;#%]"L*-Xbl2jPOl>^O/&OC_A,(gsN4ar(5>kZ%CZTV)p0Ho_r1H6EUe%Dm;>>\)oMB$l*7?cTCd
%nSnG46QaRN3uHn&CBtCkmNUi[0$r^(05,akj`St1Qi4TK]^&q28?g=c>0#>5PWZ#;9t%,QL0*RgN@VU+D@b@Nn]LW3)MUGE@!SpQ
%X<@WeG'Wem.s-up%?1n2]IpecZG.JF[nT8<hd=#Ml9jm16@ZD7TQ50&Q0^;*`YD7$KfpNM^#E&]L%XRUpdlQVop=S7nCt-2IeWg0
%^Aa[/+Re>KII5;Zq:gDslI.],qdLr<++3KV0Bs?:Fh0KGb_,bG4o2HkH!=(e)o&M&dC9)H?[:1?qM!g-^ZaGOW#emgPl=5ae">\O
%XWRT`j0QJbkJ#B!Uc9XRrtJfh@S<Cmr6_%2YIMGUh<",TYO6JXs)?`BT"X>Dn@drX?Q^cXhmTk@gWoe848]'4G4qpD8HF6M*hoY/
%F%T\-ffua&i$QTE$fFNX0EoO#$N`&'+$FE;b,\nB\\A%LcSs:qHgumC5""!jYC+FW5Om2#H'?K$N;.;b;IN!9^#k_^@/V\'^BOo>
%,mqh2gXk<[kmt^PT[!tg!k]\:j"h^lWUjk+6qHpD1O.<Jh0Jr86F?42T@ZP'VQY>aY<*7BJi@X]?Dqm*75m9Cqi0ph#p,FHhcn]!
%Or0(->bJ)N(Ad!--jYF`#!CdtZ;/K_^AV^f+%>'DBKEf5"4^^1cX(dI0#)]uj7@/l4$2u,YLhOrm@+[QU3th6=I!ts7pE^6igV8'
%YZL$<M&T&2s+eeP?p$f<rT06%=;$H._j>NSbf]PRZ5[g!`!q^0]=mUu_i)5m]@_ShJb0bN0Aln!&WM=B\Y\</",q-)XTh=g+$$>[
%6^?g<=f?E(\SqR8J-_KC]PDBFNSqqRaV1AtgFpYQH"k:XoB#hO$Zu9j'0JK2hKA_n(VRK,T\K4j6fN-HiNj%PG$\#?,8]TeeqS1+
%6F];t+U!T3b",+7]ko-[8aPaj)6jlRThXe&DF@@$o5,lI9FNj6^@$C'XUd)]q?LZ[O3SdX6o/RoZ&61E3J*YXhlsprMrkU)8/WU>
%YL>fM':9(jfY0`P6*,[#`]e/gOY$uTKa!u)0UUl,-#hiRq?s]:m9f:![l`7l&4s6rYEMsXBd^YIJ^0Sf8\Om$VS5LV#4(1*'.;S9
%O$Y3cWR2NI?TXoUg-TtM[=hql/Y:4/LORaJjObTb[bAiEEtd*;5^u+b_lHe*2SGU8Fm9Bfhs`6FO>WG.mq&J9]qH/;<<K;^8)"AR
%M?#%2A5qQfo-]u/nc>l20r;W7l=GM]A6/)AA(up6)-.<IKJo?5#A>EP3X9nERbjF?LNK1A@2E$[rp5LJ+Yj6(D7VKPoIY4HZR-@!
%+;DXplSBbB,DTZ!NO!Es\ZDB\oM#DiMg=@6!0YeTNQ#SATRrP.p)IgK#h"7"^=.Es'WqY=.cQMi-r,5MgD,;^9_kO2;%aH#7j^g:
%2n2`$fEZ*S;i]$fGB""bA3A^"?SV&$_i#.(#6,O5EjeS=/9O4IP)FjB`Wjekgr/_6`bVg$&KN$Kj]XO4O;cdIJJCj49dRMMDbh?8
%#?p&&"LM,LP.?jA86>@&E\"bH?\&u5UB3l_e!M[lm?c3R$YZg1"sB]EIS_t&:1/]n)e$196AnaiOA;7MK\D\?LVjZAW$!EOE^8t$
%!_R?5O.7+hmPf>'iRoLQr*4WI"EnB:<q7KPV16]F9\b@pJ1YU5",l^`:fPNr=Fr4E.SN4Omb[:;(mr:%q5Z%D*Egm6%>9"`Z>\gL
%jpT#6=6Rq![OTiSgQe-1"3s[?`pai,HmA"3.ddK6.\pS6<`;;j6pDad0iW<r&*\+&_]<"ZKc*Vk;(;4A1AR7M#/M#[B)!WnWleo8
%cmg>$Z_db6Q;J7Z'f#]]7(,I!o-`EBE4nVi;sg[1hc/MYUbJST(U@EC(+0I:`Boe;Z\l`2G_Th?J`Xi!dE'gH&X1[R8'78XQCQ$g
%ltp=ad"V*F#S-=h>W3$nVfOB@CSS*]+js9HNJJopLik[0@__8$S<ANtIsF4%+Wlhi@mLoApK1K<27'R*1PBb!WNE5h4]'OmY5pPP
%V*<r;!qk],L.[+a/1:]:=ChKn$Q8r%-*mLClVGP\s5UlR6oNC2XS$.Jb:i85)h.,9-*hs`#F7%C^n6t7p8&j5^\e36W-6ApIY.L.
%%sabfQ=19u.Fu^rnoJs(T4Z@7n3;OGl_di@;/5gW.fYlmCe$FFNUr&@fj<m/9TVg%^_pk_,ZLbbf]ZJ\GVI@Dnj#J0Ak):Z0fMXe
%!@SDDS$"0.cAe6'Ipo#O<=ntUn@F4u9L'K+r]3$-/)(+/>JPe:e-jX0a6l06SkRW9`U>G!564r\2WD%k/4*"H+<c28`,e;i*F:[d
%"o_,DJ+Pl%73_->r5ll)"2#@BK&K:f*'j_7FFhZU+5l8E]RiDP3KuS]q)b^9KN^V#NtJZkY\hO#J5pXTD%hW5d4"6!*\Kn>7htfM
%o6$f@+X<<k`kBHmQt:"lNq._O[Q)+R;>b6!=?/E>=i_FEP#7#*Q/96a3,p%e_2@12,-rTBdQOfB.ar(D2,4Z5%$Ro-oY(An)ULuc
%*t4Im!nraN175dG;^UW5ea8+%CT5XV4ElCY+-#-_r":,$JUfN8eFBl/6*5Zt8LJrJpqC6qqUkr<&+lTZobg!2p%(e"^KcnG+8Y)P
%fP&e"rX&5?X=)O^_d*,CK74^&0e'm6dV#'>O0j6Y"Z%Yn]e7<KUgX2mPm&'<l,C/<@g@GqHHblX2.!gnGLdjn23.5tJAg<QaG)No
%)+D6/[/K?Gec=0DP<fdb"q=%P)#(F[f0=-94_naTfTPt&j6F([Zk*XP)h0fQjqOKQ!s\soWs4AA1A`tfD\8Q'aNO#NMleO89jgZi
%8Lk/PAc?OXrI8ToJP3Ke/XVD5rZj>rW.^@re!+u[HgLG:W1VI&dioom'5W3B`s[ts3LbJgKei*X3`(]hd"j2qhS+5Y'TVBO$a>-b
%Bol"hlXc`2E9H\5#3cfd,DUK#'d8CY6sl0[0jiPB9OIMeSQ,Y8Oqqas\=lOt:srIr$=C.R+:4#f&bt.APcZZBbW;D+f@_9J>\jSb
%We"B:H"hXH;un1!Gun.I%VbZIK:S1VJ1W!XPXbmV@-#+i*4qtM1#JQe$U7WM$G/0B2J)nB@Go>S^:,eW]nZck1`r19;ss>Ue7,Z4
%6=;]l5hEhCK=l8Z(;&kNT"IAnSCk%H*HTY-,%4[t,U_3($sT5"T0RUZ6p^H-T\['fJkefF3PfFZVn#a]?SnYRQiXQ^U)T)'#-"qH
%I`dTJ^99dd=0:_Y2?_,Jn;_/6b/&DB7179$KutgbmM_(TL@t>aCsi>p2:/"Ud[/FihXGV=g-GfEe<FR+q[L]W&u&#t=[llUJ90PD
%CTp'Vf6-WTWiaSb.9FUH@K%=@VF:Tkb6/?-#GctSg7jpC*BVc#=`IXJ1i#=Jh1aN^,]3d.+-Nh5]F`H75m`*)U?&d@(Go[CMVhJs
%1NZ_D84\<f\W_K'4p+baF@J)`.MTMQ!H;5+Q%6CY+;JQ4XbZdKR2@?eA"L8S(32Zo#e7-!&;s4"-niRa"+V:Ae21"E;aE5L]0f[i
%S\IH>_*Lu.ABt&FKZ5dPioH*'#jq*c*ci>k%l\<I#s&:9Y)j6<@1JMjHT)QaE5)L\.TnipW^<Rja@Z#j/>@!%_[3Y1c.L+oJq4rh
%*dV+E+&=Xm`Y_?E48BKjh8q<L\T7V&LricA)h\_qMka8k:iSoge-BGcCS33LPK<g0"HA8t$`JWq/)41*]hJ&3eo=IF_UO=VL+>&q
%Kg[@\6\V<kM9\u+Ge7ns7,""?!#ftqM4X@I00t#:X:J-N,M&U\UJ#;dW8ntO0qqqSo*V/?RD`!daO'k(XcOG'2"+Q1#i!epFJDgF
%';R`.5oUng`^+:SBW]PO^9'oi-aHZY92L>+lp,<MP_).hbQ`P`71LP%2`**A?d^73c-]#.jH4XKX%aCDB6A8(7O&p2$;Ma7#Z,!@
%6pT;aK(+1?9u!qa:'0Y<n[fYNM1B>LqBIaqUP(([jN*RL)npbM-ZA5O=WY:-EGS6l($/0MB=g_-_*?%EMhH&\RugfIp.WPfL"G:X
%=o7pVCA-CU1:ArhNUnria?nQpWQ5m.;``J(@'[_lk<jg;j1mO&&-Ir86Q/adX!h(=-Vqi5QdXsS5n[0WR0lKlnb-J7ia'VHg8882
%1dqV%]OM_14s2FGA1WpR#MG)h8RS2rYt^$&I30D.U/9Bm4]!0&7-deqPS2#kGtb)a7Q73]I#asC3Qr0,7G7&tWe-,,9u.p=>j3*6
%^e%QLKR8nlF0ZGJ'%C#.&em!YlpJu`/+K["pV;c)29cE&Q>n9^:0Wj:Q`-8bddP?Sm)hFBR#"fhj?c$25ZtG'U?$&&Pg3Ej8Hb!0
%=CF+"'5:<Q@Fe&L9[<Y@l@s1:@9;H+#td^i])o:j#DVIOs(87PaIsj(ps#ZRORN`=,fe.1705'6WX']<V`UK@(-E)Ri?(qjCdM5q
%;G-39"eSVJn#c4g!@sQ?M_(jpAk@>(Ea,T^VFjPAXR5?jCELS5-S[7-<2EHV9*]Q)`cDpFUA-=YfpgBXZD=jRF,8Ig=W)g3"ABhk
%if7[74CcKV;T$@d2M@_,0V`dske38Vi6")?5T<IM%U8Po]./^e:*efI'"btZ).H2MDmI!R\H'lB:ZCfB;9u?%]c!cuA6ANN2Y(lE
%2@YNUTN)`;K;*-U#cj!f8Yafl<LC>]#f/Ps>3-G7Q9kb^.cj'@A-eW>p%[TXBc!Iq[DZKCDT`Jl>SW>m/Zk"HC1Ru996/Z?_@C`2
%5_lQgr+HT=DO1-[\?',e;M[/][CD3IG-;gW+=Of9d8FO;r>d;Q1!kl;!!f:i$G2ub@saqcR5Q<U`S2';Z"ZR/>PnD>Qm4Y9$^scU
%L\XrQBEj6<US.FOL8m]-fYrST.VsoGgQGh`1p\FI3a#gC7!1_$-o;?4.i]32;]T!9JEDg+g0W%0%+HB?.neH,35DqR%Mg.,S6oPu
%l'<%[6&p5`\T;FM'0b5++oDXC8J/4-Os:TA.B,?,l.C7t)\1M5'MQK2N4WK$NkjbLq02-W%`B"Q_I/02"],oQ8k?64>u-MOVn]Es
%Bh+pa$?&3%H/M>U*Pnl3[URKr@GGNe)LqpM%-b_?$i.e-5g-]tqaHE548'<-rf)Z]Jon>)#afN!qM_^?%/UtlkMmYdA7ttcqA=`0
%'jO!A_97M#J<\(L\V$@t,B$`;)uZdq,_5;e/>\kl,Bg+*F?!u5`:4U_Ks85Zp9VEC5aX=Gn/"dmL:OUEqpC>"%s*Q_=m3!_'QPl0
%C3uQ0Hmn<Hb0XCH]nc<AKlS7N^p/?cTPXR@O=?t26t&.a`T)Z^7#uKM/QJR0c]pFP"-1:#%BY.E[\9t7=-("OS.teShGU(=0c*tB
%!Au`mK;DX&qUm1p(:Z\#3i?uTc1-5lMi+:'W)GH_G\2;87!(uQ\#&9V6X?#F,p:qJ!_.,0i;U91XLs!dmu@]b-o\`aj[<CUL:4Hl
%VOV/0LPguQdHS=lF`3t]l0B1kk)H9UmpjDtR.74EG-JAR[uJ!nMQ$@-3KH*o]d@E/+$YBiG_+;Wd"ab/i1=LIE=/KWHYPUfbGgI?
%oGY6HU(]oo%2FF!?IkO(I6=W1IB(7V$J8P8n2N5M:fnacMgX_Rk"b*M1WjuTM,o83f;c`jiqc5[.#O=4)#HEG'0C3,I9SKeDD-I)
%^2>"\=^g/Ul<'S(4o5@fc2,N&h$mLAK"=X@C4nB(W'D15(TIN#b8">`6EQX+%9Be*EK&M.h]7\\"]UYfG"#"<_Rlp_Pc55^+]3n6
%P_U4/@BIC$aC&FPdWdQ@.7aulVn+jiBu,<.]?`l=DYDgs8$rOLWD#O>qNYucSoH6.SHLBL/R+o&6<g.Vp97S#90O*1_>6ScHf!=)
%]6#tkrMbqpdu4:\4.du_YJgj+k731f&VgqifdsftGNn2Q<gs_J[;8&4>%q+>Q2bg8c6m$sWRd_X[K_Fie-p3nQo1?BRn?`N,-WB*
%S[5X5;D9(VU@Z#bBHU0t^,RQM+:+1:F4peWTlG!be'3!NK56"7[8^_X_KY(7PQP/q>g*0a:jk"_II!%[7e*%I/5tW2\3Hf)C,H'r
%]5M5mS"X+<qGl>>]'acH2e-f\p@Cep;IT_d[NYa=`DG?C\iNiCX$uau7Nnr+7QPWaj+49.h3u6b3t?;eNO,dB;[cE@&_<K`;7p3/
%qk9%DlH>K]_.>ZP%F-p('+\(!^8ZCoi_`kU'K:6%"3#u,<F>2balfkmZieIp(LFjVko"K:h:@bC=R?.n'QuYL%D$=eEjb,n^34K%
%C<r,*C'O(Se1a[Vbc8eKR'u,cRif-JbD<TLRqEL)=PFSsBl$ga\u6U+AlhB9<OaDN/M\5WelR^#S`M]j/DFO3Ad,M)QHWL>b?T^h
%*V4ZeDDLQ4l!^T1]R=Um9?<W'6pO*Y;E_.!X*)1]+hk!5s!db\I21E?7:[k%<B\U#\XbW7XZLd/omN3)P22E92H*,Kn[#QVV64Q?
%J2N@np410BhDW'V"'SR9A[916TA?9`UaP2PL:,a+.&n0okVNL;.W2]JY^eJASR<j0+kE`k!On?C/t$SeJ\GssgoNP./i!Ul@nq$_
%UCNj=S?V)/,63k+3di0pT'`47gG%B.OsQCI3[#8U$gY!4J#JU+\I:!)o';V(nlE,bXhXJ7P:s3YM>sp0Sj%#17r2?Gltn`%p?JUc
%NHKC`X=*WL)Z+gFdnUC!*h)7,;@Za$'fXU$GjR,*XXT#le\ilR$I..E8gt&ES5N(GEs6gt@:?XI++?-@TaZnkm/$[&-`l-?m@PuP
%lS@9PQnmo`a>"_":U'd)8Zd*;d>`]pd#"M1c1HN;3F]p[>j-VRnZu-tYi%Y.G*L'7H6B;p9A^-u^Mpe)42gs6NVCN=OEjEBgGtOH
%jF`V;7AH0CZT5H90K`8q`pIbDSg^g6/JV>\hEU*LRW^EZFp]TPgf#GSlE!qQQY-]k!Z9-b[f<BB)bCgh/tBut)r.fIMAM2QYX5mu
%m'$KchR:jWP:6?F0cIGo]AD83)RD9;5BiQjJFY$UFPt<Tc@XGFhqiDri.jOa8+^kMNc!.;@^/p$<$H=WDjZO-"U3sJFeX9@KY#Gk
%e9;&AgdaN^EjNr,qU&V?Y/l2`a-Hnmd,MC)g-cRub$.M^5-nuf!ei4a[Yg'p$`:Q@m]^gPR'?<CT&N2bQJl")#U)g^RQ?@jpWgq3
%@6.nLac>bh>2)5_-P>gPe@Q.de4)j=LQpla1JWs"Zr>*99IAS*'Kb\*5,_?njZ_$<>m4j\P)fV)=lOg^9+k'i-%98o1*'G0h&;s:
%Rs;4d<>+@uJuL0Vp2#$N%^Xj#2Qa^q.LOm_"P9G$iXcpZq%2:?]@.H!r))BLc.9?3>X4NH@puA$R8BSM4UTF`K#ggj"\CZb^AQ;3
%MdB/fcd2&%EOMLP\(ED!'#W7>j+a%*0eYC>q]GPJc?r@]iu`-En9sR!#?JWldrTBTo2R(1561r8jtlYnjKYi&bI]DUTMEBOM>KOP
%H\J[*U`DTg4,Am"YJZknhKJ]t+Wm;*Ttj0L@g/3kSqXc#D<LhJB@-H#(Gn>Oo![c79=\`7((&uG,ZfAC@DJ('*Z9M99'ZsJG1Cb&
%6_]-u]f:QN^A%jaf<Lk:aAQ2pArS>p`.^H7i09K/[UQ*#TlHOHB>QPf&XAC6.#H(Hp1_%Pq0b(_DNSMnpmAU-1u/"tNM=&A\gL6g
%5roL:hhA&nK:_0udl6]sO'/]bqnir8W:?4p<XReA@6KgS`=69rBee.@>#.UXcPMh-77!jZ&fWCf1Wl?oe/@f#4"i<cicR*S'@Nuc
%=c$A\T6rObQE046(HK`ucUpSikZ`e'@k5QKbKs%X8fq>0n!#.(Zq^J`Lr,-kmLl8%Ktk0`ccBb\FZr!mJWnhqZ5jndT4R^lGEsJ&
%-E6/P]hRlXj&deXJ3:7:(up2TWqd\K];_HE2G#d0[`\YB2'QCj-53$q[>0*qkE9RO6]IT[1F6.\'4s&'@U)g"lf^H)!M!K=A.?VP
%1?="7hJh%m8.de4c5!p;\)+dV-<MgBmgjtZS\Su'']30G%0SUhL[.W]W&IW%]Mf*Ln97skqd-#C8)q$',45`WJ*X?bG(55ZC8#,q
%n?iq0]VH1?,F69Ah#n'BNKYX.lOKc;o;4(>`G8(Ai3On6M1;AV9XL@CeUVE-f.]C>jad'OgoeoJk1!G5$PHVKKs;!3m*-bTYn%JI
%kJ[T5"'ud\2ll_cHJWTN=g<^4NBbVm^$!7Y0%J^VckR>*2hZj/;(rmLL'm5A"dI%6S[5;p#Un)r-'4tui\%5+j:htg77AQ5T'#V2
%I)BjgARPdJnUg(@Q`WQ4%.]OHDW$7QP.o'FW`UI<3\**@[f2D?qD*`XE3%fkQigp8V`k^G17m8i;]1p0q!rN3jE3,EB2X`2%J/7n
%+;5,=4;k9I:dQq@#niD6gt_;r".GX&!d&9tJ8<3[##'LdrS.k4G2$T7_j9F>AT+n(MkW<UEtHqjI>i]Z[/si7+EMgr+`V3UJ>a^(
%!`3SdKaaB2$.5cT`9=ko;mo#<$HrIfQgE*.%bR'>__OM_-1tN=\!aq<N,`gZcOs0'g%&[<d$jV26rd8abj<%\DalGHXKPnf5VU`l
%fWg?rJX`BHG10d:M?Dj)'KR62P<jZA*EmOc0N001RG7=Lir[2s4^YR#ZAUr"DTIbo;&g+PFAJS+R[ZO&4qU+qq:gppF)Ld?1a"RG
%r%ZRX5&Y[NI9tu]R6D^RgS/)Q+Ci*NkQM5aI1DL'/VJY[k(>2D$EC?ZL;F*34k?tdeePC3\5%,)Lc9p>.99-\d6diGT+d@'F9KeV
%C>9CPQ,(e_M4Huc#prY*MCtY4cp@=2j;QM-=g_[6Qo+aD,BnX\KX&t!C^V3BUX?6#6#[6?dM2Oto=_5saYXdP7WbPfq[='b$FHlB
%8uV.R!p[6qk<tQL9W4$G4<3I*XRPWe]=:]jD9&[7/Xt%Pe]%P@<:OOUiCr#&6aFmjV5u\n=qE8cZRKi?[QFVFd[:[M0`3.9d9hKg
%>:nX*5K"R[qm/$'*Wp6XE;B`c>20MJ\PQdJ,??WkQrt5()c;lN&!RVQ/<N,QY]P4WjkOA?39/T&s/d/WlYC2'f33W/fs/RA/g?cY
%.[Ab1au2F+I\fbg9ZuCbCPC+iGDDk9G:1aSG9<qUBS_b?Ga>b>!G,OEn[luRWPZ8Qd5TW/(4)]tg2/\YYKaJ;b.*ehF0XS6GKJ$Z
%@i:dl:Ouh<+aMj18OQ=(c94'eLQc<!4ltapbF[7<1XfR:br:'1;o>6&gUpGU4Ep]`7<O?jFe6[R%,8b`oTZI,b[&8;p"[#HW]SS0
%I=!sg%Hc"m%2Jn0780N?p?['sIbo-d:P[-04#V;!qt5ZISdG'J],a2W!8ANXHgQWu,>)XoIR4rPQAdS^cb34@4g<!bmGq$:$QQTg
%6F3)9D3!@O3H>6;oQ6QsK*jT_L,dHM/]7;%NCoY0T1Y.FX&hnW6X\7+*gW%g)QLlLXH6Z8I5kaI0"Pee%aO`X=$Aun+,qaeEJ#GA
%k;.U6k<!*8([>jPf+i9CUegL0Ac]mb'N4f9kQF@K-5E6u\ti9.Q5iT=i,q=1,#DYQ%m*;g;QgDomkf\3o-q+Z;d#-(/;1t/Gm4jk
%krm(r9TcG/Aen.1b#/S<b5\ra0AE`W3Nd`GTRY%L"p>"gpqAk28fU)]c2u5rQoCb;fHV!Ll5$l=q"Nh3*:jGs\G'$:hTB"I,oS&?
%:WAC``SB8(h!A-t1;ZuGU3r]j>pe36M-?rcBq(6fWb:ZkmWn*qE#tA+OA<WH:ILhl/[IFdLc1!e9U(WZ]EL_i73P9R6CZEa/8hR>
%!hPRBk3Ej):T/MjJhb%uV5[S0<3ITBC%B(Z>$=Jjl"4pXM;Q*o?fM]Z<n(blH3k88i<&/1ie;>ZU"9RV2lFI1)J3J]/t,Ln==i#?
%?2(QV/_S:F\XuCX339`.k7il-cf#AbA33<#58bqAP&c)irmW8m+k@MZa+FUB?N,'%3_kgCgh0%-3?)noFabD\$NE*#4#Q4f8)scN
%-n%;WJUpChFt%!=bXA>fVP!)ES9Rt6.#O.Dd'c\rB_L*tW"e3q?q_;=6>%\7JJk0%,_P?n_#7*7*p6r!;khPu%B$pW)>QCp`u3Qs
%7V`?E`%e"K\MTc+ogB,6eRXd6B?LX'"CsY(Yd95k>mAY9:f-/!SO;rN+baq-qELi+NEL@e#fauu1`"\Z?9I"qC7r(',-kg\jBDZM
%J5We/g,GUcLsr7C/2c-d1#A9oY4dR.bPl_Z>K5j#M:Kmr!U%.2ST]*6i6/4mEu_=BYjP/ZC@QrO!`s:^-L/L#;LEem(JrhXg*A.k
%M)WoV,QJ2-@pVF'VRi>'[ihVk3^g9_Ch$;^m1'`N*eS]q5-4)X5TU_-CiRdeJ38!i1M9R4c*.t[pL=cn7a_/d+`@nA0TTqnkVU]"
%5!9\^_sBn"$_4@Zcui;_,<A8_+TV5a@4`d^2V^_>=$m9?DJXoX`3T?kNp+-CkEa3Y8Q12bcaT`?k8t@V%:]1=aV$68O:g6b/k\em
%@\.DcGI(sfOD^(q*28jkV*Cm9lYK1SfeR@WI6r%'3_RG'h?>'7G4DUbc^#!Wh*_9kDUt!%,[)T9m(7\Up%(Eh7s()4-7t5gfp;>?
%U<7(,<6uN(AUe;Rp5N!9S#DO^O0VXf<'q+lYCf!'m*^g/.LRGa(HcLd%HXVJb#W:'Yr3`gkSc"!)<;ccPWpdI>H4UkSlq@RD3b5(
%&pSVU'3I$4]99HK&6ti(>'4t(Z]8"I,*3[*\@qF+>2tdI$"TT>q^J;om5!$;<?(\b80u1.C2$/)(FkCr(i303J:_[8d7!(LnVqB,
%(S0*uj;;dT2E,jR6M<N[>ETW/&!M:+omPr0S8=caaC26aQ4>;d(1n;G,^(aj:n$sH6as6T=+\<QP&UQo^4T5n+dIh<B2R]`$\3Oq
%Bq?WNe,6NrqM%c(l*C$DN1n*TBEYUD#\ENAG$,N&g^0O/1ZP@8kua/fR)C^T7BRe6@+@*T"@jV@;)ok1!=,)aTeQ[c,+4)bjhMFa
%bfo?#Lb:JKV<Hd.^MR.,QLm&l=D_jpJt]+eA:YaJjZ%VUT#XP(3`l4b^5]/.7t3F>8OZ0j3M;F"SYEbD>+(8fBHtHd^fbf5$C9q'
%r,tLRdP9>)TpFT_]'FPLH?X2#ToVOB&Dom2;2eW6\:!?Cc.3k32LBkCFmdE)BPPOfr%$;;70V>DCC#O'eXEG09>p:\fAM0>U9oc;
%:BJ[!=N*F(DA/i99%%hMoNUl!W^L/j@7?nQ*W^DnNW[e";;]5tMmiBrk"WHf'aL1BS\YZ4#!Q-(Q]7=TEflG6Z[uQ-;/O,\oC;u8
%KN(/SlFU'PK,Y4iA1?a&^`8*YPT*kHb/d6g2`U@/!fa<7W1`A#OBfbX'ZH*Cf28"cc!pm94)Z+N^;-WT8@/e^&XO+u7.P]:=O5e;
%#LMfGNQ<$XQX)7fMiLL5?97Tm!,1LaE(N?Q6@"e`Nido3n?T!bG$QC:rW"RlGPZ%(1nf?R:+&<;4g?5fF9FGMBKV@!ED1Se%TsrG
%<_DAh7!1"u-m@VJ5!X+;W_U[uC!Y/2dnn\>>7qP#9PFRXm3sCqH-31/`g&:>ZqeGT&j4NP^aPuAW&k9P_]b9H(6`)J'CD`&iPU;Z
%@QQnjIk&\"(7+S(g9c<t;OPoHK^0;WfGq*cZ*l3`DTF#,=!c(%;+7W"Mp`pQc)AI$=H?Cd09#7T`UU=DXc)QDNWH@Xm1j?K:ILU?
%5WpW2'1GJiY*0JM!gCfr:_!-Q(oM[Tn??"?!Rn_V'YTPC&5Y)09s/5`1+KeT"fQd!9TRr>kXgoM*DrP5(Jn-6&Fdd@Xqit^\k8Cm
%F;C9Zkn&mh[6Z7G\[Y=Z/B:UJNon&"P#iJVr('#r'p6.Hj:*DGm-b0-mn[ePA@)j9C8"0UAQj:/1fm!tAZZL[j:'-@c.,58%oI$a
%NtZ=F8'jP)7%s-,qRe-gf'KiTJs&$'hq[pu[Y_+I1eN=O%7-)YQQp%U9W@I"+&^(kr]&;=6nJiO"gh@lEZU\0YjPCpMhTI#i"]]U
%m3%Nrq\]][,&*8+@1F#>OeS^9@E+ced"FK9@c9,;E]9tXV-(OK[+#-)I1DA7OHa.,0d1P0Rnt&*%6WVc=U*R`Rs0+qRq+RV@!D'u
%;rfNuh9Rldb,!bdrS\6iRo"l(6g6b/EZjPUS-EOFb[%*PlFuiIV]\F%W@Xtjn'=h0Fb@gN,FM:,ZQ=1m=iprJ`_B)6EP?:YdG$O$
%6Ae[11?:%!,:RM+(;l(_%_,<47P8P4+p>m];uTaL)ec%<K.&9tNj3FfAnZ09h&:osoJ<HLlKQ\mV\C$hJ6b&b?i.f=*QE1.1mO+V
%e21ip%u(9#a;?DJKeqdgh4RK@l_MAc-GO&I(I8oBd%pB95p<^3Ue>BEA`#F.3[lUN\PBA4!&[o6"%mN`9A_Y>9i!Wa6Cm6RHYPi5
%=DaYg33[97b?p,4ESdKPQPl,(&=@-?c'1ur"Vd7:J)A\"@#flNMmgKfR*2bfjY`@0TRrn&6_WsED&,Kra\![8,gT<<PpYNoDTWnD
%&V40/D8pO.@ZE`LN;$8Z6_CUb*I^Au:/"ln5glgmiYE9UjB\T1>36o]PaWXBX3Q1KiC"od=BBkdWLbHl@u4BqZZB[bG;)U3?nRPD
%=./d"d&_l296TOH6<jT9!gDu=Y\9u.akX3iFoQ13G(!":AZ^iheeQlc`LeNSp)r@c@'O=*fBt2FF!uuAYRU/7RLH3:!BVXtKEhr[
%V9Dk(h5"6=g-h.heum0S[$7X&4jV=F";Wd,CYGe'i!b/;.f(I`"4ebE]t&G1Q/d\g@bmSE#4"rkL(og-g4BZ0b7B]/Dh@2*9X&T)
%Dut/opDUkG(iiPKlcP`?-nc=4>UR]AWQNFB\Q4A@\RTB\;rar=jq61fIe7nINpmmLl<q*S-q?bs-de7Y2"i9&,`?Ji4?%6eFc)C"
%LEt9.'3.!tOud'D$K%JqjYWjH>al'e;)Gnu,e-iHMirmtA&=,A5(S"5bk%pt=:37FBcl]Xe9j19Df>C>"ILSlUQYB0h9XP^rY6sH
%1`j)NfVCB>GP\S4>Z]*taU6M&[WGeqd/N$Ee#6dL3o"!PEV@kQkA_0T;O\!O^71)meBQno7L29-'g0)<b@*N2:a7;1)'_pICB''G
%:-p%sKZ%eSK]<!\Am3ffGQ=Dn:/kYb!L9?b9\haV._1p*f7irgdGSNg4Vr;9hdX%s?CmZI=k5Z^6eQA#McD(!&E\fa$#jSlU/-r6
%U1'MHVO:9D?EM<UpG@pE%G'h0\a<5@T82MfUq9;ns"Md@q'je;o>8O5,-IL<T-c<(M`aYbF0#ZmKq9l/Wi')qm3dNYSqfa<rc[HH
%gH7$m@TjE0F<\V/BQQKK7_Eh^2E$Xtk#i9F&?8!N:bJbK`n9$o\dp.NWD.u+jQCe#,<5#V0bVI$3i69s/\M??$Lb8bNQbg!GGu(`
%X_r;+r%QN$'TFLa5H.QsW9d;sB=&^,ED_<PJoW;X)fi$%WTlg6Q:9nmY!fcD\Ei0!Rc6@k%s=&l7-D-%nReI[#@B[6b@jr764@;F
%Fch0FBU-E]'F1HYK>AZhM2$E7%.'Fpn^"R#?'R3nT:Ng3[OM)u*h23":=5pKZ9SeZEI9H:@87">.6X8b=\X"*?(5Z^dZ+4)jP3G4
%.iJHrUYFo_IU1H+nnF<T;QCBA+kFV#]<l#i?+La21b"Q]YJmkd[G1-ek*`JVgaCK?dhedU_B=Xs8d;,&:oj3;Ll#"T'.W>!9t#tL
%@6c7Wa`^W8LNR,;6b:H!\!QV./2anNm)[A7#n$2=OKL?s64$>O>`83%`QibR!XPk=Q;fKuK8^*_D;L&Hi[RL'Xa^".ba\Qg-ip@2
%g:(jF03LoAG6/K=AmI4Z^sF-JQ/UN"Ro(+8H@Rhr5rl.rffaRqG"g@dM(%Or/MBXl0U3_57dDb.]4=E;5D$<gbbHCF)%)rh<03!e
%XAC<oKA)P;j6\)%W(AbZ!#JVYVXZ6A@p$40-.8nD8G)N+R*A,+PaMp/P-XOU/#8WjjY\HsP2[h?<AC,ALSO6poS78Wh_$d=g^FRH
%.;j1^'H%(c'L0p'7C3>Xl>]QlWeB6SUN.@%?*^eGCVUMt_\DI=5Qq7Dd-N_7DL9BAU-obTTl;qfek'XC-?/<uJk2:8MD0*4'%Q\_
%5UkF@mY-I\><R'G'N*8Y\.>2)KJ']ifX3]@Xu<JHMnFd2HWs<5>!,;'X:V:jaa*^O+B%u63X>Qbo[j5NIP@,<IMrofJLJJ#q3Xfm
%;SP#LO'boO%<@;+%1Gu:7RPL\qF?+>l2I-CJ@M;\g%[Wg8Sgo>Vl;c%q7c2h72FT^gTi%;erC*s#',5to,G&nHg%f]5]1RZ55)F@
%lu?lFhL<UTA<V1T-&E7D3lC+-[TWl#CYg[nXMdZ8qdu?lCU\#W'nI]beAS;T^?I);PJp0\^.i1H1!.P,gVn"BQaUa#$3OCldu;II
%P[?hRL8L;"7>ZThN`DLA^1qqs%ctR;LS?(X8e6luTKO(L.3[cM*2P^N6L$lFFrI,b>97Ur3HMHmJ_7&giA,JP=o\7Sr)+PWr!g\&
%W%l=&NTLmIg$rs/9F?$,h63,kpP'Nh3!j%:XH53e=VV`*"(iZ)R5B\bnV,2PTf@T?>u,Ga5T?"Inrb=o2+,\'99pGi:kDaQ:i=[D
%Y[TEi9h`j:j&AGqifhaEWgUAN7X7>;>+Ma83*<RV\g]d!gOdM-1jL?%$Gmu.YhCI4^EJmICo=;@!KPnaas,9f'ubhbA@OelOPtg<
%7<hf/jk%[L`X'S<b>XX(atC>0Q+[/.T6ukoE!,Dhj(D:E-6>Vq?($`I5>rR'P32$;C<leRZ51;_"_A&IhH2^MF;BGaWeO>9klnU$
%N1P?]mAunqHpGO0#d"+A<,.5d"H8hBask+!lGnsG6bjGrfLK7E-/s*qB-a5s!![!TC*>r;6-UU6elWkYIC!`3G#FEU?o5%ZjMS*;
%Z[WBs";B!]NZ+[$n&+WEKL)$-_R.p$r?XrYK6Wnl*cg1XSa@gW$lK%VIr>bf)%-bJS7LZc-R`cYRME%Eo9p5HUOp\@Vu&ruYJ'i)
%&'$ojH@<$g8AG.Z0o<[EnP?q"p!`BEs5WmqJ,S>%s74Y-Nc.spa+0NVp%h2JK`62gM*E)J0W-9-]?Y&(oc!Z@c,.OP:'__NT_L5t
%HFL6TUZ-=3H")^Y9(O0-)!"!e[,4Ss&7NkJnHP+fFj(MZPL57LfC>h2BngrQXln1+GCO_+i:.%NhPXD#q<k_A`rFlYg\A\ZhMja)
%miR!u[>3AKnVBEB?8'(jm6<m4s4sl.r9;7W@EkurE0mH5esR&X-PnpV@/*i@k$04fPW+AqaT7NAM8C("oBUi%f[O6r+9$5eLY'<2
%V<7\.AULU-QuI"d1Rhjp/clLiD<;c]IA>EGhYl.ArXJ2Qqfg,V*_*ZB.Q&CU"g/2<pFL8qr&\KZ!5hSf$qD;c=_E.J9m*jG3f^aA
%3sP9jI$_pt>[SJKYjP8)B])D+c"$kJ>n0\1U)Rt+"g2<YIlbFt9E@d,9\X(^Ua0N)-<l(/=tprSLr8V88&nh::4ne-4"P,PF`r4J
%`Fbn%j6&KdHhqu?,JnUs4Mu5TSk^t3BB=oV=fC'V&tlW;'B@2FT:-(-@eX$\hQVll5'0M&FA21rCt5l="hK^k5`qS4X:A8dE-6l,
%e;lj5K,nR;:bO&S7Em6<$YHe:3".mM>"\M>"g0<r^4$AGN#pOc&U8eA4>FL-iPg(lXsnal*8\D=ee#Q6LM*rc:@RW/nsO>?Y)MJ_
%NcWffS8M?L5H2fihu3EOr:-\_5QC!$jlZM)`U3-jOkU5t4*YV7;qQQujMegDj'-a#.GW[nnF?d<HQ!aiD.%a:"63]ZFt[475(,%k
%]2Y;+*kPa"2M/=uq&9cG$e`*1cQ"G$%dO7TVM8;<4-fuOXIq>/Yoe==('Gsi>e2e)LYBE8Q,Y])VQm^#1ohcG93+;8%E:X"n<5]@
%X"o2QX@uAT#QR"3:>GBJN>\1d\AH],`Dm^V%[W5%gr(CCA80B.hB*Y#;7mRALQ&rO?@Z2e?=&l`6RubCU<U$^Zi*ZIfK-TkBHN7m
%nU+9q+&h2*jo/.m*'m$NZl4F3"2C9CJ*q-$<]/0Qo3:Ul6]4I=EO_J_J(!>E`&[41>25%)kHerDYgg"jj\_#4$A&$)=#J8YRe<Vg
%.]HJ/6+nksU<"-qe`86nC"WAO]-cCh[&W\n#HKJ4T7ugmb8W_/NjSHO9.RI7nc`?Bq$L>=QOiInE]L.<b5C;Br-A/)9ppJMb5?Mo
%r-,6d8SdmVl#P9TMt3IB\m,Y9riF:?U65Q*Mr&1WJLq-"[Qoa'?f4qNYOJDtpCHY[G]2'2bEj9O]"C*."KlYCY8Ts<f.X8YU<=?t
%e`A;tSR"FdO3-L^^?P2I?2g_Es4umZ<fh5Yh+V0ER@ahW.$E^--r;,I9G't\4_SbrAUuug(98[n_nZi30JN^E&X1t'Qk^\GS=)f2
%3+Pho1=8>6#"D0RKTbmd]9VVgPVN01"J5EO,?7i=lqq_^g,Mo$PUp)B'<TTr=L8,HDCWg,\Vir*$`0G:;hEGhbsLJHGV(\3)i^[?
%GF7VXKJVHiXOf$^,U--dAZ#=uM)jV**H9*ScND9?"u\+FJ-EhG)/t7[h$e-hZp;`Z.i*alaHLMBZE8i9`"Q_YYgA2J/d;=\h$fr]
%22f#0RFFJQUj4&65WYI<<'*22d718c@N!^O8YVO)r->Um1q8UQSXXb:/WYQ.Qe>3s%2@<t<!3>=?XqjPh%Q2DM3VI[(D,4iH7ZoJ
%27OK-bMnDr8B?k=ak#JL\M:[-Uf6%83l5g1#*6B=iV/c<A5WT`b9Mgn4`DVHMrm`%l4eJ(Jb_2GX2uVM,OdA2QSo!66dT!iI:C9k
%"]hr>MQ6NQGt*c7N`'N+84C$T>;>i@X+pl4$r.saM[F_Z^]HOof6)DMUu0uZVR2(uI_%F'%J6%A-8n/PSI8,;4`D&X3'$6C*u/(N
%Q\7f>igL^\!>W"G5!BmI/sMC"gp-Zt';c3C`<>:?IjN_K_6C.mI:D[,_4D+l+'n`R^%/Jt0=M==oCV\PJ,SE*=bUA#.o$OUFsVM,
%'fV?l0t[DNs1YqpDU86AhuE28++Lb;\2U&WT7?_:%t?WVc)^B=J+[>5+>^*qX"QVPY^A'0I;ZG1r*kM!%pZS2Y4lH2NN>;=Us4=_
%28`TK+F>Fq^f\;V)Cl650.b$R&+Ir46bQH)h'5m.BV-=2SV9BZ`@Hg6Xe$U-(O#"%2tl;1di3ttU(e-e(AA&D'^OEB\cl9O]:hk*
%\+d!f\a8rMM_=f%F\Fj;]rI,3&ss3RCn><+FXj;t,/&K)c4sLfA>3n-8%QS:51Bc>@pV2SbV8aK0p)(t.&n9lS"]Z#%6KTmNm:[C
%03n?odHThJjo>:[.J*\mXfCtS#Vo)I+(.paG]Wq]c3bfdjHG+]+GVqq'f2QI6.X<[BE3C:5JD0Sm-?QU)[n(ej<)rSU)Yu-C]4+J
%q")1mqkHf>[T?f/rMqAh(Y+%K..dotd*n!C2lG"c/jQ&&cu2*lVa<o=]YD1G]Xh,s@i$bgr$2P6#JnQ<"3NH`@6,+L_Q!kIaP]=3
%<3Rm2gLNV^>nlu`Bgk[(fsnrcG%c=@^Ko1h*c$.6HX."O'jJC6+b"WNi:c*W\bWh[rdM!Bid'M2T=8-'`Y)SVG1R,Och5!lQHS[9
%mPTK5HDk2p#29"oG9iI(!d\;;[jK[:'!iB*@4#ZcL_R`*:^]&#8F[2I0fV2Y3*#arN4hcsK")&I@Ojp(YnNco>ZJW;B[7i(YbFrV
%=ncm"F&l-9$Ml#)M^ncKl4im^./o1QkPuZp$3k`P]H^c8W!Yp=AMWjs'+/f'-0\\.q2$V>:Y1+aca3'2YV6[kK?)i!9'dNnk%HH1
%hkDn?Nf+5[XsC&C`b4b&R*G^9F]C+VI%I7h&>].PRlu9k"'ouS2@@O?;+[r,npr/7XN#/%-"YYT,ge<V4@f_'K[ka7i"R7->qn*b
%nJ9%Xr%0*4ad@Zpd,7Hn).BnJ5<u3oE@cI8#mCL"p5(6E9#n'T&G4i!*aG-G@D/D;#'oaC0IkB'U^+slpnudcmqkhQW[Q$ua[kJL
%l]s(d](jmX"8MMn.!8MKmUM8@0nJUhrqijK>Qp#20_Hr+%nT$DUf+'e/f90L8\g-:iA?+[@14YPPX\Kd[7?="+aPkV!&GhR#pPKE
%Q#_[m/"Hsl=9Jd<T\cI6;`eN^rripbl(9Dm).#&!m`aAdS4&EY;Xr^lT:VpDjMq*_h"-p.kK_D:-ZXV<#C^e(#C^M(!FHd9^#icL
%#CLYFJNn34n`VdLo4fBC[3&am5kj?(E_;[;+%_eYGdoq')j8a]C4JG1ME_A@;V#>E83:!r'^^pD\A@s!@<*to<WhBN:+4RV+qD+Z
%/(@n*/0;iG@Bl8i^rmm%M(t?'V;-SJ+-"l:+dE$lXdL'h)3m*%nG6>1[[t</Oi00_2e:OqJZB6MIMp8LhF\B)jQ9_3ldmoQE'Xm%
%Iteu!o,94r^0NOt,16=7?Oh878"R?IOA",25=iJZ+no.ZR!YA-MsC]b(<Ra+QKJ>#T-tV_!'83c@"3iuXBNTI@PVeeP%Gkl%ON?&
%F`90!>Dsj=`JOo4[eR-,_']]1`Faf7=SV?uI5WArSfg2:e(#do#m4V5n.,=Q_%S[!KiSQ*l]UK59%@p?_9IW&5]IbSU(5OEA'dpr
%Nq)>>X21k1#1-MO_nekK^k#Oc%$3@KC<]oS%$%;9VrkR-=)ISp&'!>)TLO*tC<SXVW/Lklga\Zn1j5"!@.(f9PId$s)b<5V)B^Ug
%X'\`)MJ5mcVJ^)*:G_>uc87"`+@ci:@?#1j9]`W.44Qn(lIFYM\s;FI\0PW56rnqL0AaoKN*_o#*:W_kiscf(G"76]G"]JA\Z4R)
%>DtBjmL&_<'&'&ZH^mEmOW94UN$j;oA(pip1p.`-G2&mb6?Ut#a?[jOmT?f?7nCXdN<]9^=@[2mCm[mD!O]qMaMb]OM=aG8J1k[/
%#13`d0Ttht"f7Yjg^KARp/mj/C@PmGF^,GWl2p@YW)$ehd=m4q>oRAU2Hm0oPqU'=0N^j82CEhZ/;E/CWaZPI6@IrSd]_.]n.p@4
%+)sk`>ZVkS>p6tK(E,*E3QqLYr*^nF9Z!(/^Af'Tpnb"SA.)b)/F`PW(;IS1FS4n1`YUkQItU$u)o$KFn$A!\IF1<F33,3n][<2-
%3jd*<@MM:jJ<C`3&kfKU6I?OK5#s6p!KMkG*+RpFU][O23FJ]-O9J@N:,a<,q+FOr<TAr$Z"RT=lW-S0+L&%)_`V/R\71rLpd-Z(
%.)`q92:uIpE5>(@C2g3f)F3,GY6uj))DP8]ngI#)c!kg'bIB<&gC=*iV-Fs7iV*g1IXU[HijX+BW]kh!Yc?/r%P65b`<,l,E]W9E
%eN",;gE7h;TJVXM1u]<;_s4?F>?)INT2TTbDQ)Q.NiDH!mI!+QBp@8-mFhk*S:El#U<hEU[bi!g<sD6l.AIOBfTo>ZO<7<L/NCDK
%;-QslR<9GUC`W]\aWBOE*Z!7:B0WH.^G`I9mi5U1q#97&YO<Ihl/oKkLqg70^E,`:WQ2(Jf+VGB@s<(Gb/.2`W7$NX=u`j5E6d9E
%a/BZ7N)VWc_t]O9n?\UHYBD\<q*e:W/':a+5>Oa"*iqPV)=tsT1.=m/\F2r40c98^f^M<`BE%#X90`<@X<M^Eh;8sNV(#K4a\t4F
%0&tjC4;)!g;*Td?SqLii=f,H,*"@XL_IURSc-`;@\nk4Bn)Y.AU>:bV1RcP4*%W-8[fh\\U'[Z4\WK>96f<s6IF(p&a(\Rd"]mRQ
%'[kn[KKmd&hd-L2IRPadM!B->Ct71sB>&bfE6YN^J+%#S6<B%h7>F>^+G9\Jf,sgB+`kpgno3hkkj5'7ZG_S(<KZCV1$INbo>W)5
%W<#^L7'[T^%AV6\<mbE!BX?B4W8mk&mn'fD#"/OQ5&D.k;3MHGL9gm0.ZNW?PX(V4@n[%nF>HQRiahs4[#eObc:iVj<n(F=<ZH8'
%5Mhc,%oliT/85=U/t,dbGbR08J@ZN?"2XP(U]cZXi3XY&'TuNq0aJJ?o7HC`g>Y$e=YTF!8ALK%k8E'+-^L?\5+NU%&+kPGFtM9n
%p%/)fFU1KUU?N5Zl;^(cSqBXj0Wl"W`Wc\=.l-WlQ:D.N()NRW+jlC'dmZ.\l#fSg#pnp^FGaJlc/QP@g/Rnh)`=ea!>T60\"6ZP
%M<U8e-L[eo\RJ,'D*A=Dju&?3Om.6Y3>Fk4>L?T>1rgP@&Y6-rdAjL_j0qq#.#[XA0Sl)6V0m95"-c2Hc3Id'!:%han^6XCdYD@+
%*L:IlF7*%@[;a)sq3mJ=IO^RH]J>:])+HP@N,WBOoiAB<lXh!Ii*0P9_rq75r&P]b0509VbqS^qjdq`HK\OdV<%l9S,:!D<'Y\rq
%Se5IBrQR0sj.018@D?$KG_IuL^LK3.FY=m1rH(*XPPaRVc0I''BbENHlH#5RcoeBDg((2_9dh3N'9Ht*VkdeRk+\iVp;`)+PkhZt
%QDuD`W1V:K@N^Tn1A$Ih6d\h1]bs*jgVo8\qN=N8a\eN486otKo2l9*8];!$<X5^(gae=N:R/g;B@3gQTuq*\btK(3%IA(%PJ5LR
%=E)?mb'>A^Y?r0dG<^GeJ(\/C*q-;X)=VFJB)$fGAe))(R?M:JcFH<#Y0ER-Hfn2bE]JakIb,QggjefkF7%D*cn>ZS5J]'nF@K5/
%5>3UrLp/TS!D?(idL]H:>;Ne]`lOM#EN-nQeoc@MaAAj:#Bi@=eM'U:8lbb"O2La2G#//pTuO4N>W3GfY54).kq^P"6PMj+QCgdc
%"IpMFl317Qb4\eV<t"O2V-Sm$.97=$a=@\NJ:_<#e_')-_GRM#<IYkb330'1-n;!tl:s2Gn@el<;\i$HKd(]%Ve]f91Uk8AB^hBr
%pUl"-nakIF=-W)`d)lohECR2MYQ[b"<i5Bj\%a;/rKsi,b]`]]5$/MQgh>OhrK^GJnFN%*!qs-3iQ%?5=EVQr7/9:t7!Q^/,@V>,
%`UVkG+U#b_(T`+8QgoMFH)!rb&kCQ/#-*u:;K8O3,:Z<29>*o`d+I_3<'+2^&"lDC\j2>80HA,:#-!<6F>qcn8'7q'fAD[J:Zp]t
%CcI^L7W>0EWs_Q)Z+)F+$RO3))>OWYA4<Jf]MUPFq+udZZ&/nr=&]m9cEfbL$N+@-Kc[?+'2i&ZW=i2VX<[";HSV=a87]kH$DT7:
%f4Gat*t,3DTMHSTKW9f8Tt,HNJ(^1/YB>ZtLEHQerR:4bpYn!Yci3@t+mMM2g.jOZ4$^K`7kab^f/YmcA1pQHICj-iQaH8RdU/`7
%nuY:7H?MWKeWcYLG!a`'fG`'t4,pM$iF`EPkLg/-[YV<gI#"V,@XB(En(H"[Ku,"1*1;:X)nC?i^lpG-de0JA]f)<d:=fqrRr++'
%JlUlHeoAgLLRHB'khOT_27se^[&"<K?\a!QRB6QjFr+C]p=q?9Yq+502O];[<mS?<"0,,8+&RNaZ9iDh.-Dmk"e_s,#-]4[YG1eg
%MtUD.a\u?lO(K$Q/Bj,arA'UV"'Be?^eYV:@7TYq)*^RJ'Y!Oea=XI?lem5`"2J$N7r2YPO@*h%`i<4)3e/&L6]orQ]tDdd85'A)
%KP3LMaXAj%N$s3M)<pd5O#%/M(,G3E%k+0<ARTU1G>:3/FWHGbb[l7RK1Pme/AoII/"dWt%?,GU2SgFs(0BYrU[_@!`%B*8)a:Y<
%8\_b]]B^Z>+V9WL"VGGo>t)mP(uB0V?Tt%=J9ur=GHQ_'!=YC8SaP:OXGm[@!;3Ee^E(9D@EBXnIfD84.^Qk;J38WQKZP]SH]h0/
%Xlc?*oD!<q0+:HAonbR*:iCVQ08g)HX<O?L5i?E#s5/LrZ9GM\k_@e36tSmbI?:&'O52Yi5/H0h1A'`I\Ma$Hb1O0elVei/^\+]e
%oeQC2q8:OF,&PqorW4MULl-RB2Y@8:4!sQ[!LeQj/05CdaLS`MrYe?#[D>Dl0u=]e.Ua_iEPR<`5S[/'DLq!C4R*i3*$=cBi;&Nl
%4MQZk0[aBHf4>cT?c3KRq9DD99$>NPkeeTMi,t0bn<B/,V6d>1`d!#[>befSc+MS4f-i7Y4-NT$<0sehN8T;sj-K&A6ijos8_hlF
%?<G081m]WTNCZ,f(LE"U$Y!D8%;"m#k4TMsFR4m?8U\06E3HK4YDi@(3c9n']/&kZTGJiV"aVoqmC?_FUeR,dg2S8g%D;e7egGXl
%f(+*7U**bY.F*TD/$i6Tb.1ggfY0ONG[6+R8)De[)t:F&=*UmomYA@h/(V-mYB8b"qKu]l/bfEQV&p,;cri8U6c\@0iq(=*E6laH
%]E)s>Ge3``aY%J\K,;ATkY&`T-Cs]J!=dbCL*[(F>:bcLJFEp`/.Z(R$k]'iQR?U>8.k*!A+i$4`ROi7Ee3#R#.k.X#6_eulAegX
%4Ep9FFLZI7h]-];2D"d3k$u!NKe:#j]ITVuP@9))3A")Gr.EA+ZWaY@GX\i/hM@,Qq[:XD4rK:C#;u+gG>Wtrpqq&8Sj=1@`DD-h
%/nQFQPX0C,YSWe;912(TiXIO0RpdsA:2F,E`G>!`\6,bG.=l`?(<]H?S4_Zu>#9ti=O9GEBIH,3;;HD'0=,EAFK^UgbP@iG&_MY4
%R6dWN+AAb?h]A4s@a3Y-4OP!dRp7X7eTc8Ce2Wq#i;uKoiY\?"@f/7')tNgHC5cCZ#"MQgG8`*teTQ\"L]bYX[Q@e80Xlh@oYltS
%&>0TQq\G:<h;\naFsV9pf$]olNS&ANa?[Y?Um1I*0=0YgZe@dj7/%WZ.Ou;)kM:"1W,SsC>:L<9BTYk7/W_o:.nRM$c)$U4SqQd-
%R7:=QEKZaP/^[Y[]V5VL.p-)^GMB=)4aIDT^\r/\Rlt*HP?73aF3GipiRf60TlH*&<FNKd<mk5e0j;j,i#(UfF9j;rel(A#\0BQ-
%+-2nuO/$F<,pi<k[l)[J\Gdn"bSi@qTqk60Pg["q&;ifUjtKm!=CsAU.2t,geh@Wc#eoP;52&o"FH\:bC'E-S=5r`9.FR#n%?/#>
%j5`%d_/GmZ2<il/jQE%<DT7+qd3fN2&hVPBL([,<-R9sj[gPO8'td'8oIQR]`XG=>#:R<HL`V1o>d(*@g26$;**Uc_Lm\i0>-@4.
%':LRfl!fcjePpbpGn_0";>o2SQ((;kd%j]N]FYN/D'&qi'IMOQ4Tc@0ZsAZM.PVGb'\egR86J+nPXhbuRiF,FMts/L6p_bL"NWI]
%#tT@Roa>[C`sB-V7bEb/j#u]6LqTh7Osns_*d(ct.AVfD//@qqEgSu<KqAV4NK+mSR-*R75INU#/d/(B]oC)o^ILTbW;O?'#VMEF
%*"*-)A@L=a$=bp4Am_$u,7FdBOfehG<N=AAWYRU6K`+^e%u3*<GWGK)p#Ce?4#PRH8&<F$>[Dq$/EOcn%a`e$"3RJoDjqc[1.5J;
%45bS>[;&1:6bqO`_5[[JTa9d$]=CU>3(&fdE5[Li-8i?N2@tocY_Huoco/+$P9sm#d8^t"iR+f^F*Q_sn`0*1o*r.*5$l%UX8P\<
%mk;`GMp+sh0]UW-IS^6_qEo=S9m>=BPp<_3cjDE>FG)NAbEoYG?Q->t:sqMjiCRQUaVVJ%nUPHi[)0uh*F\9ap7\nckAg>Bo7N%:
%H@MM.fM;+l*.$8E-1!cT@b^g^n1m3u=JNESBcH`A;="-jSFCS]5<>n+j-i)>gB=YJ1-nF_]![$%n,DE>I?>BKeST!e4@;Z+&omX%
%6s+k#+(ahqD)8Q9b7#D"%Hm;YD:k1EXYYX/r"/Jid>V&)j.\YFgC14R1.+QVldl!^gAUV6h4C=`GcB:=;%?@CpS5,=QP]V$R)7p!
%TCAU`=7Y<a0ShUPY"&sf4$iL1E+`KSLD0+7I5jRe8Q'/m2XK8)SVB<89dSC+#$)TJ[=@CnbpJuh2ZE2<lf46rqBCi3=M&Ugd(KT,
%Kb$L[06)\sq+S):?j5<o-S-IcaGfj&[\7rYJ2KLUQfdokD)1=gIbiau*b`:2IUCrV_"dGD1B'5bReh70DnXl=[.O>S:1*.b<tPX>
%ch#V2`I)?,7u`;R%imZ>g[qT:1-J-0K=QACNqqD)AU8<bQ/]cX\X>%X^%$Vie$Hp7oGh<*eafQ=pQsq4-0D*K&2K`(hrgp-*oD,C
%K7Q$pEp[-m@<7#1n30,c=B]A9daV$-U\5Q,gf!aa8)(5%&KHh74CE5b%e)YL-[=t.p8+V_kE5Tb1ZSq6(hX<0(m%l1blJUIg0s<i
%&_go2KpNZ<_A^_m968b;7P-FWa(2c/S4o!N^Z2=V@G;3mn1m@$fXeJ<C$GVBUn23N]\6]1FQs+Y;[4unE@lb95fD^sIMD.n8)eNd
%jCGGGmo[tpf\XN`\8R48A'GKS]ffa/AG'A;c"ul'KL=-60jj2'>D+eHqmIYQ2P:gHTPV;sYBB\9Z_^#?03H#I/)\"3'a2KVU;c)W
%T6I+>[PiPh4bAHPp>#J`3MKTprnY4a6Mq)['ZFs]5qW"#E2fh=0X)8_`*r^te.HafF]MOF%CTR+!.0s&=hfW_.>/_DNLJLHq;]Cd
%ZT\^<Z*#GI<us&ErLJC$iRuf&$eW%uIqe<LH)+cNKK_!9q>*g#r`.:g5Af33oAo;@JU&I[D:Qfsj&rPJQQ8c/c6Ck?gr8R\Z<,le
%_qE+ED-V8d)-0^KoGqfr>EWe$ed^t.>j*9UJ*-URM33%WbI'<hJOWr6)G8*F/4aL=J/B(F89L9O"I;+5a?+7.40l,[%RKT*d%BOC
%)icK#L@k[?'b-8lg+B6B.%-0IQ7c6Lk=mXlN5AEdWqXX;@GMV<0[[b[r!jK*>4bfpTAcS4]RN:l1aDNUq9j5iLYRs9!-uot<4eT7
%>nMi[6O@&A35ft]XQ-6CA)Fti*7QAZ)ZZZYj3$S<Tc1Ft!_SD#0W5m8q&j49.(I8G-?$HBr>3Bg$7%>M&dZYmFcnA$=g/LKl,i'F
%+VFV!:^(/\bLg.RTWSUs`5Wq4Z.WCZCao>qBcAK<=qHBPTZC=?5`sQjJ9&*eAqXYsCDr7TCh(bs0eM.!.;p<Q@fk7jXA4CofA*%_
%P3SInK"fsm#>4!i%2D;$'bgq!Rfu'r0"`2;ah+7C-uXO8CjV_Fd;gg_H_#6?ECWJs%3.=f2?e1!JN,o(aNTph:ZlT/H=n]h@p+_]
%E`RMqB\2N;?ib`a0#fm.L.Gc?/_X,8mW`M@#2>$(R$9EnZqN;EVf<i7e8_^QUO(hYFRW`b.8W6M5`#][T].cS9FqPpiZM";;Lae"
%TB6N6;'?&H+*Co7$].VN)K[OP7\_K"H&U/G.2_:j%IK>DnS@W<11@rWV@?An`n]d'dNB5?RS$Np'q.\%bOi]NO#V)H!(s-'!b1dQ
%`6]r=Qu1Vp24u3Ik_^#bI6_;9Zf>F68+j%,!Sq:Cp?!,A(<H8$GE>@aT50#=/:cOLe"F5PX/.Wd:_,pWA^RhM"dDf5\l*fgOERji
%bKSU9N)D<P/-i1C4H]pbKkt5e+]<8i-SmhDoECpD,TDBB=e9:n;IIMXC[-Ki^.'Ma^#B*9L>*i4FnRf>m0]fS(4E/VT2#_]5E+05
%<:?9Gc$d^@YdXFS999W>P`RO;&qr:TOeCrt9r\_(l!l</:s4;+*I/6Z1_>A"D7i[5E)k`p83;-VdlAtV,G;GGDf43FK3=;o7W3.>
%Op@5p(+UCC5")bW0et(3Qrmoq^>^=2r,+j/PKd0G47$Wi2Ot&67&]GZc<Ysh0C:l$a"b8CC2+;SlZ`llBIpD/W:(*daHS*H.#9g#
%Jh2ucQ`<5C[!7:e2:?96Xdu0LJEGol0X\[E:LfS^VkL%@r;^NW2KYb-!L-05VU5g(WjXTH1ZAb=DU&p?fNp8]RRBua"Jp3%Un\Jn
%?A1$-%;eHIPF25`9Wg+KGE1ao=B<.ho3`S/otJNKd7u?@buj#Th4AtP4%Q0p%OU2)5to90P\9NIf[<0Y<=*(?:dP>P+bWb#V\8^'
%GBVJT?FF[)f?SdAQ(A2Q1"!rN>;hrkm!0eoEA\+0dh6=V%s:6:";-ajC\Y1NRilX8G-67/8N09T2kXl#8l%A)KiGm%*9rh0#O4"7
%GKgIfKZ[7`9#$T.^fVCLLeJI)oLBE_7hJ%4F%V*Hd/`8l+CF<d]K%frCGmV)>LX<ZOLf_-#W%&MH,ObH)(*:he7K!XG3M)e;M9R4
%A.8ShK:r]-#F'%++d\H<CQd<1'a5=U@p1g^0hfkTgS/(1p4SC2BO:>m1fT5BI>PT$Y&kbAOI5DHi+%laB9:N]*O`?46"F'KhCN<S
%"eHAdW$`LU4CL!t(h/BL@H],R&+!0KcOcR;H:XhT-`S7VaAbW$J=Mkdie2Q`\NlctiA6@3s"sl\\BIG^=<iIK49FnBh\EFbZN>te
%,S`ZRGb8N&TVE]L6q:EBe-S+djCSBL2t&pTipHXF;8JpV*L!QPqK+t7j4.ul()2,.p6.4Fbe?!XA.l<sOY%b$bmp81.+=AVS<ekX
%$<S%%GdI-U7`E?j*ZO\L`l(Z5]2&st.:N;s6]uEmZUOC0H58CQ0fUmTY6.+o!tVBj8OjV$2'Q%*5%\At1GPg`Q/@MeS/GY(1)1Wn
%Ko&&:,a)4+CnPa7TT$pA67!3d.\f"oWrlgk7>;*e].&+e[IY=c-I$+[9CH9ao;kFc@L5Q."m-q2eROPVC#[N6.PUd6UFrQFmQ=<d
%M62[/TXa.J5H'0[Sae7@2&@S1O-'G^-QhES'N!(P#Mih5gY/b^g*%O=M-R+s'c0ga)LZ<^RXuS'1&cP/[*Ou%d:6]FC8LKT%:jX'
%<1tN,*5\5RUk^(:%CDm72j.LLg!Xj%>)Q3VUh8roO`8,V--gma(%Lm/>`iQiG.6k388$KJ6!dNS--3F0T=3%!T55>'Pj>iF$@F:D
%Jmjr8n-BaOJeCJY47Q(+LQ*'lBQR5_W'Q&fOpS9d-;,^=4'^Q.mrG79QAjcV=&I;`7_tP?4"]3l&bQ<U'H0E/^Af/X).sVLWJ"<J
%"kP*7p-b%:Q:2ZShq#ds9D\&RX?g[HhF'`a(q<==?@NG;$o-eXi'BtPASH$pbUpC$m9H4GU#:+QU51#)kKL>mFt![4MA]h-:4C2g
%V/>X(Z=)NWqUDT<*gV?H"u9E![#%mH:28tT6:qc^,'T7:1mZ[gG:>=c\E`Je?En2C1#?0_-&nSbA0uIh7L:*^fhL?q.CpcZgP(e%
%kD?\ubLqO&460P'9@YaXo&H_jMB`5XLM\dN!]S_=F4U-\!br61cZ(>^Ft"fEVN-Q%[%+d,9_b9UWB'+gdqWoNgob?W*gJ9.49S[2
%C*$,Yg7YqnXHpA?3GM>39:kk4..ac*Q(AR7oS_<Dh.PSDVCtBcDdIXp)-Q,j@Eq%:E/_FUJE$_%X2kE>aB?l.;gDStLu@\qpRo_f
%$2/&UI\L>7g.)3l'nBQO0bt<+NZ1mc4XUEJNA?0;k#uWs)d&d7-+],PHj*NrLE'qeK,ptmKm9:BAe]j$P^-N2qkf+#O]hJc\2m\Z
%+Ae-#Ibq;mU^K:G%#!eB<2Q3SWsU09ofPT`JKh&o8G(2V8j*DMbcI@o\TXGN.u#Au.9_@0-6n5#:Z>P>7"IX668ZOs"=WKXP_rr*
%!+j@Ga#TtRh0Bt2OeJNP8<EF4D,<W\$RdiM^L^X&6jDWc26l(A@[HR1774]S%(tDV_1p!]M?0(%?60dT:Z8hH]m(t1APa;u]mS$B
%$=)1>rAM#tF2A9RJAt2?-oAI[+g](2l8I%0%V*L!<&UEUa_tk;-7V\h+='_c":A`,R![I5</S3HLr.&"['ljhQE3k0\0)lrXL%XC
%-!Pn5%O:'="mu:qe)J;IJ_D6o(,O*sRq.:_"KB:4;P'&B-C,P\5eu;ojQs3$'j7<91as[7M5pNmD;G(MjWWb8SOejH7q:9W\X1E+
%L%H'E,2M:G"(NNog5:V!h;h.=bk2g81i"`Q?k62>EAB85jtY7,XHDsFXdVZ=L:%C;Z'[[&eRLKh#3%LQC2@^g>Be^B30*sGrc6r^
%J2%YKemHu$8,K#pa;bl^q:h;!&e]CB^g9BtF3q5%)/M:=:K5+'EkW2YdJ3,b25NfpG-ml2m)8Abe"5\0"'$0\\]%]oOg-NO_0PdT
%deSgUKTRp:f?Y=&g_TXqollMCh(X[@=SjN,3!hTV"G:SS1SqB5Z:B%Y^KI>jc_!$H!AOeC6a4[@+_"[XR+9F&Oc0nrM00C2*]V\.
%`_b+cE+JAbi`O!B`,\8A&Nk^lngr:pi:;Gj"r'+HE$!jH(!m'J!b2mOX&+O:[9kB_+mQ*,Y?0KV7E>=Hr!u4an!O@/^6(oIhujl7
%XDnDt`1ah>'[mY/.$%fTK<=Y2%rq,YHF!rR'a+c)Z;*\%lD.l%>S=%Mc0AG7kh$066Eu6f\DVM[cpUFE<o=&iq+`Je=&?&l@5CkD
%I3Zt2#8+!,Wdlo5Lmd;2CU!MdY-`Tm78s6l*,/]XpeCKT7'l)S;>c3Kl?J>WdT6Y=UV$%T[h)F7PuUh2J8(Q#!@Q7?nS#"WdmF+V
%_AH_<b#F?3c^ZJh=>`E&A6WNLRKH$-(cW^C;!*5WoFu\6M\^dhjKKZ)#_UdDL6+j1jt9NF1%=fb)/Z>M!2r^@3'BXX2C0Yp26fSM
%mpTc3`j!?Rl@Xs5K-Yq_mR\n='hDjY,p\rC)gj:LQUCOd9EHtIY'GW<m8#GK\3MJE#eTB!6"@iPU8SXVO#oAY0]jog_'>P\X!(]S
%3AW]$b:2`q$.R%+YdpRfgb`SpUg6GK@Q"j8RjKbpUiAo5$m'.A3<ep^P)KfUh.Qr#9O)5J&OO?E!d9QCOC0R`).W0/#Be=W:4JP.
%>dX@NW*!056aerUL4eJbLjB8WG_Y3fR5u%\MLsb$B6@-#5#p,%:dpPe=t8(K"b;doQuU8rO>U!7NMXuXLoChP@B5A:es$SV#MaN"
%ETa;TL=KQ8eJ@O$o(ncY'Z]#V@(@K?"qWroJ4>m#?:RU,5f)2eK4lAKU&q&sEAhF!+"ns\>f<`^.p\6oJARLm*<7q%Z56@0Rfbp]
%,p;\,WG"mXpJ\9dk&QDdgHI@G$R@eQid`QM/(=+$`pq/Upill99195NV9t7.!\^56'L<P@d.]\$)gYg6!U7*Z@<LO.c#@^'7+)dI
%dLF,p/l\kYF91rg84'H$-I30FN[hk3E0>Sti;>t[.%m5I)Gl/5*fpc_SdM=j\J7!H8q^EJ("re6Y(<o"JbXUuS51FjnbHHYSBqc[
%Z1P"Mi"+36;G\'#]cd1\D$8W@R"[g1+p`IH'82oNoOT/ZQVIRIAl!TB8(u5^F,8ZGM5CN1@PIuR]?8$Vl1qWZ[Jo!3Jd,_nZi!9f
%r$2i[Ll0&K="0;+L1_VM''Lc0JB&KC>cjET+i<@hic6o?ZJ5=LM[8LA,m,;Ukin:-Vm%Z+DS_SG..XeYAjudH:rCfpbFh-,>#:G!
%\BDO4f=4iPPN32F)R:/^jXKb6d7KUS#JI&/6s[$/:j:ZnUe>tgO!E;k#d#QQW.D5p`+SRN9(G'HMV>t51&TZ^p)gqFO2m7-XVrOi
%>cHlihtfree'Dsj=(7YJIKMfQV&h=f[:`P*62'D]fVUfUbhIi-Nbm1c$RmJYnJnuOO3#D3/D[L/Wi$=orXQ6uM_H[VJ]@CeUsh(#
%!6mS>("G<A5Sa_<#SFLqI-gR]jA\tdkgY^q\HI:Rf)L9a;WZ(_cNqnP5r[pX_Ab!oN-g[2k:3e]BT,D*gBCQ)1alhB!lSk]6J:$h
%'54:pMPqS,C_<CS.3ai\p*m<mH4\Sq-)(PIoZmGJKi7urnmqnl,Qo8ZkH/6:)Us+#i#:SoMRT]IiNhm(ckOITD()(@W]_25rrs*F
%-UAp/M/AnLcWtm"JmJtBBS=tHf/A!s"0DQ'Ri<&Bl'!+BOpYV2\n&DpaR(#K2,Z7CWj*3%DUOS9M_6@!P3\nd%s1)m(t_s4)0GtY
%lL#Pk=@)JdB].O?kJ0'h\/8nYhOIh"3d%SRgLqV.e"AlX%.5SOpAO(>c&jGb0!Qg.=.m9-PI_SbI"^iH`Y.j?iX_)l$Z6d>X]IkG
%R9CWjPc@T]a6ne/?+LIjFh_LOHb5A]Ll9muga``,C>Noq'SH"):k:Ho(RmmqmU>%e\)/Yd'=f>1:$5#eZ3SE,"=:MnPrA`9U#2eP
%^"a,hX%@^dIeh8rit<dZh$=9hX5,]L(A7bAB-A;6"n7k[$HjV\5,XeW(?N.nX:8l"O<:>%31u-a<#ttiAiD9o.@sch4_a'uD@[eB
%p?$5W.SgqLW9jF=(otp;ES=dunF538_^FPAK%Z_UHZ6oK95e;m!3_#becoS$.]S/U)h[-_J`j%2?]5g>K!%_5Y#Yp\"J[1$J!_j@
%TWaOD<Zf"9<Xs%UlaQ_-86B>8!Q7Z3W:?mD3=C;[#c:*O<FtB!LMt"_8K`6Dbi;p(R(#[BDj=eG@&4]n\$]GZ?d=pG&8X8MrQhMY
%PK@]fo,r+N;Tu6f`%0O/Z&O2.\b]Qc43N@;Daga12r)P46r3KSEnss`+q8Z/,cj?@:MMu;3-h/\QXiC_<f!t(3u#FLHS-flU<IqG
%G,.jSip3!k4Gb5c@-A4;$4Ge.#Kos:bT%d9*CR8^[b?TJCdsIPCLX4oaj[9/1e/9b`#lg<IG*e-Hc1/c0%-M[&JYo&f9HE4gG$\d
%Bk8bi5"qf@+;Y`AL6@*A!c?D,gYE]DEUP6d)lkC^<gg4i,6rgP/9V_u;YliklgmW?b+SuAF;J_3e)_T;QD2H>SPi)uM,`5?W/F8h
%p"Y]K+"[,o%&5d!RrpVZ\T:gFL,jJ6>"I!:UJTLUk*B7'frnG&3H5pm5Dg49c8"g+@q/GJ/5]mq<qQ;F<YpDbN3gf8dtbO"^=j;i
%1KlWb'\KQ<!"r.2&eRP"!\,WnB_(uX<[ugUZ0,upSB)=n(7*]?89))1PJ*M`e.#V]fd]a(PW;Jq_pO:lH+CDHW</,C+P-E:&u.;g
%7)IcOCG&aF/$@rTgOg#+oqa?9,:#'aJL$h_d,JY?cTkVX"=S!oo>)hjFr@@@OFF@C_e$Ri3l:EE#lP9#6f@pg7*35QG>p9Q&.F&=
%E/MJV/Kd_tbB>k<"Z9lCDr;snM*u]#%!o+s:tmPI<E!VTgK'-&ARfm_/UT[5es#J7>B_a?ja!cOf;,c`,nA@6+a6!1Xko!),,L_^
%&d<XM#"<'4*[-=6oQSG>1t9[F4J"htc11TAUe>)g=kba;pM*K@<od_:1l-58nB(ifDmM_k3nsIT!F(WY&+(CP*2@/mdk>$GXr=T\
%\a?ha@OlO<0MC9A*<a7;CBDS(Brh\=m>%P&[_7g(,$K^(W&oM`qj8fGN!]X7-KMaD$\AT">7q=/'p-qTdGq0Z=><'AX;Rui6&AV.
%6;Z?3lpDX$ic+&H[fsUN80r$/2CF/4j%g%Pa*npmEl0.Zk,@mX34]^%c$ij.eJbG]I^F"._kPqc1t+f'A6"Oj!e=[Ul'KJ7.!^gc
%%e3(K`bB]9o$bNJ3Y95/U<g/k2IhHrDIl*7.@C_Yh493ir(EtjHl#^IS^gJPaJ*:NOG90;fUXsc[4qcc+o^86\!sq=3g5HZLHRm7
%=7c9*Zd^4lEgsi2F=oGPii'q^(cC8?'VZl<EVl`k`t!I<kFhMtJA0su1o)_dX0B'lH!nCm$PjD,l8_H?6ZNrpJj;Wjlp5lLp^h3M
%@%`+\dS2..&Y+\D6DYNJK<aNnEBd0ZboH;6Pj$-bdj2[fe$G<mAgj<GG:Xk)1,?6h3_Nbd]$C@DSc+HTSk#AsC3@YqilgO""k9CP
%2F\Y=E-[5C8LQ$b/p!s/Ct4-fS&"VZ=O%*,_k[k;#^L<$JBqXjFJts/<ZrF6R**t<R![BE79X!JK-_J"Mh"2j#I^q-h]8\!Z'Z)F
%37%+J.?rLibT!!RMN(QR"hf%Z,oMO`FTKbRc2#heT;H8(30+r_e1r]m=B(;\GW-1)e=muiK9uXm5SZ#Hd.aK/>j6#Bg7d]&GSXYL
%V*tl0h)">mpM0Mf%TSWC5,pE5!pZI'c\9,F6-)MZ$)fOS16jbke@+k6>'TfCWX(kNF'TJZOQiRVQY'(g4jF%q^d8aZgJeF]]Wf\m
%OccWc85(PXb]PXm-_a[W.>%>n&AULB/?:H"\:nC:)p`'B5_]+L2LlZVAN1V\qW#@5kJu]o\Qukb?m]>_!\]g]l3iDZg0:0UNsmiK
%'K&k2lEg8[`aJ0\'M<p,gaSd/Z#uF+j[<`#Q=<kTnC8LkVD:N4)Zu8:%<UNsfcfhn]'Zs/jVq'g3p8kA+UuMdoXJ'uBgIWa;$.Ek
%q&//+857Kllg-WB*c%fk!a$8\4ulYO2jC:&%6SgjIMj/-DF'PtAFK!'5)Q^2AtaiSMk:j@U,AS8C]ooic[KarS7kgA&Kk>[g:He'
%8T=HN)tIled]skMR[FF=g_f^2R-+j&Qj]Dl,HJeW3nmOQ&n]==13cPe"8U5I/In1Dae2nf(5S9_rR<XUD-s,n8HYBBD*%oF9!*$c
%JYtDD6HGjQJGZ:u5a[l/[Tod.$gBAD>\[blUX6f7SH1&!`"6qtn/PWf^&[%U$hLhW_7/g7KNQ1u:h.-[.#YH+@5[\a`CGoMV'&_P
%XJL*%lb&%AO=I&#!GZn@]F2#l89ma;Lg[lc:BQ*8Tt/1<&\k#&1"^n$[ZiZTN%"Epc^06_&$\.MB7."f=Ih0aH&ZDPfR1>K1WhX/
%bfpXQB#stIfJkZ<5^B*RFpo#S<=&g9$mNc3AE6P**rmU#Uk[Ue,TQo.(^e%C8\.HKf6/jHjp-V]ZL,Z""bdeDL2:o(Q$b+kJi=D\
%8OLG<`N?/>LK*I7<Wr$;2"!7qNgJ,qnl\:Z+L#;ReeN**%r)1":@qL*#5pA?F2`\k-<lt?>u[+PGFjY3%`nK<8/<!mn>8M8F4NlH
%'b.9=4on'X!\49M5T7%)'97#c9-?Mb;ru@:;1rh?&4c%@(1WUqa8u.6Kq@":4#i2g>O9OuQ?/ZV/67.+-XaT$XWlXGCqn4Q^X+Hh
%C@0$8`$j0%of?[&@o7&(C.7Zq,W&#E#Jg6HcD8GRDW/rV$AQ_>5m]TQeFP.BciT>"YC53Po.s*C'[5+2&OM\gh!1u/]qJEC>p@?_
%dj?K_fp?G32,7^,s1g;k3snhQD7j+Wc9`1iY>]0\F3jCs&mW*Z[>2b(+L$Zf;W_nAFGu3>\1JutI)j<L+8EmtX>$>ll\Tn=\>f]I
%L'TX0?Xj90=NYQ(NPVj=XLE(_$koQ(Cc.N)72\I*:b)<Ue$0V00Nk2/IN",e\Dr;(=GZB-)lICspN(KH?IQkYZIgpnce8*.)icSf
%0.<K%=P0lO)AK#2-eD%Nk%+P8no.PqLd]'T8JNTl+*gS2P+0M'@YaZ;M"#4]5(Y;)1#/12WIkX'6oXFr!]n=H,m/<s3bZ&KJ6n#4
%/Z%3qKEje`Iq3'GE5b3[KF^obITFaP%jLj`p)kupJ;gg-hAW-&Fs^,klWA`ff!2$VGpnFC>hR^Aj)fhtB:Bd_ZF$<2K0iqoER[e5
%ZQ%8b9lCF.$-[o0l$sBj#HaXAZdP3)OC2UY*WN.@DbOf=WK#q(T)GEmUnbXE=_mQ^.8D_7h!uq3;C'9G'Sg3"(e3PpY&*.ebtl_`
%6WPJV3'QOd-N4@gf/SKX!E`E@1C0FC%lC.qD3E`Z4&8>U?g6Bdai'&@`&+7$Dfb=h*Y#S9c:$GVZY8Umd\)8-M!tnp:_K_Tapg5#
%8,bJ:2Kp0ZCOWk3CEGBW5fL*@+HRpn)aInh839/4/%Q4J`E&[-Sj!9a7'['^j<EXeKc8O]Uha\t4?[*,khZa:_ENUOUH:O`7Bf@c
%:]c8aSA3lWVJQAa@@e,F"p@a5.4u0]>N&KHLBeD\f+)_'OSu4!L^<r[q3[c_3#rA4hb5?Ka@5-n@=,&EUPFI/+O>)RLJ^:\cJ2fs
%'%QVqF.AGkWQ[:4jh\L72Wo_<d:T3ckS_O/D93fmgX2t[ArjQccZX>)LmBfpDo3\!$DPN7T=E;j%1SIEB^)CdM[L:sUtZ^'[/[VC
%Uuu^e;!M\hQI?B!kY?pIKUG7FbJlieS03)_b[Jqm+5c=lWPu6gn)K.K'0i(G5Y+qh*>ln]+`CPG0\;_n9U7.(dnnX%=3,d7]$WA=
%r**qp(VC!\h`@C,E5\VSGIb-4WBJA=>gkB,C")&eNHJiK\g<e<'*V@tEtJ_3>aRrh$0Ro5TI?AaX#UGH3<=H3<!_UkF)j@D+RZ[W
%JASh(I;*@PU9$5(h%8`j*GEQiS$eH;l\ZZIWGFY1i4al/ge<EPS^^Gk,V\;mVhjBBG(\!s99o*rN"$1?^agL0criCRLM"TLR`o`*
%jq'6alXOG>kbN]u@l9NC.+0cY[PJ^%<cKedgOsos698?>,C_F:qnhcaI?Y*GgU_8ob1BIIRX"tJ##$:Zc/'>$)=e?t&?V4hY*%H#
%<f0Y)'p)3/iLZ63g#S7bmrIk>^lglZ-;S*T4,Aj+C!%L5Pa(D8_nD<UXW-%ngc(Yf!iV<iK6o7GMS`W&D(G9;:DML$I*UpNM9:W[
%m(L5s%QBU=rN5:FemMn,-/N29_4BN.K:CXS]e4/[:2E!)I6Hc2>R]Ak+/`b?5XR[NDg`#DKk\,ai)Z(3<,E<.bnnPMkg5;;F1]%L
%\LTb\UJ</AMEnS;ME,`=cTp.JPIXhJ1Y30rHTCKh=`;$t@^G#a3<OrrR!GY!Wdi;e2&U9'mWc:[88os&:oH-'L&`+PMlC(1ITH7[
%&T@isLcW8tJ3n=7[-#nFk%gL,[Nia(dDfH5:9SQkcgX+T7`=QtLi<m6)<quCKH+QiA`O=o\=JBQ1d=3OZ?`QFDMIN+\W:\O=99QQ
%%<V]&eD/9C1lPd-AetLUd`+P9\+=nnDn,u5Os(^=FaSp4ZiNVb-fQW0d;R9#/0$K7('?B?$@\#8rW,QH"b6sJ)$!\$!^LY3Ksj;]
%RZVSq_.2$_)pEX/&fAOgW*/fRlJZH@b%INT_Q#bJeBK)QlqBaKS(!9]gOLKi_!/lG<q6>d6[nX.O[kl$3p\Rme5:`)bX4G+o6"+*
%*&Lslb->'GQ%j6;I5H"a0X,kt/t-..d;'#PG?QoJFIoB.p9jj3OZ(Y%)\`)qD%g0M%1kPfG%h$mjYttk%B^7I`9kuB`c+??m*^VT
%!&uPPV%!Nd4/ep]iPGi)c\o/Mc9ZQ_9,f#&'8s6FH\F/J:"neXFa]N5GkA;dmk/IYhdH\#G%n!P@:m-U@2D3,i$*!&F9qgjCtRoR
%l#IRu5VO](@:M-H`Mi.?7TZipd+a6`K]l8)7q(Eu82s/p3h<0_s2*1g,G<4bfqiP;MmP@F.dr;&n^)[s2L;bsOh1o=[WYkV->U*r
%c8+8n=f\@j$7Asqe#S?s]<#G\ZV.@#!Aa)*7Flu5f6<Q=]F@Wu7Fkj<<1hIA#$PS`r`3/(o-!]&,&A[o0eA#YfX`]`Nl$O?CZM`P
%_T$roQk$uff87ji&[ogp5j]h5n<_dQB+[$q5bV_*_R@bPC">KuCqoa9SlquST8>`SXmkJ%+<Q)::dRV\=(O\Fm]YA`X(k`*JlOhb
%#qWP`jLet[?9e\t[2FX]"GmJJ+[*q3=K]1LRq9qJEt'/-)<Jp[BQ/p!`1Si@#G+91+9V2"I`XQP9HDaf/!WtUUmj(3&e[8j$>kXq
%Ma66)!RqKUO!*Aj^?H-HEL>ZSkuJZ)TKY%@',4Vq/20E0fl%77<C/f9MD`Ar:Yg#Wj)).ddU=1+/_/3u!^n:]DTl-T/B!ir$ks?h
%T]sef8U!Li);``WZWXd5gSXU&pC\]J'B4,)-Q,2B@c:r71s=>M07XWHG1cTNO&1g/AT'KHSJtk%\95!fp$q53^kIAUB8OfL(p'Mn
%)#KE4Q*OmH;]-Jo%(`T#WmN0e"3<OahE;!hiNM8LT][uE>@hL!Yo4W6+TLS=h;P74KBJfWmlOdiFig\"<ifo#cADe$1l>LZJVO<E
%PnAk%%^8mNhrRK@_OJRM]ejKAhB0>5_0BaN>6T3H%T`m(On8FG"(mOein`Op$Vs9;lg=\JI8mA.lhdZPSrm%Gn=T^7:Oi5]+5[%i
%LYr("4%l)gSKt7ODuRd!T"b6RGf)I6S,ek3GUkB-7cMrk]62H?4tZg"V(E+"[.)Q8Y?or"GXi-+C]5(;q4F"(orQrLkffQH<pisW
%"?,uEkN#r\grf7n=^A4mHaREa3G_+\/o\)QN0[i.(rdZ#D[k_;T=-b=(L5i=:4INa#'&kN\j_QBI+fq;h/@4J'?<>mYu,oCgE41&
%p?gU0n?s"Cm0*GtFoq^5GJF.IV]R!IWb86Rh+%j^*A*/3*JS0IN(L*3>+gO#>RNXkU_?6D\_R`30VX])H!k#tCN7<uB+t[FjT07,
%J[`*@E"V]tng0'LD8[nTNS:W2LG!E4P>3*KZ/j(I)K1$7+'Ke&'&U6pf)DQ^h0Z__AKR$bA,?1?0f=@UHNabiQCD%JYIdfIi*0Q$
%Vg(K0^Wo==Jd-\TI0-6bi@K>XI3Po^qJ@Fe:Y@+7AU99!mIdoE<UHH48hTA0asVR7jV(s#3IK"5q]gh,B8$=+?pq0<HrB&I'lq)`
%G1\WJcj9r0Fal.4rFn2Gpo)@02_;ObIV=LKP7FU?C]@7sD`qC?ZAlqj0n!!^DlW_0Q%-]Or,\>)?XB"M!>LeS:9&]Y-WN@h<=oHD
%$p@uhLtD%d!QGSK$YNH\=DK?,<-^_oFmK?55-^;$TC>F;Df=9Nnb/X[Z6gSlq/$(.Q#Afk^G8=?b*]oBni'SJVTQYb<K>dp8A4mZ
%X3*Y5YN^;X$]<h:qN#'%,%e24rXZDtR%pq(:S9';K1QS(N,m17l*\D3:'sTr0Y#)-[?A?6N&939"hhbY\mjmGrh].W@-YfD9;=E3
%rLjT<4Pnf1_qJ-.[5r]ajhUfBMTnWLXU@8'n8s2ihC`0h7ci@6^>8CpH2$4/qd4Z!n/f-,nJ0k<9\%6,VnCnY2Ck!S^+&OMF7+<l
%C^f5"p;YZ;rpXWk_g'#jmG[hq4#Vm^B@\YDr8H*_$,#3]2KAN04WDAp4n%-#n?s"Cm0*HDms,ih4:<f08\nsCM[%b?"agsC4\4sa
%Yd04&k65X4c)c60R/X8Ho+aai^C#%a0_eA(ot,U,b]q3Zf\83UpP5VA'XiL!<:YnVAcA`ff]D3F.lJ?bG:p*Ws60Yj:R;UFG[-9j
%Rign>O7_R)HH"]kKX[YfhW=gP/)P74H_7N&Hl4lkU2q4[8#:N0i"J7gn;4:TQta?,!Eq3'E/;s4!!h"ImUm7E?Ij^]]&c;T^aZ;k
%T?pGh:\:U&-b:ecq3;%o%6CKXg&.$@T06IEA-6j`4PuCuRhC3Linq$Ss*PU](K]T:ocSWG.Ii69Q2!aK'oZ6`&@*<10`P<slj@Cd
%(RMH@7tMf7^"3c`9A3WSAC+21:\:U(-b?>9q3;%o%6>s.g&.$HT06IEA-6j`4PuCuRhC3Linq$SDd`,-[n:=^qb$e;L$l'mJ,IXQ
%GJF-4r7g-,pq+T8s8'VTIeh.fI.ok>s5tL'f,qa,rQm'Eq`"QQa7''!_o)45reT935Q'jBe&+EMiJ0Ysl)-cDnF4JJq<@n[_2l#H
%I.uH8rqh3@gV<Ra7pPf/~>
%AI9_PrivateDataEnd
